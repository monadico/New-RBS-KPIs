"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendors-node_modules_recharts_es6_a";
exports.ids = ["vendors-node_modules_recharts_es6_a"];
exports.modules = {

/***/ "(ssr)/./node_modules/recharts/es6/animation/Animate.js":
/*!********************************************************!*\
  !*** ./node_modules/recharts/es6/animation/Animate.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Animate: () => (/* binding */ Animate),\n/* harmony export */   AnimationManagerContext: () => (/* binding */ AnimationManagerContext)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var es_toolkit_compat_isEqual__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! es-toolkit/compat/isEqual */ \"(ssr)/./node_modules/es-toolkit/compat/isEqual.js\");\n/* harmony import */ var es_toolkit_compat_isEqual__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(es_toolkit_compat_isEqual__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _AnimationManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AnimationManager */ \"(ssr)/./node_modules/recharts/es6/animation/AnimationManager.js\");\n/* harmony import */ var _easing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./easing */ \"(ssr)/./node_modules/recharts/es6/animation/easing.js\");\n/* harmony import */ var _configUpdate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./configUpdate */ \"(ssr)/./node_modules/recharts/es6/animation/configUpdate.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/recharts/es6/animation/util.js\");\n/* harmony import */ var _timeoutController__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./timeoutController */ \"(ssr)/./node_modules/recharts/es6/animation/timeoutController.js\");\nvar _excluded = [\n    \"children\",\n    \"begin\",\n    \"duration\",\n    \"attributeName\",\n    \"easing\",\n    \"isActive\",\n    \"from\",\n    \"to\",\n    \"canBegin\",\n    \"onAnimationEnd\",\n    \"shouldReAnimate\",\n    \"onAnimationReStart\",\n    \"animationManager\"\n];\nfunction _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function(n) {\n        for(var e = 1; e < arguments.length; e++){\n            var t = arguments[e];\n            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n        }\n        return n;\n    }, _extends.apply(null, arguments);\n}\nfunction _objectWithoutProperties(e, t) {\n    if (null == e) return {};\n    var o, r, i = _objectWithoutPropertiesLoose(e, t);\n    if (Object.getOwnPropertySymbols) {\n        var n = Object.getOwnPropertySymbols(e);\n        for(r = 0; r < n.length; r++)o = n[r], -1 === t.indexOf(o) && ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n    }\n    return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n    if (null == r) return {};\n    var t = {};\n    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {\n        if (-1 !== e.indexOf(n)) continue;\n        t[n] = r[n];\n    }\n    return t;\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n\n\n\n\n\n\n\n\nfunction createDefaultAnimationManager() {\n    return (0,_AnimationManager__WEBPACK_IMPORTED_MODULE_1__.createAnimateManager)(new _timeoutController__WEBPACK_IMPORTED_MODULE_2__.RequestAnimationFrameTimeoutController());\n}\nclass AnimateImpl extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n    constructor(props, context){\n        super(props, context);\n        _defineProperty(this, \"mounted\", false);\n        _defineProperty(this, \"manager\", null);\n        _defineProperty(this, \"stopJSAnimation\", null);\n        _defineProperty(this, \"unSubscribe\", null);\n        var { isActive, attributeName, from, to, children, duration, animationManager } = this.props;\n        this.manager = animationManager;\n        this.handleStyleChange = this.handleStyleChange.bind(this);\n        this.changeStyle = this.changeStyle.bind(this);\n        if (!isActive || duration <= 0) {\n            this.state = {\n                style: {}\n            };\n            // if children is a function and animation is not active, set style to 'to'\n            if (typeof children === 'function') {\n                this.state = {\n                    style: to\n                };\n            }\n            return;\n        }\n        if (from) {\n            if (typeof children === 'function') {\n                this.state = {\n                    style: from\n                };\n                return;\n            }\n            this.state = {\n                style: attributeName ? {\n                    [attributeName]: from\n                } : from\n            };\n        } else {\n            this.state = {\n                style: {}\n            };\n        }\n    }\n    componentDidMount() {\n        var { isActive, canBegin } = this.props;\n        this.mounted = true;\n        if (!isActive || !canBegin) {\n            return;\n        }\n        this.runAnimation(this.props);\n    }\n    componentDidUpdate(prevProps) {\n        var { isActive, canBegin, attributeName, shouldReAnimate, to, from: currentFrom } = this.props;\n        var { style } = this.state;\n        if (!canBegin) {\n            return;\n        }\n        if (!isActive) {\n            var newState = {\n                style: attributeName ? {\n                    [attributeName]: to\n                } : to\n            };\n            if (this.state && style) {\n                if (attributeName && style[attributeName] !== to || !attributeName && style !== to) {\n                    this.setState(newState);\n                }\n            }\n            return;\n        }\n        if (es_toolkit_compat_isEqual__WEBPACK_IMPORTED_MODULE_3___default()(prevProps.to, to) && prevProps.canBegin && prevProps.isActive) {\n            return;\n        }\n        var isTriggered = !prevProps.canBegin || !prevProps.isActive;\n        this.manager.stop();\n        if (this.stopJSAnimation) {\n            this.stopJSAnimation();\n        }\n        var from = isTriggered || shouldReAnimate ? currentFrom : prevProps.to;\n        if (this.state && style) {\n            var _newState = {\n                style: attributeName ? {\n                    [attributeName]: from\n                } : from\n            };\n            if (attributeName && style[attributeName] !== from || !attributeName && style !== from) {\n                this.setState(_newState);\n            }\n        }\n        this.runAnimation(_objectSpread(_objectSpread({}, this.props), {}, {\n            from,\n            begin: 0\n        }));\n    }\n    componentWillUnmount() {\n        this.mounted = false;\n        var { onAnimationEnd } = this.props;\n        if (this.unSubscribe) {\n            this.unSubscribe();\n        }\n        this.manager.stop();\n        if (this.stopJSAnimation) {\n            this.stopJSAnimation();\n        }\n        if (onAnimationEnd) {\n            onAnimationEnd();\n        }\n    }\n    handleStyleChange(style) {\n        this.changeStyle(style);\n    }\n    changeStyle(style) {\n        if (this.mounted) {\n            this.setState({\n                style\n            });\n        }\n    }\n    runJSAnimation(props) {\n        var { from, to, duration, easing, begin, onAnimationEnd, onAnimationStart } = props;\n        var startAnimation = (0,_configUpdate__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(from, to, (0,_easing__WEBPACK_IMPORTED_MODULE_5__.configEasing)(easing), duration, this.changeStyle, this.manager.getTimeoutController());\n        var finalStartAnimation = ()=>{\n            this.stopJSAnimation = startAnimation();\n        };\n        this.manager.start([\n            onAnimationStart,\n            begin,\n            finalStartAnimation,\n            duration,\n            onAnimationEnd\n        ]);\n    }\n    runAnimation(props) {\n        var { begin, duration, attributeName, to: propsTo, easing, onAnimationStart, onAnimationEnd, children } = props;\n        this.unSubscribe = this.manager.subscribe(this.handleStyleChange);\n        if (typeof easing === 'function' || typeof children === 'function' || easing === 'spring') {\n            this.runJSAnimation(props);\n            return;\n        }\n        var to = attributeName ? {\n            [attributeName]: propsTo\n        } : propsTo;\n        var transition = (0,_util__WEBPACK_IMPORTED_MODULE_6__.getTransitionVal)(Object.keys(to), duration, easing);\n        this.manager.start([\n            onAnimationStart,\n            begin,\n            _objectSpread(_objectSpread({}, to), {}, {\n                transition\n            }),\n            duration,\n            onAnimationEnd\n        ]);\n    }\n    render() {\n        var _this$props = this.props, { children, begin, duration, attributeName, easing, isActive, from, to, canBegin, onAnimationEnd, shouldReAnimate, onAnimationReStart, animationManager } = _this$props, others = _objectWithoutProperties(_this$props, _excluded);\n        var count = react__WEBPACK_IMPORTED_MODULE_0__.Children.count(children);\n        var stateStyle = this.state.style;\n        if (typeof children === 'function') {\n            return children(stateStyle);\n        }\n        if (!isActive || count === 0 || duration <= 0) {\n            return children;\n        }\n        var cloneContainer = (container)=>{\n            var { style = {}, className } = container.props;\n            var res = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(container, _objectSpread(_objectSpread({}, others), {}, {\n                style: _objectSpread(_objectSpread({}, style), stateStyle),\n                className\n            }));\n            return res;\n        };\n        if (count === 1) {\n            // @ts-expect-error TODO - fix the type error\n            return cloneContainer(react__WEBPACK_IMPORTED_MODULE_0__.Children.only(children));\n        }\n        // @ts-expect-error TODO - fix the type error\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null, react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children, (child)=>cloneContainer(child)));\n    }\n}\n_defineProperty(AnimateImpl, \"displayName\", 'Animate');\n_defineProperty(AnimateImpl, \"defaultProps\", {\n    begin: 0,\n    duration: 1000,\n    attributeName: '',\n    easing: 'ease',\n    isActive: true,\n    canBegin: true,\n    onAnimationEnd: ()=>{},\n    onAnimationStart: ()=>{}\n});\nvar AnimationManagerContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nfunction Animate(props) {\n    var _ref, _props$animationManag;\n    var contextAnimationManager = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(AnimationManagerContext);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AnimateImpl, _extends({}, props, {\n        animationManager: (_ref = (_props$animationManag = props.animationManager) !== null && _props$animationManag !== void 0 ? _props$animationManag : contextAnimationManager) !== null && _ref !== void 0 ? _ref : createDefaultAnimationManager()\n    }));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/recharts/es6/animation/Animate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/recharts/es6/animation/AnimationManager.js":
/*!*****************************************************************!*\
  !*** ./node_modules/recharts/es6/animation/AnimationManager.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAnimateManager: () => (/* binding */ createAnimateManager)\n/* harmony export */ });\n/**\n * Represents a single item in the ReactSmoothQueue.\n * The item can be:\n * - A number representing a delay in milliseconds.\n * - An object representing a style change\n * - A StartAnimationFunction that starts eased transition and calls different render\n *      because of course in Recharts we have to have three ways to do everything\n * - An arbitrary function to be executed\n */ function createAnimateManager(timeoutController) {\n    var currStyle = {};\n    var handleChange = ()=>null;\n    var shouldStop = false;\n    var cancelTimeout = null;\n    var setStyle = (_style)=>{\n        if (shouldStop) {\n            return;\n        }\n        if (Array.isArray(_style)) {\n            if (!_style.length) {\n                return;\n            }\n            var styles = _style;\n            var [curr, ...restStyles] = styles;\n            if (typeof curr === 'number') {\n                cancelTimeout = timeoutController.setTimeout(setStyle.bind(null, restStyles), curr);\n                return;\n            }\n            setStyle(curr);\n            cancelTimeout = timeoutController.setTimeout(setStyle.bind(null, restStyles));\n            return;\n        }\n        if (typeof _style === 'object') {\n            currStyle = _style;\n            handleChange(currStyle);\n        }\n        if (typeof _style === 'function') {\n            _style();\n        }\n    };\n    return {\n        stop: ()=>{\n            shouldStop = true;\n        },\n        start: (style)=>{\n            shouldStop = false;\n            if (cancelTimeout) {\n                cancelTimeout();\n                cancelTimeout = null;\n            }\n            setStyle(style);\n        },\n        subscribe: (_handleChange)=>{\n            handleChange = _handleChange;\n            return ()=>{\n                handleChange = ()=>null;\n            };\n        },\n        getTimeoutController: ()=>timeoutController\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVjaGFydHMvZXM2L2FuaW1hdGlvbi9BbmltYXRpb25NYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Ozs7Q0FRQyxHQUVNLFNBQVNBLHFCQUFxQkMsaUJBQWlCO0lBQ3BELElBQUlDLFlBQVksQ0FBQztJQUNqQixJQUFJQyxlQUFlLElBQU07SUFDekIsSUFBSUMsYUFBYTtJQUNqQixJQUFJQyxnQkFBZ0I7SUFDcEIsSUFBSUMsV0FBV0MsQ0FBQUE7UUFDYixJQUFJSCxZQUFZO1lBQ2Q7UUFDRjtRQUNBLElBQUlJLE1BQU1DLE9BQU8sQ0FBQ0YsU0FBUztZQUN6QixJQUFJLENBQUNBLE9BQU9HLE1BQU0sRUFBRTtnQkFDbEI7WUFDRjtZQUNBLElBQUlDLFNBQVNKO1lBQ2IsSUFBSSxDQUFDSyxNQUFNLEdBQUdDLFdBQVcsR0FBR0Y7WUFDNUIsSUFBSSxPQUFPQyxTQUFTLFVBQVU7Z0JBQzVCUCxnQkFBZ0JKLGtCQUFrQmEsVUFBVSxDQUFDUixTQUFTUyxJQUFJLENBQUMsTUFBTUYsYUFBYUQ7Z0JBQzlFO1lBQ0Y7WUFDQU4sU0FBU007WUFDVFAsZ0JBQWdCSixrQkFBa0JhLFVBQVUsQ0FBQ1IsU0FBU1MsSUFBSSxDQUFDLE1BQU1GO1lBQ2pFO1FBQ0Y7UUFDQSxJQUFJLE9BQU9OLFdBQVcsVUFBVTtZQUM5QkwsWUFBWUs7WUFDWkosYUFBYUQ7UUFDZjtRQUNBLElBQUksT0FBT0ssV0FBVyxZQUFZO1lBQ2hDQTtRQUNGO0lBQ0Y7SUFDQSxPQUFPO1FBQ0xTLE1BQU07WUFDSlosYUFBYTtRQUNmO1FBQ0FhLE9BQU9DLENBQUFBO1lBQ0xkLGFBQWE7WUFDYixJQUFJQyxlQUFlO2dCQUNqQkE7Z0JBQ0FBLGdCQUFnQjtZQUNsQjtZQUNBQyxTQUFTWTtRQUNYO1FBQ0FDLFdBQVdDLENBQUFBO1lBQ1RqQixlQUFlaUI7WUFDZixPQUFPO2dCQUNMakIsZUFBZSxJQUFNO1lBQ3ZCO1FBQ0Y7UUFDQWtCLHNCQUFzQixJQUFNcEI7SUFDOUI7QUFDRiIsInNvdXJjZXMiOlsiL3Jvb3QvaHlwZXJzeW5jLWNsaWVudC1weXRob24vZnJvbnRlbmQtZGVwbG95bWVudC9ub2RlX21vZHVsZXMvcmVjaGFydHMvZXM2L2FuaW1hdGlvbi9BbmltYXRpb25NYW5hZ2VyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmVwcmVzZW50cyBhIHNpbmdsZSBpdGVtIGluIHRoZSBSZWFjdFNtb290aFF1ZXVlLlxuICogVGhlIGl0ZW0gY2FuIGJlOlxuICogLSBBIG51bWJlciByZXByZXNlbnRpbmcgYSBkZWxheSBpbiBtaWxsaXNlY29uZHMuXG4gKiAtIEFuIG9iamVjdCByZXByZXNlbnRpbmcgYSBzdHlsZSBjaGFuZ2VcbiAqIC0gQSBTdGFydEFuaW1hdGlvbkZ1bmN0aW9uIHRoYXQgc3RhcnRzIGVhc2VkIHRyYW5zaXRpb24gYW5kIGNhbGxzIGRpZmZlcmVudCByZW5kZXJcbiAqICAgICAgYmVjYXVzZSBvZiBjb3Vyc2UgaW4gUmVjaGFydHMgd2UgaGF2ZSB0byBoYXZlIHRocmVlIHdheXMgdG8gZG8gZXZlcnl0aGluZ1xuICogLSBBbiBhcmJpdHJhcnkgZnVuY3Rpb24gdG8gYmUgZXhlY3V0ZWRcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQW5pbWF0ZU1hbmFnZXIodGltZW91dENvbnRyb2xsZXIpIHtcbiAgdmFyIGN1cnJTdHlsZSA9IHt9O1xuICB2YXIgaGFuZGxlQ2hhbmdlID0gKCkgPT4gbnVsbDtcbiAgdmFyIHNob3VsZFN0b3AgPSBmYWxzZTtcbiAgdmFyIGNhbmNlbFRpbWVvdXQgPSBudWxsO1xuICB2YXIgc2V0U3R5bGUgPSBfc3R5bGUgPT4ge1xuICAgIGlmIChzaG91bGRTdG9wKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChBcnJheS5pc0FycmF5KF9zdHlsZSkpIHtcbiAgICAgIGlmICghX3N0eWxlLmxlbmd0aCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB2YXIgc3R5bGVzID0gX3N0eWxlO1xuICAgICAgdmFyIFtjdXJyLCAuLi5yZXN0U3R5bGVzXSA9IHN0eWxlcztcbiAgICAgIGlmICh0eXBlb2YgY3VyciA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgY2FuY2VsVGltZW91dCA9IHRpbWVvdXRDb250cm9sbGVyLnNldFRpbWVvdXQoc2V0U3R5bGUuYmluZChudWxsLCByZXN0U3R5bGVzKSwgY3Vycik7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHNldFN0eWxlKGN1cnIpO1xuICAgICAgY2FuY2VsVGltZW91dCA9IHRpbWVvdXRDb250cm9sbGVyLnNldFRpbWVvdXQoc2V0U3R5bGUuYmluZChudWxsLCByZXN0U3R5bGVzKSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICh0eXBlb2YgX3N0eWxlID09PSAnb2JqZWN0Jykge1xuICAgICAgY3VyclN0eWxlID0gX3N0eWxlO1xuICAgICAgaGFuZGxlQ2hhbmdlKGN1cnJTdHlsZSk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgX3N0eWxlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBfc3R5bGUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB7XG4gICAgc3RvcDogKCkgPT4ge1xuICAgICAgc2hvdWxkU3RvcCA9IHRydWU7XG4gICAgfSxcbiAgICBzdGFydDogc3R5bGUgPT4ge1xuICAgICAgc2hvdWxkU3RvcCA9IGZhbHNlO1xuICAgICAgaWYgKGNhbmNlbFRpbWVvdXQpIHtcbiAgICAgICAgY2FuY2VsVGltZW91dCgpO1xuICAgICAgICBjYW5jZWxUaW1lb3V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICAgIHNldFN0eWxlKHN0eWxlKTtcbiAgICB9LFxuICAgIHN1YnNjcmliZTogX2hhbmRsZUNoYW5nZSA9PiB7XG4gICAgICBoYW5kbGVDaGFuZ2UgPSBfaGFuZGxlQ2hhbmdlO1xuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgaGFuZGxlQ2hhbmdlID0gKCkgPT4gbnVsbDtcbiAgICAgIH07XG4gICAgfSxcbiAgICBnZXRUaW1lb3V0Q29udHJvbGxlcjogKCkgPT4gdGltZW91dENvbnRyb2xsZXJcbiAgfTtcbn0iXSwibmFtZXMiOlsiY3JlYXRlQW5pbWF0ZU1hbmFnZXIiLCJ0aW1lb3V0Q29udHJvbGxlciIsImN1cnJTdHlsZSIsImhhbmRsZUNoYW5nZSIsInNob3VsZFN0b3AiLCJjYW5jZWxUaW1lb3V0Iiwic2V0U3R5bGUiLCJfc3R5bGUiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJzdHlsZXMiLCJjdXJyIiwicmVzdFN0eWxlcyIsInNldFRpbWVvdXQiLCJiaW5kIiwic3RvcCIsInN0YXJ0Iiwic3R5bGUiLCJzdWJzY3JpYmUiLCJfaGFuZGxlQ2hhbmdlIiwiZ2V0VGltZW91dENvbnRyb2xsZXIiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/recharts/es6/animation/AnimationManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/recharts/es6/animation/configUpdate.js":
/*!*************************************************************!*\
  !*** ./node_modules/recharts/es6/animation/configUpdate.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alpha: () => (/* binding */ alpha),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/recharts/es6/animation/util.js\");\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n\nvar alpha = (begin, end, k)=>begin + (end - begin) * k;\nvar needContinue = (_ref)=>{\n    var { from, to } = _ref;\n    return from !== to;\n};\n/*\n * @description: cal new from value and velocity in each stepper\n * @return: { [styleProperty]: { from, to, velocity } }\n */ var calStepperVals = (easing, preVals, steps)=>{\n    var nextStepVals = (0,_util__WEBPACK_IMPORTED_MODULE_0__.mapObject)((key, val)=>{\n        if (needContinue(val)) {\n            var [newX, newV] = easing(val.from, val.to, val.velocity);\n            return _objectSpread(_objectSpread({}, val), {}, {\n                from: newX,\n                velocity: newV\n            });\n        }\n        return val;\n    }, preVals);\n    if (steps < 1) {\n        return (0,_util__WEBPACK_IMPORTED_MODULE_0__.mapObject)((key, val)=>{\n            if (needContinue(val)) {\n                return _objectSpread(_objectSpread({}, val), {}, {\n                    velocity: alpha(val.velocity, nextStepVals[key].velocity, steps),\n                    from: alpha(val.from, nextStepVals[key].from, steps)\n                });\n            }\n            return val;\n        }, preVals);\n    }\n    return calStepperVals(easing, nextStepVals, steps - 1);\n};\nfunction createStepperUpdate(from, to, easing, interKeys, render, timeoutController) {\n    var preTime;\n    var stepperStyle = interKeys.reduce((res, key)=>_objectSpread(_objectSpread({}, res), {}, {\n            [key]: {\n                from: from[key],\n                velocity: 0,\n                to: to[key]\n            }\n        }), {});\n    var getCurrStyle = ()=>(0,_util__WEBPACK_IMPORTED_MODULE_0__.mapObject)((key, val)=>val.from, stepperStyle);\n    var shouldStopAnimation = ()=>!Object.values(stepperStyle).filter(needContinue).length;\n    var stopAnimation = null;\n    var stepperUpdate = (now)=>{\n        if (!preTime) {\n            preTime = now;\n        }\n        var deltaTime = now - preTime;\n        var steps = deltaTime / easing.dt;\n        stepperStyle = calStepperVals(easing, stepperStyle, steps);\n        // get union set and add compatible prefix\n        render(_objectSpread(_objectSpread(_objectSpread({}, from), to), getCurrStyle()));\n        preTime = now;\n        if (!shouldStopAnimation()) {\n            stopAnimation = timeoutController.setTimeout(stepperUpdate);\n        }\n    };\n    // return start animation method\n    return ()=>{\n        stopAnimation = timeoutController.setTimeout(stepperUpdate);\n        // return stop animation method\n        return ()=>{\n            stopAnimation();\n        };\n    };\n}\nfunction createTimingUpdate(from, to, easing, duration, interKeys, render, timeoutController) {\n    var stopAnimation = null;\n    var timingStyle = interKeys.reduce((res, key)=>_objectSpread(_objectSpread({}, res), {}, {\n            [key]: [\n                from[key],\n                to[key]\n            ]\n        }), {});\n    var beginTime;\n    var timingUpdate = (now)=>{\n        if (!beginTime) {\n            beginTime = now;\n        }\n        var t = (now - beginTime) / duration;\n        var currStyle = (0,_util__WEBPACK_IMPORTED_MODULE_0__.mapObject)((key, val)=>alpha(...val, easing(t)), timingStyle);\n        // get union set and add compatible prefix\n        render(_objectSpread(_objectSpread(_objectSpread({}, from), to), currStyle));\n        if (t < 1) {\n            stopAnimation = timeoutController.setTimeout(timingUpdate);\n        } else {\n            var finalStyle = (0,_util__WEBPACK_IMPORTED_MODULE_0__.mapObject)((key, val)=>alpha(...val, easing(1)), timingStyle);\n            render(_objectSpread(_objectSpread(_objectSpread({}, from), to), finalStyle));\n        }\n    };\n    // return start animation method\n    return ()=>{\n        stopAnimation = timeoutController.setTimeout(timingUpdate);\n        // return stop animation method\n        return ()=>{\n            stopAnimation();\n        };\n    };\n}\n// configure update function\n// eslint-disable-next-line import/no-default-export\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((from, to, easing, duration, render, timeoutController)=>{\n    var interKeys = (0,_util__WEBPACK_IMPORTED_MODULE_0__.getIntersectionKeys)(from, to);\n    return easing.isStepper === true ? createStepperUpdate(from, to, easing, interKeys, render, timeoutController) : createTimingUpdate(from, to, easing, duration, interKeys, render, timeoutController);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/recharts/es6/animation/configUpdate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/recharts/es6/animation/easing.js":
/*!*******************************************************!*\
  !*** ./node_modules/recharts/es6/animation/easing.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACCURACY: () => (/* binding */ ACCURACY),\n/* harmony export */   configBezier: () => (/* binding */ configBezier),\n/* harmony export */   configEasing: () => (/* binding */ configEasing),\n/* harmony export */   configSpring: () => (/* binding */ configSpring)\n/* harmony export */ });\nvar ACCURACY = 1e-4;\nvar cubicBezierFactor = (c1, c2)=>[\n        0,\n        3 * c1,\n        3 * c2 - 6 * c1,\n        3 * c1 - 3 * c2 + 1\n    ];\nvar evaluatePolynomial = (params, t)=>params.map((param, i)=>param * t ** i).reduce((pre, curr)=>pre + curr);\nvar cubicBezier = (c1, c2)=>(t)=>{\n        var params = cubicBezierFactor(c1, c2);\n        return evaluatePolynomial(params, t);\n    };\nvar derivativeCubicBezier = (c1, c2)=>(t)=>{\n        var params = cubicBezierFactor(c1, c2);\n        var newParams = [\n            ...params.map((param, i)=>param * i).slice(1),\n            0\n        ];\n        return evaluatePolynomial(newParams, t);\n    };\n// calculate cubic-bezier using Newton's method\nvar configBezier = function configBezier() {\n    var x1, x2, y1, y2;\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    if (args.length === 1) {\n        switch(args[0]){\n            case 'linear':\n                [x1, y1, x2, y2] = [\n                    0.0,\n                    0.0,\n                    1.0,\n                    1.0\n                ];\n                break;\n            case 'ease':\n                [x1, y1, x2, y2] = [\n                    0.25,\n                    0.1,\n                    0.25,\n                    1.0\n                ];\n                break;\n            case 'ease-in':\n                [x1, y1, x2, y2] = [\n                    0.42,\n                    0.0,\n                    1.0,\n                    1.0\n                ];\n                break;\n            case 'ease-out':\n                [x1, y1, x2, y2] = [\n                    0.42,\n                    0.0,\n                    0.58,\n                    1.0\n                ];\n                break;\n            case 'ease-in-out':\n                [x1, y1, x2, y2] = [\n                    0.0,\n                    0.0,\n                    0.58,\n                    1.0\n                ];\n                break;\n            default:\n                {\n                    var easing = args[0].split('(');\n                    if (easing[0] === 'cubic-bezier' && easing[1].split(')')[0].split(',').length === 4) {\n                        [x1, y1, x2, y2] = easing[1].split(')')[0].split(',').map((x)=>parseFloat(x));\n                    }\n                }\n        }\n    } else if (args.length === 4) {\n        [x1, y1, x2, y2] = args;\n    }\n    var curveX = cubicBezier(x1, x2);\n    var curveY = cubicBezier(y1, y2);\n    var derCurveX = derivativeCubicBezier(x1, x2);\n    var rangeValue = (value)=>{\n        if (value > 1) {\n            return 1;\n        }\n        if (value < 0) {\n            return 0;\n        }\n        return value;\n    };\n    var bezier = (_t)=>{\n        var t = _t > 1 ? 1 : _t;\n        var x = t;\n        for(var i = 0; i < 8; ++i){\n            var evalT = curveX(x) - t;\n            var derVal = derCurveX(x);\n            if (Math.abs(evalT - t) < ACCURACY || derVal < ACCURACY) {\n                return curveY(x);\n            }\n            x = rangeValue(x - evalT / derVal);\n        }\n        return curveY(x);\n    };\n    bezier.isStepper = false;\n    return bezier;\n};\nvar configSpring = function configSpring() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var { stiff = 100, damping = 8, dt = 17 } = config;\n    var stepper = (currX, destX, currV)=>{\n        var FSpring = -(currX - destX) * stiff;\n        var FDamping = currV * damping;\n        var newV = currV + (FSpring - FDamping) * dt / 1000;\n        var newX = currV * dt / 1000 + currX;\n        if (Math.abs(newX - destX) < ACCURACY && Math.abs(newV) < ACCURACY) {\n            return [\n                destX,\n                0\n            ];\n        }\n        return [\n            newX,\n            newV\n        ];\n    };\n    stepper.isStepper = true;\n    stepper.dt = dt;\n    return stepper;\n};\nvar configEasing = (easing)=>{\n    if (typeof easing === 'string') {\n        switch(easing){\n            case 'ease':\n            case 'ease-in-out':\n            case 'ease-out':\n            case 'ease-in':\n            case 'linear':\n                return configBezier(easing);\n            case 'spring':\n                return configSpring();\n            default:\n                if (easing.split('(')[0] === 'cubic-bezier') {\n                    return configBezier(easing);\n                }\n        }\n    }\n    if (typeof easing === 'function') {\n        return easing;\n    }\n    return null;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/recharts/es6/animation/easing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/recharts/es6/animation/timeoutController.js":
/*!******************************************************************!*\
  !*** ./node_modules/recharts/es6/animation/timeoutController.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestAnimationFrameTimeoutController: () => (/* binding */ RequestAnimationFrameTimeoutController)\n/* harmony export */ });\n/**\n * Callback type for the timeout function.\n * Receives current time in milliseconds as an argument.\n */ /**\n * A function that, when called, cancels the timeout.\n */ class RequestAnimationFrameTimeoutController {\n    setTimeout(callback) {\n        var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var startTime = performance.now();\n        var requestId = null;\n        var executeCallback = (now)=>{\n            if (now - startTime >= delay) {\n                callback(now);\n            // tests fail without the extra if, even when five lines below it's not needed\n            // TODO finish transition to the mocked timeout controller and then remove this condition\n            } else if (typeof requestAnimationFrame === 'function') {\n                requestId = requestAnimationFrame(executeCallback);\n            }\n        };\n        requestId = requestAnimationFrame(executeCallback);\n        return ()=>{\n            cancelAnimationFrame(requestId);\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVjaGFydHMvZXM2L2FuaW1hdGlvbi90aW1lb3V0Q29udHJvbGxlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7OztDQUdDLEdBRUQ7O0NBRUMsR0FFTSxNQUFNQTtJQUNYQyxXQUFXQyxRQUFRLEVBQUU7UUFDbkIsSUFBSUMsUUFBUUMsVUFBVUMsTUFBTSxHQUFHLEtBQUtELFNBQVMsQ0FBQyxFQUFFLEtBQUtFLFlBQVlGLFNBQVMsQ0FBQyxFQUFFLEdBQUc7UUFDaEYsSUFBSUcsWUFBWUMsWUFBWUMsR0FBRztRQUMvQixJQUFJQyxZQUFZO1FBQ2hCLElBQUlDLGtCQUFrQkYsQ0FBQUE7WUFDcEIsSUFBSUEsTUFBTUYsYUFBYUosT0FBTztnQkFDNUJELFNBQVNPO1lBQ1QsOEVBQThFO1lBQzlFLHlGQUF5RjtZQUMzRixPQUFPLElBQUksT0FBT0csMEJBQTBCLFlBQVk7Z0JBQ3RERixZQUFZRSxzQkFBc0JEO1lBQ3BDO1FBQ0Y7UUFDQUQsWUFBWUUsc0JBQXNCRDtRQUNsQyxPQUFPO1lBQ0xFLHFCQUFxQkg7UUFDdkI7SUFDRjtBQUNGIiwic291cmNlcyI6WyIvcm9vdC9oeXBlcnN5bmMtY2xpZW50LXB5dGhvbi9mcm9udGVuZC1kZXBsb3ltZW50L25vZGVfbW9kdWxlcy9yZWNoYXJ0cy9lczYvYW5pbWF0aW9uL3RpbWVvdXRDb250cm9sbGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2FsbGJhY2sgdHlwZSBmb3IgdGhlIHRpbWVvdXQgZnVuY3Rpb24uXG4gKiBSZWNlaXZlcyBjdXJyZW50IHRpbWUgaW4gbWlsbGlzZWNvbmRzIGFzIGFuIGFyZ3VtZW50LlxuICovXG5cbi8qKlxuICogQSBmdW5jdGlvbiB0aGF0LCB3aGVuIGNhbGxlZCwgY2FuY2VscyB0aGUgdGltZW91dC5cbiAqL1xuXG5leHBvcnQgY2xhc3MgUmVxdWVzdEFuaW1hdGlvbkZyYW1lVGltZW91dENvbnRyb2xsZXIge1xuICBzZXRUaW1lb3V0KGNhbGxiYWNrKSB7XG4gICAgdmFyIGRlbGF5ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAwO1xuICAgIHZhciBzdGFydFRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKTtcbiAgICB2YXIgcmVxdWVzdElkID0gbnVsbDtcbiAgICB2YXIgZXhlY3V0ZUNhbGxiYWNrID0gbm93ID0+IHtcbiAgICAgIGlmIChub3cgLSBzdGFydFRpbWUgPj0gZGVsYXkpIHtcbiAgICAgICAgY2FsbGJhY2sobm93KTtcbiAgICAgICAgLy8gdGVzdHMgZmFpbCB3aXRob3V0IHRoZSBleHRyYSBpZiwgZXZlbiB3aGVuIGZpdmUgbGluZXMgYmVsb3cgaXQncyBub3QgbmVlZGVkXG4gICAgICAgIC8vIFRPRE8gZmluaXNoIHRyYW5zaXRpb24gdG8gdGhlIG1vY2tlZCB0aW1lb3V0IGNvbnRyb2xsZXIgYW5kIHRoZW4gcmVtb3ZlIHRoaXMgY29uZGl0aW9uXG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiByZXF1ZXN0QW5pbWF0aW9uRnJhbWUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmVxdWVzdElkID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGV4ZWN1dGVDYWxsYmFjayk7XG4gICAgICB9XG4gICAgfTtcbiAgICByZXF1ZXN0SWQgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZXhlY3V0ZUNhbGxiYWNrKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUocmVxdWVzdElkKTtcbiAgICB9O1xuICB9XG59Il0sIm5hbWVzIjpbIlJlcXVlc3RBbmltYXRpb25GcmFtZVRpbWVvdXRDb250cm9sbGVyIiwic2V0VGltZW91dCIsImNhbGxiYWNrIiwiZGVsYXkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJzdGFydFRpbWUiLCJwZXJmb3JtYW5jZSIsIm5vdyIsInJlcXVlc3RJZCIsImV4ZWN1dGVDYWxsYmFjayIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/recharts/es6/animation/timeoutController.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/recharts/es6/animation/util.js":
/*!*****************************************************!*\
  !*** ./node_modules/recharts/es6/animation/util.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDashCase: () => (/* binding */ getDashCase),\n/* harmony export */   getIntersectionKeys: () => (/* binding */ getIntersectionKeys),\n/* harmony export */   getTransitionVal: () => (/* binding */ getTransitionVal),\n/* harmony export */   mapObject: () => (/* binding */ mapObject)\n/* harmony export */ });\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n/*\n * @description: convert camel case to dash case\n * string => string\n */ var getDashCase = (name)=>name.replace(/([A-Z])/g, (v)=>\"-\".concat(v.toLowerCase()));\nvar getTransitionVal = (props, duration, easing)=>props.map((prop)=>\"\".concat(getDashCase(prop), \" \").concat(duration, \"ms \").concat(easing)).join(',');\n/**\n * Finds the intersection of keys between two objects\n * @param {object} preObj previous object\n * @param {object} nextObj next object\n * @returns an array of keys that exist in both objects\n */ var getIntersectionKeys = (preObj, nextObj)=>[\n        Object.keys(preObj),\n        Object.keys(nextObj)\n    ].reduce((a, b)=>a.filter((c)=>b.includes(c)));\n/**\n * Maps an object to another object\n * @param {function} fn function to map\n * @param {object} obj object to map\n * @returns mapped object\n */ var mapObject = (fn, obj)=>Object.keys(obj).reduce((res, key)=>_objectSpread(_objectSpread({}, res), {}, {\n            [key]: fn(key, obj[key])\n        }), {});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVjaGFydHMvZXM2L2FuaW1hdGlvbi91dGlsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxTQUFTQSxRQUFRQyxDQUFDLEVBQUVDLENBQUM7SUFBSSxJQUFJQyxJQUFJQyxPQUFPQyxJQUFJLENBQUNKO0lBQUksSUFBSUcsT0FBT0UscUJBQXFCLEVBQUU7UUFBRSxJQUFJQyxJQUFJSCxPQUFPRSxxQkFBcUIsQ0FBQ0w7UUFBSUMsS0FBTUssQ0FBQUEsSUFBSUEsRUFBRUMsTUFBTSxDQUFDLFNBQVVOLENBQUM7WUFBSSxPQUFPRSxPQUFPSyx3QkFBd0IsQ0FBQ1IsR0FBR0MsR0FBR1EsVUFBVTtRQUFFLEVBQUMsR0FBSVAsRUFBRVEsSUFBSSxDQUFDQyxLQUFLLENBQUNULEdBQUdJO0lBQUk7SUFBRSxPQUFPSjtBQUFHO0FBQzlQLFNBQVNVLGNBQWNaLENBQUM7SUFBSSxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSVksVUFBVUMsTUFBTSxFQUFFYixJQUFLO1FBQUUsSUFBSUMsSUFBSSxRQUFRVyxTQUFTLENBQUNaLEVBQUUsR0FBR1ksU0FBUyxDQUFDWixFQUFFLEdBQUcsQ0FBQztRQUFHQSxJQUFJLElBQUlGLFFBQVFJLE9BQU9ELElBQUksQ0FBQyxHQUFHYSxPQUFPLENBQUMsU0FBVWQsQ0FBQztZQUFJZSxnQkFBZ0JoQixHQUFHQyxHQUFHQyxDQUFDLENBQUNELEVBQUU7UUFBRyxLQUFLRSxPQUFPYyx5QkFBeUIsR0FBR2QsT0FBT2UsZ0JBQWdCLENBQUNsQixHQUFHRyxPQUFPYyx5QkFBeUIsQ0FBQ2YsTUFBTUgsUUFBUUksT0FBT0QsSUFBSWEsT0FBTyxDQUFDLFNBQVVkLENBQUM7WUFBSUUsT0FBT2dCLGNBQWMsQ0FBQ25CLEdBQUdDLEdBQUdFLE9BQU9LLHdCQUF3QixDQUFDTixHQUFHRDtRQUFLO0lBQUk7SUFBRSxPQUFPRDtBQUFHO0FBQ3RiLFNBQVNnQixnQkFBZ0JoQixDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQztJQUFJLE9BQU8sQ0FBQ0QsSUFBSW1CLGVBQWVuQixFQUFDLEtBQU1ELElBQUlHLE9BQU9nQixjQUFjLENBQUNuQixHQUFHQyxHQUFHO1FBQUVvQixPQUFPbkI7UUFBR08sWUFBWSxDQUFDO1FBQUdhLGNBQWMsQ0FBQztRQUFHQyxVQUFVLENBQUM7SUFBRSxLQUFLdkIsQ0FBQyxDQUFDQyxFQUFFLEdBQUdDLEdBQUdGO0FBQUc7QUFDbkwsU0FBU29CLGVBQWVsQixDQUFDO0lBQUksSUFBSXNCLElBQUlDLGFBQWF2QixHQUFHO0lBQVcsT0FBTyxZQUFZLE9BQU9zQixJQUFJQSxJQUFJQSxJQUFJO0FBQUk7QUFDMUcsU0FBU0MsYUFBYXZCLENBQUMsRUFBRUQsQ0FBQztJQUFJLElBQUksWUFBWSxPQUFPQyxLQUFLLENBQUNBLEdBQUcsT0FBT0E7SUFBRyxJQUFJRixJQUFJRSxDQUFDLENBQUN3QixPQUFPQyxXQUFXLENBQUM7SUFBRSxJQUFJLEtBQUssTUFBTTNCLEdBQUc7UUFBRSxJQUFJd0IsSUFBSXhCLEVBQUU0QixJQUFJLENBQUMxQixHQUFHRCxLQUFLO1FBQVksSUFBSSxZQUFZLE9BQU91QixHQUFHLE9BQU9BO1FBQUcsTUFBTSxJQUFJSyxVQUFVO0lBQWlEO0lBQUUsT0FBTyxDQUFDLGFBQWE1QixJQUFJNkIsU0FBU0MsTUFBSyxFQUFHN0I7QUFBSTtBQUN2VDs7O0NBR0MsR0FDTSxJQUFJOEIsY0FBY0MsQ0FBQUEsT0FBUUEsS0FBS0MsT0FBTyxDQUFDLFlBQVlDLENBQUFBLElBQUssSUFBSUMsTUFBTSxDQUFDRCxFQUFFRSxXQUFXLEtBQUs7QUFDckYsSUFBSUMsbUJBQW1CLENBQUNDLE9BQU9DLFVBQVVDLFNBQVdGLE1BQU1HLEdBQUcsQ0FBQ0MsQ0FBQUEsT0FBUSxHQUFHUCxNQUFNLENBQUNKLFlBQVlXLE9BQU8sS0FBS1AsTUFBTSxDQUFDSSxVQUFVLE9BQU9KLE1BQU0sQ0FBQ0ssU0FBU0csSUFBSSxDQUFDLEtBQUs7QUFFaks7Ozs7O0NBS0MsR0FDTSxJQUFJQyxzQkFBc0IsQ0FBQ0MsUUFBUUMsVUFBWTtRQUFDNUMsT0FBT0MsSUFBSSxDQUFDMEM7UUFBUzNDLE9BQU9DLElBQUksQ0FBQzJDO0tBQVMsQ0FBQ0MsTUFBTSxDQUFDLENBQUNDLEdBQUdDLElBQU1ELEVBQUUxQyxNQUFNLENBQUM0QyxDQUFBQSxJQUFLRCxFQUFFRSxRQUFRLENBQUNELEtBQUs7QUFFako7Ozs7O0NBS0MsR0FDTSxJQUFJRSxZQUFZLENBQUNDLElBQUlDLE1BQVFwRCxPQUFPQyxJQUFJLENBQUNtRCxLQUFLUCxNQUFNLENBQUMsQ0FBQ1EsS0FBS0MsTUFBUTdDLGNBQWNBLGNBQWMsQ0FBQyxHQUFHNEMsTUFBTSxDQUFDLEdBQUc7WUFDbEgsQ0FBQ0MsSUFBSSxFQUFFSCxHQUFHRyxLQUFLRixHQUFHLENBQUNFLElBQUk7UUFDekIsSUFBSSxDQUFDLEdBQUciLCJzb3VyY2VzIjpbIi9yb290L2h5cGVyc3luYy1jbGllbnQtcHl0aG9uL2Zyb250ZW5kLWRlcGxveW1lbnQvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi9hbmltYXRpb24vdXRpbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBvd25LZXlzKGUsIHIpIHsgdmFyIHQgPSBPYmplY3Qua2V5cyhlKTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIG8gPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpOyByICYmIChvID0gby5maWx0ZXIoZnVuY3Rpb24gKHIpIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSwgcikuZW51bWVyYWJsZTsgfSkpLCB0LnB1c2guYXBwbHkodCwgbyk7IH0gcmV0dXJuIHQ7IH1cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQoZSkgeyBmb3IgKHZhciByID0gMTsgciA8IGFyZ3VtZW50cy5sZW5ndGg7IHIrKykgeyB2YXIgdCA9IG51bGwgIT0gYXJndW1lbnRzW3JdID8gYXJndW1lbnRzW3JdIDoge307IHIgJSAyID8gb3duS2V5cyhPYmplY3QodCksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChyKSB7IF9kZWZpbmVQcm9wZXJ0eShlLCByLCB0W3JdKTsgfSkgOiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHQpKSA6IG93bktleXMoT2JqZWN0KHQpKS5mb3JFYWNoKGZ1bmN0aW9uIChyKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCByLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsIHIpKTsgfSk7IH0gcmV0dXJuIGU7IH1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShlLCByLCB0KSB7IHJldHVybiAociA9IF90b1Byb3BlcnR5S2V5KHIpKSBpbiBlID8gT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIHIsIHsgdmFsdWU6IHQsIGVudW1lcmFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwLCB3cml0YWJsZTogITAgfSkgOiBlW3JdID0gdCwgZTsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkodCkgeyB2YXIgaSA9IF90b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTsgcmV0dXJuIFwic3ltYm9sXCIgPT0gdHlwZW9mIGkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IHR5cGVvZiB0IHx8ICF0KSByZXR1cm4gdDsgdmFyIGUgPSB0W1N5bWJvbC50b1ByaW1pdGl2ZV07IGlmICh2b2lkIDAgIT09IGUpIHsgdmFyIGkgPSBlLmNhbGwodCwgciB8fCBcImRlZmF1bHRcIik7IGlmIChcIm9iamVjdFwiICE9IHR5cGVvZiBpKSByZXR1cm4gaTsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpOyB9IHJldHVybiAoXCJzdHJpbmdcIiA9PT0gciA/IFN0cmluZyA6IE51bWJlcikodCk7IH1cbi8qXG4gKiBAZGVzY3JpcHRpb246IGNvbnZlcnQgY2FtZWwgY2FzZSB0byBkYXNoIGNhc2VcbiAqIHN0cmluZyA9PiBzdHJpbmdcbiAqL1xuZXhwb3J0IHZhciBnZXREYXNoQ2FzZSA9IG5hbWUgPT4gbmFtZS5yZXBsYWNlKC8oW0EtWl0pL2csIHYgPT4gXCItXCIuY29uY2F0KHYudG9Mb3dlckNhc2UoKSkpO1xuZXhwb3J0IHZhciBnZXRUcmFuc2l0aW9uVmFsID0gKHByb3BzLCBkdXJhdGlvbiwgZWFzaW5nKSA9PiBwcm9wcy5tYXAocHJvcCA9PiBcIlwiLmNvbmNhdChnZXREYXNoQ2FzZShwcm9wKSwgXCIgXCIpLmNvbmNhdChkdXJhdGlvbiwgXCJtcyBcIikuY29uY2F0KGVhc2luZykpLmpvaW4oJywnKTtcblxuLyoqXG4gKiBGaW5kcyB0aGUgaW50ZXJzZWN0aW9uIG9mIGtleXMgYmV0d2VlbiB0d28gb2JqZWN0c1xuICogQHBhcmFtIHtvYmplY3R9IHByZU9iaiBwcmV2aW91cyBvYmplY3RcbiAqIEBwYXJhbSB7b2JqZWN0fSBuZXh0T2JqIG5leHQgb2JqZWN0XG4gKiBAcmV0dXJucyBhbiBhcnJheSBvZiBrZXlzIHRoYXQgZXhpc3QgaW4gYm90aCBvYmplY3RzXG4gKi9cbmV4cG9ydCB2YXIgZ2V0SW50ZXJzZWN0aW9uS2V5cyA9IChwcmVPYmosIG5leHRPYmopID0+IFtPYmplY3Qua2V5cyhwcmVPYmopLCBPYmplY3Qua2V5cyhuZXh0T2JqKV0ucmVkdWNlKChhLCBiKSA9PiBhLmZpbHRlcihjID0+IGIuaW5jbHVkZXMoYykpKTtcblxuLyoqXG4gKiBNYXBzIGFuIG9iamVjdCB0byBhbm90aGVyIG9iamVjdFxuICogQHBhcmFtIHtmdW5jdGlvbn0gZm4gZnVuY3Rpb24gdG8gbWFwXG4gKiBAcGFyYW0ge29iamVjdH0gb2JqIG9iamVjdCB0byBtYXBcbiAqIEByZXR1cm5zIG1hcHBlZCBvYmplY3RcbiAqL1xuZXhwb3J0IHZhciBtYXBPYmplY3QgPSAoZm4sIG9iaikgPT4gT2JqZWN0LmtleXMob2JqKS5yZWR1Y2UoKHJlcywga2V5KSA9PiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHJlcyksIHt9LCB7XG4gIFtrZXldOiBmbihrZXksIG9ialtrZXldKVxufSksIHt9KTsiXSwibmFtZXMiOlsib3duS2V5cyIsImUiLCJyIiwidCIsIk9iamVjdCIsImtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJvIiwiZmlsdGVyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsInB1c2giLCJhcHBseSIsIl9vYmplY3RTcHJlYWQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJmb3JFYWNoIiwiX2RlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZpbmVQcm9wZXJ0eSIsIl90b1Byb3BlcnR5S2V5IiwidmFsdWUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImkiLCJfdG9QcmltaXRpdmUiLCJTeW1ib2wiLCJ0b1ByaW1pdGl2ZSIsImNhbGwiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJOdW1iZXIiLCJnZXREYXNoQ2FzZSIsIm5hbWUiLCJyZXBsYWNlIiwidiIsImNvbmNhdCIsInRvTG93ZXJDYXNlIiwiZ2V0VHJhbnNpdGlvblZhbCIsInByb3BzIiwiZHVyYXRpb24iLCJlYXNpbmciLCJtYXAiLCJwcm9wIiwiam9pbiIsImdldEludGVyc2VjdGlvbktleXMiLCJwcmVPYmoiLCJuZXh0T2JqIiwicmVkdWNlIiwiYSIsImIiLCJjIiwiaW5jbHVkZXMiLCJtYXBPYmplY3QiLCJmbiIsIm9iaiIsInJlcyIsImtleSJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/recharts/es6/animation/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/recharts/es6/cartesian/Area.js":
/*!*****************************************************!*\
  !*** ./node_modules/recharts/es6/cartesian/Area.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Area: () => (/* binding */ Area),\n/* harmony export */   computeArea: () => (/* binding */ computeArea),\n/* harmony export */   getBaseValue: () => (/* binding */ getBaseValue)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _shape_Curve__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shape/Curve */ \"(ssr)/./node_modules/recharts/es6/shape/Curve.js\");\n/* harmony import */ var _shape_Dot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shape/Dot */ \"(ssr)/./node_modules/recharts/es6/shape/Dot.js\");\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../container/Layer */ \"(ssr)/./node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _component_LabelList__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../component/LabelList */ \"(ssr)/./node_modules/recharts/es6/component/LabelList.js\");\n/* harmony import */ var _util_Global__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../util/Global */ \"(ssr)/./node_modules/recharts/es6/util/Global.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ChartUtils */ \"(ssr)/./node_modules/recharts/es6/util/ChartUtils.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _component_ActivePoints__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../component/ActivePoints */ \"(ssr)/./node_modules/recharts/es6/component/ActivePoints.js\");\n/* harmony import */ var _state_SetTooltipEntrySettings__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../state/SetTooltipEntrySettings */ \"(ssr)/./node_modules/recharts/es6/state/SetTooltipEntrySettings.js\");\n/* harmony import */ var _context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../context/CartesianGraphicalItemContext */ \"(ssr)/./node_modules/recharts/es6/context/CartesianGraphicalItemContext.js\");\n/* harmony import */ var _GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./GraphicalItemClipPath */ \"(ssr)/./node_modules/recharts/es6/cartesian/GraphicalItemClipPath.js\");\n/* harmony import */ var _state_selectors_areaSelectors__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../state/selectors/areaSelectors */ \"(ssr)/./node_modules/recharts/es6/state/selectors/areaSelectors.js\");\n/* harmony import */ var _context_PanoramaContext__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../context/PanoramaContext */ \"(ssr)/./node_modules/recharts/es6/context/PanoramaContext.js\");\n/* harmony import */ var _context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../context/chartLayoutContext */ \"(ssr)/./node_modules/recharts/es6/context/chartLayoutContext.js\");\n/* harmony import */ var _state_selectors_selectors__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../state/selectors/selectors */ \"(ssr)/./node_modules/recharts/es6/state/selectors/selectors.js\");\n/* harmony import */ var _state_SetLegendPayload__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../state/SetLegendPayload */ \"(ssr)/./node_modules/recharts/es6/state/SetLegendPayload.js\");\n/* harmony import */ var _state_hooks__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../state/hooks */ \"(ssr)/./node_modules/recharts/es6/state/hooks.js\");\n/* harmony import */ var _util_useAnimationId__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../util/useAnimationId */ \"(ssr)/./node_modules/recharts/es6/util/useAnimationId.js\");\n/* harmony import */ var _util_resolveDefaultProps__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../util/resolveDefaultProps */ \"(ssr)/./node_modules/recharts/es6/util/resolveDefaultProps.js\");\n/* harmony import */ var _util_isWellBehavedNumber__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/isWellBehavedNumber */ \"(ssr)/./node_modules/recharts/es6/util/isWellBehavedNumber.js\");\n/* harmony import */ var _animation_Animate__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../animation/Animate */ \"(ssr)/./node_modules/recharts/es6/animation/Animate.js\");\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../hooks */ \"(ssr)/./node_modules/recharts/es6/hooks.js\");\nvar _excluded = [\n    \"layout\",\n    \"type\",\n    \"stroke\",\n    \"connectNulls\",\n    \"isRange\"\n], _excluded2 = [\n    \"activeDot\",\n    \"animationBegin\",\n    \"animationDuration\",\n    \"animationEasing\",\n    \"connectNulls\",\n    \"dot\",\n    \"fill\",\n    \"fillOpacity\",\n    \"hide\",\n    \"isAnimationActive\",\n    \"legendType\",\n    \"stroke\",\n    \"xAxisId\",\n    \"yAxisId\"\n];\nfunction _objectWithoutProperties(e, t) {\n    if (null == e) return {};\n    var o, r, i = _objectWithoutPropertiesLoose(e, t);\n    if (Object.getOwnPropertySymbols) {\n        var n = Object.getOwnPropertySymbols(e);\n        for(r = 0; r < n.length; r++)o = n[r], -1 === t.indexOf(o) && ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n    }\n    return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n    if (null == r) return {};\n    var t = {};\n    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {\n        if (-1 !== e.indexOf(n)) continue;\n        t[n] = r[n];\n    }\n    return t;\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function(n) {\n        for(var e = 1; e < arguments.length; e++){\n            var t = arguments[e];\n            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n        }\n        return n;\n    }, _extends.apply(null, arguments);\n}\n// eslint-disable-next-line max-classes-per-file\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Internal props, combination of external props + defaultProps + private Recharts state\n */ /**\n * External props, intended for end users to fill in\n */ /**\n * Because of naming conflict, we are forced to ignore certain (valid) SVG attributes.\n */ function getLegendItemColor(stroke, fill) {\n    return stroke && stroke !== 'none' ? stroke : fill;\n}\nvar computeLegendPayloadFromAreaData = (props)=>{\n    var { dataKey, name, stroke, fill, legendType, hide } = props;\n    return [\n        {\n            inactive: hide,\n            dataKey,\n            type: legendType,\n            color: getLegendItemColor(stroke, fill),\n            value: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getTooltipNameProp)(name, dataKey),\n            payload: props\n        }\n    ];\n};\nfunction getTooltipEntrySettings(props) {\n    var { dataKey, data, stroke, strokeWidth, fill, name, hide, unit } = props;\n    return {\n        dataDefinedOnItem: data,\n        positions: undefined,\n        settings: {\n            stroke,\n            strokeWidth,\n            fill,\n            dataKey,\n            nameKey: undefined,\n            name: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getTooltipNameProp)(name, dataKey),\n            hide,\n            type: props.tooltipType,\n            color: getLegendItemColor(stroke, fill),\n            unit\n        }\n    };\n}\nvar renderDotItem = (option, props)=>{\n    var dotItem;\n    if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(option)) {\n        dotItem = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(option, props);\n    } else if (typeof option === 'function') {\n        dotItem = option(props);\n    } else {\n        var className = (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)('recharts-area-dot', typeof option !== 'boolean' ? option.className : '');\n        dotItem = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_shape_Dot__WEBPACK_IMPORTED_MODULE_3__.Dot, _extends({}, props, {\n            className: className\n        }));\n    }\n    return dotItem;\n};\nfunction shouldRenderDots(points, dot) {\n    if (points == null) {\n        return false;\n    }\n    if (dot) {\n        return true;\n    }\n    return points.length === 1;\n}\nfunction Dots(_ref) {\n    var { clipPathId, points, props } = _ref;\n    var { needClip, dot, dataKey } = props;\n    if (!shouldRenderDots(points, dot)) {\n        return null;\n    }\n    var clipDot = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.isClipDot)(dot);\n    var areaProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(props, false);\n    var customDotProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(dot, true);\n    var dots = points.map((entry, i)=>{\n        var dotProps = _objectSpread(_objectSpread(_objectSpread({\n            key: \"dot-\".concat(i),\n            r: 3\n        }, areaProps), customDotProps), {}, {\n            index: i,\n            cx: entry.x,\n            cy: entry.y,\n            dataKey,\n            value: entry.value,\n            payload: entry.payload,\n            points\n        });\n        return renderDotItem(dot, dotProps);\n    });\n    var dotsProps = {\n        clipPath: needClip ? \"url(#clipPath-\".concat(clipDot ? '' : 'dots-').concat(clipPathId, \")\") : undefined\n    };\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_5__.Layer, _extends({\n        className: \"recharts-area-dots\"\n    }, dotsProps), dots);\n}\nfunction StaticArea(_ref2) {\n    var { points, baseLine, needClip, clipPathId, props, showLabels } = _ref2;\n    var { layout, type, stroke, connectNulls, isRange } = props, others = _objectWithoutProperties(props, _excluded);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (points === null || points === void 0 ? void 0 : points.length) > 1 && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_5__.Layer, {\n        clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : undefined\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_shape_Curve__WEBPACK_IMPORTED_MODULE_6__.Curve, _extends({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(others, true), {\n        points: points,\n        connectNulls: connectNulls,\n        type: type,\n        baseLine: baseLine,\n        layout: layout,\n        stroke: \"none\",\n        className: \"recharts-area-area\"\n    })), stroke !== 'none' && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_shape_Curve__WEBPACK_IMPORTED_MODULE_6__.Curve, _extends({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(props, false), {\n        className: \"recharts-area-curve\",\n        layout: layout,\n        type: type,\n        connectNulls: connectNulls,\n        fill: \"none\",\n        points: points\n    })), stroke !== 'none' && isRange && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_shape_Curve__WEBPACK_IMPORTED_MODULE_6__.Curve, _extends({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(props, false), {\n        className: \"recharts-area-curve\",\n        layout: layout,\n        type: type,\n        connectNulls: connectNulls,\n        fill: \"none\",\n        points: baseLine\n    }))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Dots, {\n        points: points,\n        props: props,\n        clipPathId: clipPathId\n    }), showLabels && _component_LabelList__WEBPACK_IMPORTED_MODULE_7__.LabelList.renderCallByParent(props, points));\n}\nfunction VerticalRect(_ref3) {\n    var { alpha, baseLine, points, strokeWidth } = _ref3;\n    var startY = points[0].y;\n    var endY = points[points.length - 1].y;\n    if (!(0,_util_isWellBehavedNumber__WEBPACK_IMPORTED_MODULE_8__.isWellBehavedNumber)(startY) || !(0,_util_isWellBehavedNumber__WEBPACK_IMPORTED_MODULE_8__.isWellBehavedNumber)(endY)) {\n        return null;\n    }\n    var height = alpha * Math.abs(startY - endY);\n    var maxX = Math.max(...points.map((entry)=>entry.x || 0));\n    if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNumber)(baseLine)) {\n        maxX = Math.max(baseLine, maxX);\n    } else if (baseLine && Array.isArray(baseLine) && baseLine.length) {\n        maxX = Math.max(...baseLine.map((entry)=>entry.x || 0), maxX);\n    }\n    if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNumber)(maxX)) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", {\n            x: 0,\n            y: startY < endY ? startY : startY - height,\n            width: maxX + (strokeWidth ? parseInt(\"\".concat(strokeWidth), 10) : 1),\n            height: Math.floor(height)\n        });\n    }\n    return null;\n}\nfunction HorizontalRect(_ref4) {\n    var { alpha, baseLine, points, strokeWidth } = _ref4;\n    var startX = points[0].x;\n    var endX = points[points.length - 1].x;\n    if (!(0,_util_isWellBehavedNumber__WEBPACK_IMPORTED_MODULE_8__.isWellBehavedNumber)(startX) || !(0,_util_isWellBehavedNumber__WEBPACK_IMPORTED_MODULE_8__.isWellBehavedNumber)(endX)) {\n        return null;\n    }\n    var width = alpha * Math.abs(startX - endX);\n    var maxY = Math.max(...points.map((entry)=>entry.y || 0));\n    if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNumber)(baseLine)) {\n        maxY = Math.max(baseLine, maxY);\n    } else if (baseLine && Array.isArray(baseLine) && baseLine.length) {\n        maxY = Math.max(...baseLine.map((entry)=>entry.y || 0), maxY);\n    }\n    if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNumber)(maxY)) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", {\n            x: startX < endX ? startX : startX - width,\n            y: 0,\n            width: width,\n            height: Math.floor(maxY + (strokeWidth ? parseInt(\"\".concat(strokeWidth), 10) : 1))\n        });\n    }\n    return null;\n}\nfunction ClipRect(_ref5) {\n    var { alpha, layout, points, baseLine, strokeWidth } = _ref5;\n    if (layout === 'vertical') {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(VerticalRect, {\n            alpha: alpha,\n            points: points,\n            baseLine: baseLine,\n            strokeWidth: strokeWidth\n        });\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(HorizontalRect, {\n        alpha: alpha,\n        points: points,\n        baseLine: baseLine,\n        strokeWidth: strokeWidth\n    });\n}\nfunction AreaWithAnimation(_ref6) {\n    var { needClip, clipPathId, props, previousPointsRef, previousBaselineRef } = _ref6;\n    var { points, baseLine, isAnimationActive, animationBegin, animationDuration, animationEasing, onAnimationStart, onAnimationEnd } = props;\n    var animationId = (0,_util_useAnimationId__WEBPACK_IMPORTED_MODULE_10__.useAnimationId)(props, 'recharts-area-');\n    var [isAnimating, setIsAnimating] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    var handleAnimationEnd = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"AreaWithAnimation.useCallback[handleAnimationEnd]\": ()=>{\n            if (typeof onAnimationEnd === 'function') {\n                onAnimationEnd();\n            }\n            setIsAnimating(false);\n        }\n    }[\"AreaWithAnimation.useCallback[handleAnimationEnd]\"], [\n        onAnimationEnd\n    ]);\n    var handleAnimationStart = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"AreaWithAnimation.useCallback[handleAnimationStart]\": ()=>{\n            if (typeof onAnimationStart === 'function') {\n                onAnimationStart();\n            }\n            setIsAnimating(true);\n        }\n    }[\"AreaWithAnimation.useCallback[handleAnimationStart]\"], [\n        onAnimationStart\n    ]);\n    var prevPoints = previousPointsRef.current;\n    var prevBaseLine = previousBaselineRef.current;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_animation_Animate__WEBPACK_IMPORTED_MODULE_11__.Animate, {\n        begin: animationBegin,\n        duration: animationDuration,\n        isActive: isAnimationActive,\n        easing: animationEasing,\n        from: {\n            t: 0\n        },\n        to: {\n            t: 1\n        },\n        onAnimationEnd: handleAnimationEnd,\n        onAnimationStart: handleAnimationStart,\n        key: animationId\n    }, (_ref7)=>{\n        var { t } = _ref7;\n        if (prevPoints) {\n            var prevPointsDiffFactor = prevPoints.length / points.length;\n            var stepPoints = /*\n       * Here it is important that at the very end of the animation, on the last frame,\n       * we render the original points without any interpolation.\n       * This is needed because the code above is checking for reference equality to decide if the animation should run\n       * and if we create a new array instance (even if the numbers were the same)\n       * then we would break animations.\n       */ t === 1 ? points : points.map((entry, index)=>{\n                var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n                if (prevPoints[prevPointIndex]) {\n                    var prev = prevPoints[prevPointIndex];\n                    return _objectSpread(_objectSpread({}, entry), {}, {\n                        x: (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.interpolate)(prev.x, entry.x, t),\n                        y: (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.interpolate)(prev.y, entry.y, t)\n                    });\n                }\n                return entry;\n            });\n            var stepBaseLine;\n            if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNumber)(baseLine)) {\n                stepBaseLine = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.interpolate)(prevBaseLine, baseLine, t);\n            } else if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNullish)(baseLine) || (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNan)(baseLine)) {\n                stepBaseLine = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.interpolate)(prevBaseLine, 0, t);\n            } else {\n                stepBaseLine = baseLine.map((entry, index)=>{\n                    var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n                    if (Array.isArray(prevBaseLine) && prevBaseLine[prevPointIndex]) {\n                        var prev = prevBaseLine[prevPointIndex];\n                        return _objectSpread(_objectSpread({}, entry), {}, {\n                            x: (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.interpolate)(prev.x, entry.x, t),\n                            y: (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.interpolate)(prev.y, entry.y, t)\n                        });\n                    }\n                    return entry;\n                });\n            }\n            if (t > 0) {\n                /*\n         * We need to keep the refs in the parent component because we need to remember the last shape of the animation\n         * even if AreaWithAnimation is unmounted as that happens when changing props.\n         *\n         * And we need to update the refs here because here is where the interpolation is computed.\n         * Eslint doesn't like changing function arguments, but we need it so here is an eslint-disable.\n         */ // eslint-disable-next-line no-param-reassign\n                previousPointsRef.current = stepPoints;\n                // eslint-disable-next-line no-param-reassign\n                previousBaselineRef.current = stepBaseLine;\n            }\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(StaticArea, {\n                points: stepPoints,\n                baseLine: stepBaseLine,\n                needClip: needClip,\n                clipPathId: clipPathId,\n                props: props,\n                showLabels: !isAnimating\n            });\n        }\n        if (t > 0) {\n            // eslint-disable-next-line no-param-reassign\n            previousPointsRef.current = points;\n            // eslint-disable-next-line no-param-reassign\n            previousBaselineRef.current = baseLine;\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_5__.Layer, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"defs\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"clipPath\", {\n            id: \"animationClipPath-\".concat(clipPathId)\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ClipRect, {\n            alpha: t,\n            points: points,\n            baseLine: baseLine,\n            layout: props.layout,\n            strokeWidth: props.strokeWidth\n        }))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_5__.Layer, {\n            clipPath: \"url(#animationClipPath-\".concat(clipPathId, \")\")\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(StaticArea, {\n            points: points,\n            baseLine: baseLine,\n            needClip: needClip,\n            clipPathId: clipPathId,\n            props: props,\n            showLabels: true\n        })));\n    });\n}\n/*\n * This components decides if the area should be animated or not.\n * It also holds the state of the animation.\n */ function RenderArea(_ref8) {\n    var { needClip, clipPathId, props } = _ref8;\n    var { points, baseLine, isAnimationActive } = props;\n    /*\n   * These two must be refs, not state!\n   * Because we want to store the most recent shape of the animation in case we have to interrupt the animation;\n   * that happens when user initiates another animation before the current one finishes.\n   *\n   * If this was a useState, then every step in the animation would trigger a re-render.\n   * So, useRef it is.\n   */ var previousPointsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var previousBaselineRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    var prevPoints = previousPointsRef.current;\n    var prevBaseLine = previousBaselineRef.current;\n    if (isAnimationActive && /*\n   * Here it's important that we unmount of AreaWithAnimation in case points are undefined\n   * - this will make sure to interrupt the animation if it's running.\n   * We still get to keep the last shape of the animation in the refs above.\n   */ points && points.length && (prevPoints !== points || prevBaseLine !== baseLine)) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AreaWithAnimation, {\n            needClip: needClip,\n            clipPathId: clipPathId,\n            props: props,\n            previousPointsRef: previousPointsRef,\n            previousBaselineRef: previousBaselineRef\n        });\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(StaticArea, {\n        points: points,\n        baseLine: baseLine,\n        needClip: needClip,\n        clipPathId: clipPathId,\n        props: props,\n        showLabels: true\n    });\n}\nclass AreaWithState extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n    constructor(){\n        super(...arguments);\n        _defineProperty(this, \"id\", (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.uniqueId)('recharts-area-'));\n    }\n    render() {\n        var _filterProps;\n        var { hide, dot, points, className, top, left, needClip, xAxisId, yAxisId, width, height, id, baseLine } = this.props;\n        if (hide) {\n            return null;\n        }\n        var layerClass = (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)('recharts-area', className);\n        var clipPathId = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNullish)(id) ? this.id : id;\n        var { r = 3, strokeWidth = 2 } = (_filterProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(dot, false)) !== null && _filterProps !== void 0 ? _filterProps : {\n            r: 3,\n            strokeWidth: 2\n        };\n        var clipDot = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.isClipDot)(dot);\n        var dotSize = r * 2 + strokeWidth;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_5__.Layer, {\n            className: layerClass\n        }, needClip && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"defs\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_12__.GraphicalItemClipPath, {\n            clipPathId: clipPathId,\n            xAxisId: xAxisId,\n            yAxisId: yAxisId\n        }), !clipDot && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"clipPath\", {\n            id: \"clipPath-dots-\".concat(clipPathId)\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", {\n            x: left - dotSize / 2,\n            y: top - dotSize / 2,\n            width: width + dotSize,\n            height: height + dotSize\n        }))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RenderArea, {\n            needClip: needClip,\n            clipPathId: clipPathId,\n            props: this.props\n        })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_component_ActivePoints__WEBPACK_IMPORTED_MODULE_13__.ActivePoints, {\n            points: points,\n            mainColor: getLegendItemColor(this.props.stroke, this.props.fill),\n            itemDataKey: this.props.dataKey,\n            activeDot: this.props.activeDot\n        }), this.props.isRange && Array.isArray(baseLine) && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_component_ActivePoints__WEBPACK_IMPORTED_MODULE_13__.ActivePoints, {\n            points: baseLine,\n            mainColor: getLegendItemColor(this.props.stroke, this.props.fill),\n            itemDataKey: this.props.dataKey,\n            activeDot: this.props.activeDot\n        }));\n    }\n}\nvar defaultAreaProps = {\n    activeDot: true,\n    animationBegin: 0,\n    animationDuration: 1500,\n    animationEasing: 'ease',\n    connectNulls: false,\n    dot: false,\n    fill: '#3182bd',\n    fillOpacity: 0.6,\n    hide: false,\n    isAnimationActive: !_util_Global__WEBPACK_IMPORTED_MODULE_14__.Global.isSsr,\n    legendType: 'line',\n    stroke: '#3182bd',\n    xAxisId: 0,\n    yAxisId: 0\n};\nfunction AreaImpl(props) {\n    var _useAppSelector;\n    var _resolveDefaultProps = (0,_util_resolveDefaultProps__WEBPACK_IMPORTED_MODULE_15__.resolveDefaultProps)(props, defaultAreaProps), { activeDot, animationBegin, animationDuration, animationEasing, connectNulls, dot, fill, fillOpacity, hide, isAnimationActive, legendType, stroke, xAxisId, yAxisId } = _resolveDefaultProps, everythingElse = _objectWithoutProperties(_resolveDefaultProps, _excluded2);\n    var layout = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_16__.useChartLayout)();\n    var chartName = (0,_state_selectors_selectors__WEBPACK_IMPORTED_MODULE_17__.useChartName)();\n    var { needClip } = (0,_GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_12__.useNeedsClip)(xAxisId, yAxisId);\n    var isPanorama = (0,_context_PanoramaContext__WEBPACK_IMPORTED_MODULE_18__.useIsPanorama)();\n    var areaSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"AreaImpl.useMemo[areaSettings]\": ()=>({\n                baseValue: props.baseValue,\n                stackId: props.stackId,\n                connectNulls,\n                data: props.data,\n                dataKey: props.dataKey\n            })\n    }[\"AreaImpl.useMemo[areaSettings]\"], [\n        props.baseValue,\n        props.stackId,\n        connectNulls,\n        props.data,\n        props.dataKey\n    ]);\n    var { points, isRange, baseLine } = (_useAppSelector = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_19__.useAppSelector)({\n        \"AreaImpl.useAppSelector\": (state)=>(0,_state_selectors_areaSelectors__WEBPACK_IMPORTED_MODULE_20__.selectArea)(state, xAxisId, yAxisId, isPanorama, areaSettings)\n    }[\"AreaImpl.useAppSelector\"])) !== null && _useAppSelector !== void 0 ? _useAppSelector : {};\n    var { height, width, x: left, y: top } = (0,_hooks__WEBPACK_IMPORTED_MODULE_21__.usePlotArea)();\n    if (layout !== 'horizontal' && layout !== 'vertical') {\n        // Can't render Area in an unsupported layout\n        return null;\n    }\n    if (chartName !== 'AreaChart' && chartName !== 'ComposedChart') {\n        // There is nothing stopping us from rendering Area in other charts, except for historical reasons. Do we want to allow that?\n        return null;\n    }\n    /*\n   * It is important to NOT have this condition here,\n   * because we need the Animate inside to receive an empty state\n   * so that it can properly reset its internal state and start a new animation.\n   */ // if (!points || !points.length) {\n    //   return null;\n    // }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AreaWithState, _extends({}, everythingElse, {\n        activeDot: activeDot,\n        animationBegin: animationBegin,\n        animationDuration: animationDuration,\n        animationEasing: animationEasing,\n        baseLine: baseLine,\n        connectNulls: connectNulls,\n        dot: dot,\n        fill: fill,\n        fillOpacity: fillOpacity,\n        height: height,\n        hide: hide,\n        layout: layout,\n        isAnimationActive: isAnimationActive,\n        isRange: isRange,\n        legendType: legendType,\n        needClip: needClip,\n        points: points,\n        stroke: stroke,\n        width: width,\n        left: left,\n        top: top,\n        xAxisId: xAxisId,\n        yAxisId: yAxisId\n    }));\n}\nvar getBaseValue = (layout, chartBaseValue, itemBaseValue, xAxis, yAxis)=>{\n    // The baseValue can be defined both on the AreaChart, and on the Area.\n    // The value for the item takes precedence.\n    var baseValue = itemBaseValue !== null && itemBaseValue !== void 0 ? itemBaseValue : chartBaseValue;\n    if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNumber)(baseValue)) {\n        return baseValue;\n    }\n    var numericAxis = layout === 'horizontal' ? yAxis : xAxis;\n    // @ts-expect-error d3scale .domain() returns unknown, Math.max expects number\n    var domain = numericAxis.scale.domain();\n    if (numericAxis.type === 'number') {\n        var domainMax = Math.max(domain[0], domain[1]);\n        var domainMin = Math.min(domain[0], domain[1]);\n        if (baseValue === 'dataMin') {\n            return domainMin;\n        }\n        if (baseValue === 'dataMax') {\n            return domainMax;\n        }\n        return domainMax < 0 ? domainMax : Math.max(Math.min(domain[0], domain[1]), 0);\n    }\n    if (baseValue === 'dataMin') {\n        return domain[0];\n    }\n    if (baseValue === 'dataMax') {\n        return domain[1];\n    }\n    return domain[0];\n};\nfunction computeArea(_ref9) {\n    var { areaSettings: { connectNulls, baseValue: itemBaseValue, dataKey }, stackedData, layout, chartBaseValue, xAxis, yAxis, displayedData, dataStartIndex, xAxisTicks, yAxisTicks, bandSize } = _ref9;\n    var hasStack = stackedData && stackedData.length;\n    var baseValue = getBaseValue(layout, chartBaseValue, itemBaseValue, xAxis, yAxis);\n    var isHorizontalLayout = layout === 'horizontal';\n    var isRange = false;\n    var points = displayedData.map((entry, index)=>{\n        var value;\n        if (hasStack) {\n            value = stackedData[dataStartIndex + index];\n        } else {\n            value = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getValueByDataKey)(entry, dataKey);\n            if (!Array.isArray(value)) {\n                value = [\n                    baseValue,\n                    value\n                ];\n            } else {\n                isRange = true;\n            }\n        }\n        var isBreakPoint = value[1] == null || hasStack && !connectNulls && (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getValueByDataKey)(entry, dataKey) == null;\n        if (isHorizontalLayout) {\n            return {\n                // @ts-expect-error getCateCoordinateOfLine expects chart data to be an object, we allow unknown\n                x: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getCateCoordinateOfLine)({\n                    axis: xAxis,\n                    ticks: xAxisTicks,\n                    bandSize,\n                    entry,\n                    index\n                }),\n                y: isBreakPoint ? null : yAxis.scale(value[1]),\n                value,\n                payload: entry\n            };\n        }\n        return {\n            x: isBreakPoint ? null : xAxis.scale(value[1]),\n            // @ts-expect-error getCateCoordinateOfLine expects chart data to be an object, we allow unknown\n            y: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getCateCoordinateOfLine)({\n                axis: yAxis,\n                ticks: yAxisTicks,\n                bandSize,\n                entry,\n                index\n            }),\n            value,\n            payload: entry\n        };\n    });\n    var baseLine;\n    if (hasStack || isRange) {\n        baseLine = points.map((entry)=>{\n            var x = Array.isArray(entry.value) ? entry.value[0] : null;\n            if (isHorizontalLayout) {\n                return {\n                    x: entry.x,\n                    y: x != null && entry.y != null ? yAxis.scale(x) : null\n                };\n            }\n            return {\n                x: x != null ? xAxis.scale(x) : null,\n                y: entry.y\n            };\n        });\n    } else {\n        baseLine = isHorizontalLayout ? yAxis.scale(baseValue) : xAxis.scale(baseValue);\n    }\n    return {\n        points,\n        baseLine,\n        isRange\n    };\n}\nclass Area extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n    render() {\n        // Report all props to Redux store first, before calling any hooks, to avoid circular dependencies.\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_22__.CartesianGraphicalItemContext, {\n            type: \"area\",\n            data: this.props.data,\n            dataKey: this.props.dataKey,\n            xAxisId: this.props.xAxisId,\n            yAxisId: this.props.yAxisId,\n            zAxisId: 0,\n            stackId: this.props.stackId,\n            hide: this.props.hide,\n            barSize: undefined\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_state_SetLegendPayload__WEBPACK_IMPORTED_MODULE_23__.SetLegendPayload, {\n            legendPayload: computeLegendPayloadFromAreaData(this.props)\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_state_SetTooltipEntrySettings__WEBPACK_IMPORTED_MODULE_24__.SetTooltipEntrySettings, {\n            fn: getTooltipEntrySettings,\n            args: this.props\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AreaImpl, this.props));\n    }\n}\n_defineProperty(Area, \"displayName\", 'Area');\n_defineProperty(Area, \"defaultProps\", defaultAreaProps);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVjaGFydHMvZXM2L2NhcnRlc2lhbi9BcmVhLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsWUFBWTtJQUFDO0lBQVU7SUFBUTtJQUFVO0lBQWdCO0NBQVUsRUFDckVDLGFBQWE7SUFBQztJQUFhO0lBQWtCO0lBQXFCO0lBQW1CO0lBQWdCO0lBQU87SUFBUTtJQUFlO0lBQVE7SUFBcUI7SUFBYztJQUFVO0lBQVc7Q0FBVTtBQUMvTSxTQUFTQyx5QkFBeUJDLENBQUMsRUFBRUMsQ0FBQztJQUFJLElBQUksUUFBUUQsR0FBRyxPQUFPLENBQUM7SUFBRyxJQUFJRSxHQUFHQyxHQUFHQyxJQUFJQyw4QkFBOEJMLEdBQUdDO0lBQUksSUFBSUssT0FBT0MscUJBQXFCLEVBQUU7UUFBRSxJQUFJQyxJQUFJRixPQUFPQyxxQkFBcUIsQ0FBQ1A7UUFBSSxJQUFLRyxJQUFJLEdBQUdBLElBQUlLLEVBQUVDLE1BQU0sRUFBRU4sSUFBS0QsSUFBSU0sQ0FBQyxDQUFDTCxFQUFFLEVBQUUsQ0FBQyxNQUFNRixFQUFFUyxPQUFPLENBQUNSLE1BQU0sRUFBQyxHQUFFUyxvQkFBb0IsQ0FBQ0MsSUFBSSxDQUFDWixHQUFHRSxNQUFPRSxDQUFBQSxDQUFDLENBQUNGLEVBQUUsR0FBR0YsQ0FBQyxDQUFDRSxFQUFFO0lBQUc7SUFBRSxPQUFPRTtBQUFHO0FBQ3JVLFNBQVNDLDhCQUE4QkYsQ0FBQyxFQUFFSCxDQUFDO0lBQUksSUFBSSxRQUFRRyxHQUFHLE9BQU8sQ0FBQztJQUFHLElBQUlGLElBQUksQ0FBQztJQUFHLElBQUssSUFBSU8sS0FBS0wsRUFBRyxJQUFJLEVBQUMsR0FBRVUsY0FBYyxDQUFDRCxJQUFJLENBQUNULEdBQUdLLElBQUk7UUFBRSxJQUFJLENBQUMsTUFBTVIsRUFBRVUsT0FBTyxDQUFDRixJQUFJO1FBQVVQLENBQUMsQ0FBQ08sRUFBRSxHQUFHTCxDQUFDLENBQUNL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QUkvSjtZQUNKZ0ssTUFBTSxJQUFJLENBQUN6SyxLQUFLO1FBQ2xCLElBQUksV0FBVyxHQUFFMUMsZ0RBQW1CLENBQUM0SyxVQUFVLElBQUksQ0FBQ2xJLEtBQUs7SUFDM0Q7QUFDRjtBQUNBM0QsZ0JBQWdCK04sTUFBTSxlQUFlO0FBQ3JDL04sZ0JBQWdCK04sTUFBTSxnQkFBZ0JyQyIsInNvdXJjZXMiOlsiL3Jvb3QvaHlwZXJzeW5jLWNsaWVudC1weXRob24vZnJvbnRlbmQtZGVwbG95bWVudC9ub2RlX21vZHVsZXMvcmVjaGFydHMvZXM2L2NhcnRlc2lhbi9BcmVhLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfZXhjbHVkZWQgPSBbXCJsYXlvdXRcIiwgXCJ0eXBlXCIsIFwic3Ryb2tlXCIsIFwiY29ubmVjdE51bGxzXCIsIFwiaXNSYW5nZVwiXSxcbiAgX2V4Y2x1ZGVkMiA9IFtcImFjdGl2ZURvdFwiLCBcImFuaW1hdGlvbkJlZ2luXCIsIFwiYW5pbWF0aW9uRHVyYXRpb25cIiwgXCJhbmltYXRpb25FYXNpbmdcIiwgXCJjb25uZWN0TnVsbHNcIiwgXCJkb3RcIiwgXCJmaWxsXCIsIFwiZmlsbE9wYWNpdHlcIiwgXCJoaWRlXCIsIFwiaXNBbmltYXRpb25BY3RpdmVcIiwgXCJsZWdlbmRUeXBlXCIsIFwic3Ryb2tlXCIsIFwieEF4aXNJZFwiLCBcInlBeGlzSWRcIl07XG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoZSwgdCkgeyBpZiAobnVsbCA9PSBlKSByZXR1cm4ge307IHZhciBvLCByLCBpID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoZSwgdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBuID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTsgZm9yIChyID0gMDsgciA8IG4ubGVuZ3RoOyByKyspIG8gPSBuW3JdLCAtMSA9PT0gdC5pbmRleE9mKG8pICYmIHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoZSwgbykgJiYgKGlbb10gPSBlW29dKTsgfSByZXR1cm4gaTsgfVxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UociwgZSkgeyBpZiAobnVsbCA9PSByKSByZXR1cm4ge307IHZhciB0ID0ge307IGZvciAodmFyIG4gaW4gcikgaWYgKHt9Lmhhc093blByb3BlcnR5LmNhbGwociwgbikpIHsgaWYgKC0xICE9PSBlLmluZGV4T2YobikpIGNvbnRpbnVlOyB0W25dID0gcltuXTsgfSByZXR1cm4gdDsgfVxuZnVuY3Rpb24gb3duS2V5cyhlLCByKSB7IHZhciB0ID0gT2JqZWN0LmtleXMoZSk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBvID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTsgciAmJiAobyA9IG8uZmlsdGVyKGZ1bmN0aW9uIChyKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsIHIpLmVudW1lcmFibGU7IH0pKSwgdC5wdXNoLmFwcGx5KHQsIG8pOyB9IHJldHVybiB0OyB9XG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKGUpIHsgZm9yICh2YXIgciA9IDE7IHIgPCBhcmd1bWVudHMubGVuZ3RoOyByKyspIHsgdmFyIHQgPSBudWxsICE9IGFyZ3VtZW50c1tyXSA/IGFyZ3VtZW50c1tyXSA6IHt9OyByICUgMiA/IG93bktleXMoT2JqZWN0KHQpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBfZGVmaW5lUHJvcGVydHkoZSwgciwgdFtyXSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyh0KSkgOiBvd25LZXlzKE9iamVjdCh0KSkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgciwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LCByKSk7IH0pOyB9IHJldHVybiBlOyB9XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkoZSwgciwgdCkgeyByZXR1cm4gKHIgPSBfdG9Qcm9wZXJ0eUtleShyKSkgaW4gZSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCByLCB7IHZhbHVlOiB0LCBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCwgd3JpdGFibGU6ICEwIH0pIDogZVtyXSA9IHQsIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IHR5cGVvZiBpID8gaSA6IGkgKyBcIlwiOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUodCwgcikgeyBpZiAoXCJvYmplY3RcIiAhPSB0eXBlb2YgdCB8fCAhdCkgcmV0dXJuIHQ7IHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdOyBpZiAodm9pZCAwICE9PSBlKSB7IHZhciBpID0gZS5jYWxsKHQsIHIgfHwgXCJkZWZhdWx0XCIpOyBpZiAoXCJvYmplY3RcIiAhPSB0eXBlb2YgaSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG5mdW5jdGlvbiBfZXh0ZW5kcygpIHsgcmV0dXJuIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiA/IE9iamVjdC5hc3NpZ24uYmluZCgpIDogZnVuY3Rpb24gKG4pIHsgZm9yICh2YXIgZSA9IDE7IGUgPCBhcmd1bWVudHMubGVuZ3RoOyBlKyspIHsgdmFyIHQgPSBhcmd1bWVudHNbZV07IGZvciAodmFyIHIgaW4gdCkgKHt9KS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsIHIpICYmIChuW3JdID0gdFtyXSk7IH0gcmV0dXJuIG47IH0sIF9leHRlbmRzLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7IH1cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBtYXgtY2xhc3Nlcy1wZXItZmlsZVxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUHVyZUNvbXBvbmVudCwgdXNlQ2FsbGJhY2ssIHVzZU1lbW8sIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjbHN4IH0gZnJvbSAnY2xzeCc7XG5pbXBvcnQgeyBDdXJ2ZSB9IGZyb20gJy4uL3NoYXBlL0N1cnZlJztcbmltcG9ydCB7IERvdCB9IGZyb20gJy4uL3NoYXBlL0RvdCc7XG5pbXBvcnQgeyBMYXllciB9IGZyb20gJy4uL2NvbnRhaW5lci9MYXllcic7XG5pbXBvcnQgeyBMYWJlbExpc3QgfSBmcm9tICcuLi9jb21wb25lbnQvTGFiZWxMaXN0JztcbmltcG9ydCB7IEdsb2JhbCB9IGZyb20gJy4uL3V0aWwvR2xvYmFsJztcbmltcG9ydCB7IGludGVycG9sYXRlLCBpc05hbiwgaXNOdWxsaXNoLCBpc051bWJlciwgdW5pcXVlSWQgfSBmcm9tICcuLi91dGlsL0RhdGFVdGlscyc7XG5pbXBvcnQgeyBnZXRDYXRlQ29vcmRpbmF0ZU9mTGluZSwgZ2V0VG9vbHRpcE5hbWVQcm9wLCBnZXRWYWx1ZUJ5RGF0YUtleSB9IGZyb20gJy4uL3V0aWwvQ2hhcnRVdGlscyc7XG5pbXBvcnQgeyBmaWx0ZXJQcm9wcywgaXNDbGlwRG90IH0gZnJvbSAnLi4vdXRpbC9SZWFjdFV0aWxzJztcbmltcG9ydCB7IEFjdGl2ZVBvaW50cyB9IGZyb20gJy4uL2NvbXBvbmVudC9BY3RpdmVQb2ludHMnO1xuaW1wb3J0IHsgU2V0VG9vbHRpcEVudHJ5U2V0dGluZ3MgfSBmcm9tICcuLi9zdGF0ZS9TZXRUb29sdGlwRW50cnlTZXR0aW5ncyc7XG5pbXBvcnQgeyBDYXJ0ZXNpYW5HcmFwaGljYWxJdGVtQ29udGV4dCB9IGZyb20gJy4uL2NvbnRleHQvQ2FydGVzaWFuR3JhcGhpY2FsSXRlbUNvbnRleHQnO1xuaW1wb3J0IHsgR3JhcGhpY2FsSXRlbUNsaXBQYXRoLCB1c2VOZWVkc0NsaXAgfSBmcm9tICcuL0dyYXBoaWNhbEl0ZW1DbGlwUGF0aCc7XG5pbXBvcnQgeyBzZWxlY3RBcmVhIH0gZnJvbSAnLi4vc3RhdGUvc2VsZWN0b3JzL2FyZWFTZWxlY3RvcnMnO1xuaW1wb3J0IHsgdXNlSXNQYW5vcmFtYSB9IGZyb20gJy4uL2NvbnRleHQvUGFub3JhbWFDb250ZXh0JztcbmltcG9ydCB7IHVzZUNoYXJ0TGF5b3V0IH0gZnJvbSAnLi4vY29udGV4dC9jaGFydExheW91dENvbnRleHQnO1xuaW1wb3J0IHsgdXNlQ2hhcnROYW1lIH0gZnJvbSAnLi4vc3RhdGUvc2VsZWN0b3JzL3NlbGVjdG9ycyc7XG5pbXBvcnQgeyBTZXRMZWdlbmRQYXlsb2FkIH0gZnJvbSAnLi4vc3RhdGUvU2V0TGVnZW5kUGF5bG9hZCc7XG5pbXBvcnQgeyB1c2VBcHBTZWxlY3RvciB9IGZyb20gJy4uL3N0YXRlL2hvb2tzJztcbmltcG9ydCB7IHVzZUFuaW1hdGlvbklkIH0gZnJvbSAnLi4vdXRpbC91c2VBbmltYXRpb25JZCc7XG5pbXBvcnQgeyByZXNvbHZlRGVmYXVsdFByb3BzIH0gZnJvbSAnLi4vdXRpbC9yZXNvbHZlRGVmYXVsdFByb3BzJztcbmltcG9ydCB7IGlzV2VsbEJlaGF2ZWROdW1iZXIgfSBmcm9tICcuLi91dGlsL2lzV2VsbEJlaGF2ZWROdW1iZXInO1xuaW1wb3J0IHsgQW5pbWF0ZSB9IGZyb20gJy4uL2FuaW1hdGlvbi9BbmltYXRlJztcbmltcG9ydCB7IHVzZVBsb3RBcmVhIH0gZnJvbSAnLi4vaG9va3MnO1xuXG4vKipcbiAqIEludGVybmFsIHByb3BzLCBjb21iaW5hdGlvbiBvZiBleHRlcm5hbCBwcm9wcyArIGRlZmF1bHRQcm9wcyArIHByaXZhdGUgUmVjaGFydHMgc3RhdGVcbiAqL1xuXG4vKipcbiAqIEV4dGVybmFsIHByb3BzLCBpbnRlbmRlZCBmb3IgZW5kIHVzZXJzIHRvIGZpbGwgaW5cbiAqL1xuXG4vKipcbiAqIEJlY2F1c2Ugb2YgbmFtaW5nIGNvbmZsaWN0LCB3ZSBhcmUgZm9yY2VkIHRvIGlnbm9yZSBjZXJ0YWluICh2YWxpZCkgU1ZHIGF0dHJpYnV0ZXMuXG4gKi9cblxuZnVuY3Rpb24gZ2V0TGVnZW5kSXRlbUNvbG9yKHN0cm9rZSwgZmlsbCkge1xuICByZXR1cm4gc3Ryb2tlICYmIHN0cm9rZSAhPT0gJ25vbmUnID8gc3Ryb2tlIDogZmlsbDtcbn1cbnZhciBjb21wdXRlTGVnZW5kUGF5bG9hZEZyb21BcmVhRGF0YSA9IHByb3BzID0+IHtcbiAgdmFyIHtcbiAgICBkYXRhS2V5LFxuICAgIG5hbWUsXG4gICAgc3Ryb2tlLFxuICAgIGZpbGwsXG4gICAgbGVnZW5kVHlwZSxcbiAgICBoaWRlXG4gIH0gPSBwcm9wcztcbiAgcmV0dXJuIFt7XG4gICAgaW5hY3RpdmU6IGhpZGUsXG4gICAgZGF0YUtleSxcbiAgICB0eXBlOiBsZWdlbmRUeXBlLFxuICAgIGNvbG9yOiBnZXRMZWdlbmRJdGVtQ29sb3Ioc3Ryb2tlLCBmaWxsKSxcbiAgICB2YWx1ZTogZ2V0VG9vbHRpcE5hbWVQcm9wKG5hbWUsIGRhdGFLZXkpLFxuICAgIHBheWxvYWQ6IHByb3BzXG4gIH1dO1xufTtcbmZ1bmN0aW9uIGdldFRvb2x0aXBFbnRyeVNldHRpbmdzKHByb3BzKSB7XG4gIHZhciB7XG4gICAgZGF0YUtleSxcbiAgICBkYXRhLFxuICAgIHN0cm9rZSxcbiAgICBzdHJva2VXaWR0aCxcbiAgICBmaWxsLFxuICAgIG5hbWUsXG4gICAgaGlkZSxcbiAgICB1bml0XG4gIH0gPSBwcm9wcztcbiAgcmV0dXJuIHtcbiAgICBkYXRhRGVmaW5lZE9uSXRlbTogZGF0YSxcbiAgICBwb3NpdGlvbnM6IHVuZGVmaW5lZCxcbiAgICBzZXR0aW5nczoge1xuICAgICAgc3Ryb2tlLFxuICAgICAgc3Ryb2tlV2lkdGgsXG4gICAgICBmaWxsLFxuICAgICAgZGF0YUtleSxcbiAgICAgIG5hbWVLZXk6IHVuZGVmaW5lZCxcbiAgICAgIG5hbWU6IGdldFRvb2x0aXBOYW1lUHJvcChuYW1lLCBkYXRhS2V5KSxcbiAgICAgIGhpZGUsXG4gICAgICB0eXBlOiBwcm9wcy50b29sdGlwVHlwZSxcbiAgICAgIGNvbG9yOiBnZXRMZWdlbmRJdGVtQ29sb3Ioc3Ryb2tlLCBmaWxsKSxcbiAgICAgIHVuaXRcbiAgICB9XG4gIH07XG59XG52YXIgcmVuZGVyRG90SXRlbSA9IChvcHRpb24sIHByb3BzKSA9PiB7XG4gIHZhciBkb3RJdGVtO1xuICBpZiAoLyojX19QVVJFX18qL1JlYWN0LmlzVmFsaWRFbGVtZW50KG9wdGlvbikpIHtcbiAgICBkb3RJdGVtID0gLyojX19QVVJFX18qL1JlYWN0LmNsb25lRWxlbWVudChvcHRpb24sIHByb3BzKTtcbiAgfSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZG90SXRlbSA9IG9wdGlvbihwcm9wcyk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGNsYXNzTmFtZSA9IGNsc3goJ3JlY2hhcnRzLWFyZWEtZG90JywgdHlwZW9mIG9wdGlvbiAhPT0gJ2Jvb2xlYW4nID8gb3B0aW9uLmNsYXNzTmFtZSA6ICcnKTtcbiAgICBkb3RJdGVtID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRG90LCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lXG4gICAgfSkpO1xuICB9XG4gIHJldHVybiBkb3RJdGVtO1xufTtcbmZ1bmN0aW9uIHNob3VsZFJlbmRlckRvdHMocG9pbnRzLCBkb3QpIHtcbiAgaWYgKHBvaW50cyA9PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGlmIChkb3QpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICByZXR1cm4gcG9pbnRzLmxlbmd0aCA9PT0gMTtcbn1cbmZ1bmN0aW9uIERvdHMoX3JlZikge1xuICB2YXIge1xuICAgIGNsaXBQYXRoSWQsXG4gICAgcG9pbnRzLFxuICAgIHByb3BzXG4gIH0gPSBfcmVmO1xuICB2YXIge1xuICAgIG5lZWRDbGlwLFxuICAgIGRvdCxcbiAgICBkYXRhS2V5XG4gIH0gPSBwcm9wcztcbiAgaWYgKCFzaG91bGRSZW5kZXJEb3RzKHBvaW50cywgZG90KSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHZhciBjbGlwRG90ID0gaXNDbGlwRG90KGRvdCk7XG4gIHZhciBhcmVhUHJvcHMgPSBmaWx0ZXJQcm9wcyhwcm9wcywgZmFsc2UpO1xuICB2YXIgY3VzdG9tRG90UHJvcHMgPSBmaWx0ZXJQcm9wcyhkb3QsIHRydWUpO1xuICB2YXIgZG90cyA9IHBvaW50cy5tYXAoKGVudHJ5LCBpKSA9PiB7XG4gICAgdmFyIGRvdFByb3BzID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe1xuICAgICAga2V5OiBcImRvdC1cIi5jb25jYXQoaSksXG4gICAgICByOiAzXG4gICAgfSwgYXJlYVByb3BzKSwgY3VzdG9tRG90UHJvcHMpLCB7fSwge1xuICAgICAgaW5kZXg6IGksXG4gICAgICBjeDogZW50cnkueCxcbiAgICAgIGN5OiBlbnRyeS55LFxuICAgICAgZGF0YUtleSxcbiAgICAgIHZhbHVlOiBlbnRyeS52YWx1ZSxcbiAgICAgIHBheWxvYWQ6IGVudHJ5LnBheWxvYWQsXG4gICAgICBwb2ludHNcbiAgICB9KTtcbiAgICByZXR1cm4gcmVuZGVyRG90SXRlbShkb3QsIGRvdFByb3BzKTtcbiAgfSk7XG4gIHZhciBkb3RzUHJvcHMgPSB7XG4gICAgY2xpcFBhdGg6IG5lZWRDbGlwID8gXCJ1cmwoI2NsaXBQYXRoLVwiLmNvbmNhdChjbGlwRG90ID8gJycgOiAnZG90cy0nKS5jb25jYXQoY2xpcFBhdGhJZCwgXCIpXCIpIDogdW5kZWZpbmVkXG4gIH07XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChMYXllciwgX2V4dGVuZHMoe1xuICAgIGNsYXNzTmFtZTogXCJyZWNoYXJ0cy1hcmVhLWRvdHNcIlxuICB9LCBkb3RzUHJvcHMpLCBkb3RzKTtcbn1cbmZ1bmN0aW9uIFN0YXRpY0FyZWEoX3JlZjIpIHtcbiAgdmFyIHtcbiAgICBwb2ludHMsXG4gICAgYmFzZUxpbmUsXG4gICAgbmVlZENsaXAsXG4gICAgY2xpcFBhdGhJZCxcbiAgICBwcm9wcyxcbiAgICBzaG93TGFiZWxzXG4gIH0gPSBfcmVmMjtcbiAgdmFyIHtcbiAgICAgIGxheW91dCxcbiAgICAgIHR5cGUsXG4gICAgICBzdHJva2UsXG4gICAgICBjb25uZWN0TnVsbHMsXG4gICAgICBpc1JhbmdlXG4gICAgfSA9IHByb3BzLFxuICAgIG90aGVycyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhwcm9wcywgX2V4Y2x1ZGVkKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCAocG9pbnRzID09PSBudWxsIHx8IHBvaW50cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogcG9pbnRzLmxlbmd0aCkgPiAxICYmIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KExheWVyLCB7XG4gICAgY2xpcFBhdGg6IG5lZWRDbGlwID8gXCJ1cmwoI2NsaXBQYXRoLVwiLmNvbmNhdChjbGlwUGF0aElkLCBcIilcIikgOiB1bmRlZmluZWRcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ3VydmUsIF9leHRlbmRzKHt9LCBmaWx0ZXJQcm9wcyhvdGhlcnMsIHRydWUpLCB7XG4gICAgcG9pbnRzOiBwb2ludHMsXG4gICAgY29ubmVjdE51bGxzOiBjb25uZWN0TnVsbHMsXG4gICAgdHlwZTogdHlwZSxcbiAgICBiYXNlTGluZTogYmFzZUxpbmUsXG4gICAgbGF5b3V0OiBsYXlvdXQsXG4gICAgc3Ryb2tlOiBcIm5vbmVcIixcbiAgICBjbGFzc05hbWU6IFwicmVjaGFydHMtYXJlYS1hcmVhXCJcbiAgfSkpLCBzdHJva2UgIT09ICdub25lJyAmJiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDdXJ2ZSwgX2V4dGVuZHMoe30sIGZpbHRlclByb3BzKHByb3BzLCBmYWxzZSksIHtcbiAgICBjbGFzc05hbWU6IFwicmVjaGFydHMtYXJlYS1jdXJ2ZVwiLFxuICAgIGxheW91dDogbGF5b3V0LFxuICAgIHR5cGU6IHR5cGUsXG4gICAgY29ubmVjdE51bGxzOiBjb25uZWN0TnVsbHMsXG4gICAgZmlsbDogXCJub25lXCIsXG4gICAgcG9pbnRzOiBwb2ludHNcbiAgfSkpLCBzdHJva2UgIT09ICdub25lJyAmJiBpc1JhbmdlICYmIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEN1cnZlLCBfZXh0ZW5kcyh7fSwgZmlsdGVyUHJvcHMocHJvcHMsIGZhbHNlKSwge1xuICAgIGNsYXNzTmFtZTogXCJyZWNoYXJ0cy1hcmVhLWN1cnZlXCIsXG4gICAgbGF5b3V0OiBsYXlvdXQsXG4gICAgdHlwZTogdHlwZSxcbiAgICBjb25uZWN0TnVsbHM6IGNvbm5lY3ROdWxscyxcbiAgICBmaWxsOiBcIm5vbmVcIixcbiAgICBwb2ludHM6IGJhc2VMaW5lXG4gIH0pKSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KERvdHMsIHtcbiAgICBwb2ludHM6IHBvaW50cyxcbiAgICBwcm9wczogcHJvcHMsXG4gICAgY2xpcFBhdGhJZDogY2xpcFBhdGhJZFxuICB9KSwgc2hvd0xhYmVscyAmJiBMYWJlbExpc3QucmVuZGVyQ2FsbEJ5UGFyZW50KHByb3BzLCBwb2ludHMpKTtcbn1cbmZ1bmN0aW9uIFZlcnRpY2FsUmVjdChfcmVmMykge1xuICB2YXIge1xuICAgIGFscGhhLFxuICAgIGJhc2VMaW5lLFxuICAgIHBvaW50cyxcbiAgICBzdHJva2VXaWR0aFxuICB9ID0gX3JlZjM7XG4gIHZhciBzdGFydFkgPSBwb2ludHNbMF0ueTtcbiAgdmFyIGVuZFkgPSBwb2ludHNbcG9pbnRzLmxlbmd0aCAtIDFdLnk7XG4gIGlmICghaXNXZWxsQmVoYXZlZE51bWJlcihzdGFydFkpIHx8ICFpc1dlbGxCZWhhdmVkTnVtYmVyKGVuZFkpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgdmFyIGhlaWdodCA9IGFscGhhICogTWF0aC5hYnMoc3RhcnRZIC0gZW5kWSk7XG4gIHZhciBtYXhYID0gTWF0aC5tYXgoLi4ucG9pbnRzLm1hcChlbnRyeSA9PiBlbnRyeS54IHx8IDApKTtcbiAgaWYgKGlzTnVtYmVyKGJhc2VMaW5lKSkge1xuICAgIG1heFggPSBNYXRoLm1heChiYXNlTGluZSwgbWF4WCk7XG4gIH0gZWxzZSBpZiAoYmFzZUxpbmUgJiYgQXJyYXkuaXNBcnJheShiYXNlTGluZSkgJiYgYmFzZUxpbmUubGVuZ3RoKSB7XG4gICAgbWF4WCA9IE1hdGgubWF4KC4uLmJhc2VMaW5lLm1hcChlbnRyeSA9PiBlbnRyeS54IHx8IDApLCBtYXhYKTtcbiAgfVxuICBpZiAoaXNOdW1iZXIobWF4WCkpIHtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJyZWN0XCIsIHtcbiAgICAgIHg6IDAsXG4gICAgICB5OiBzdGFydFkgPCBlbmRZID8gc3RhcnRZIDogc3RhcnRZIC0gaGVpZ2h0LFxuICAgICAgd2lkdGg6IG1heFggKyAoc3Ryb2tlV2lkdGggPyBwYXJzZUludChcIlwiLmNvbmNhdChzdHJva2VXaWR0aCksIDEwKSA6IDEpLFxuICAgICAgaGVpZ2h0OiBNYXRoLmZsb29yKGhlaWdodClcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gbnVsbDtcbn1cbmZ1bmN0aW9uIEhvcml6b250YWxSZWN0KF9yZWY0KSB7XG4gIHZhciB7XG4gICAgYWxwaGEsXG4gICAgYmFzZUxpbmUsXG4gICAgcG9pbnRzLFxuICAgIHN0cm9rZVdpZHRoXG4gIH0gPSBfcmVmNDtcbiAgdmFyIHN0YXJ0WCA9IHBvaW50c1swXS54O1xuICB2YXIgZW5kWCA9IHBvaW50c1twb2ludHMubGVuZ3RoIC0gMV0ueDtcbiAgaWYgKCFpc1dlbGxCZWhhdmVkTnVtYmVyKHN0YXJ0WCkgfHwgIWlzV2VsbEJlaGF2ZWROdW1iZXIoZW5kWCkpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICB2YXIgd2lkdGggPSBhbHBoYSAqIE1hdGguYWJzKHN0YXJ0WCAtIGVuZFgpO1xuICB2YXIgbWF4WSA9IE1hdGgubWF4KC4uLnBvaW50cy5tYXAoZW50cnkgPT4gZW50cnkueSB8fCAwKSk7XG4gIGlmIChpc051bWJlcihiYXNlTGluZSkpIHtcbiAgICBtYXhZID0gTWF0aC5tYXgoYmFzZUxpbmUsIG1heFkpO1xuICB9IGVsc2UgaWYgKGJhc2VMaW5lICYmIEFycmF5LmlzQXJyYXkoYmFzZUxpbmUpICYmIGJhc2VMaW5lLmxlbmd0aCkge1xuICAgIG1heFkgPSBNYXRoLm1heCguLi5iYXNlTGluZS5tYXAoZW50cnkgPT4gZW50cnkueSB8fCAwKSwgbWF4WSk7XG4gIH1cbiAgaWYgKGlzTnVtYmVyKG1heFkpKSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwicmVjdFwiLCB7XG4gICAgICB4OiBzdGFydFggPCBlbmRYID8gc3RhcnRYIDogc3RhcnRYIC0gd2lkdGgsXG4gICAgICB5OiAwLFxuICAgICAgd2lkdGg6IHdpZHRoLFxuICAgICAgaGVpZ2h0OiBNYXRoLmZsb29yKG1heFkgKyAoc3Ryb2tlV2lkdGggPyBwYXJzZUludChcIlwiLmNvbmNhdChzdHJva2VXaWR0aCksIDEwKSA6IDEpKVxuICAgIH0pO1xuICB9XG4gIHJldHVybiBudWxsO1xufVxuZnVuY3Rpb24gQ2xpcFJlY3QoX3JlZjUpIHtcbiAgdmFyIHtcbiAgICBhbHBoYSxcbiAgICBsYXlvdXQsXG4gICAgcG9pbnRzLFxuICAgIGJhc2VMaW5lLFxuICAgIHN0cm9rZVdpZHRoXG4gIH0gPSBfcmVmNTtcbiAgaWYgKGxheW91dCA9PT0gJ3ZlcnRpY2FsJykge1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChWZXJ0aWNhbFJlY3QsIHtcbiAgICAgIGFscGhhOiBhbHBoYSxcbiAgICAgIHBvaW50czogcG9pbnRzLFxuICAgICAgYmFzZUxpbmU6IGJhc2VMaW5lLFxuICAgICAgc3Ryb2tlV2lkdGg6IHN0cm9rZVdpZHRoXG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEhvcml6b250YWxSZWN0LCB7XG4gICAgYWxwaGE6IGFscGhhLFxuICAgIHBvaW50czogcG9pbnRzLFxuICAgIGJhc2VMaW5lOiBiYXNlTGluZSxcbiAgICBzdHJva2VXaWR0aDogc3Ryb2tlV2lkdGhcbiAgfSk7XG59XG5mdW5jdGlvbiBBcmVhV2l0aEFuaW1hdGlvbihfcmVmNikge1xuICB2YXIge1xuICAgIG5lZWRDbGlwLFxuICAgIGNsaXBQYXRoSWQsXG4gICAgcHJvcHMsXG4gICAgcHJldmlvdXNQb2ludHNSZWYsXG4gICAgcHJldmlvdXNCYXNlbGluZVJlZlxuICB9ID0gX3JlZjY7XG4gIHZhciB7XG4gICAgcG9pbnRzLFxuICAgIGJhc2VMaW5lLFxuICAgIGlzQW5pbWF0aW9uQWN0aXZlLFxuICAgIGFuaW1hdGlvbkJlZ2luLFxuICAgIGFuaW1hdGlvbkR1cmF0aW9uLFxuICAgIGFuaW1hdGlvbkVhc2luZyxcbiAgICBvbkFuaW1hdGlvblN0YXJ0LFxuICAgIG9uQW5pbWF0aW9uRW5kXG4gIH0gPSBwcm9wcztcbiAgdmFyIGFuaW1hdGlvbklkID0gdXNlQW5pbWF0aW9uSWQocHJvcHMsICdyZWNoYXJ0cy1hcmVhLScpO1xuICB2YXIgW2lzQW5pbWF0aW5nLCBzZXRJc0FuaW1hdGluZ10gPSB1c2VTdGF0ZSh0cnVlKTtcbiAgdmFyIGhhbmRsZUFuaW1hdGlvbkVuZCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBpZiAodHlwZW9mIG9uQW5pbWF0aW9uRW5kID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBvbkFuaW1hdGlvbkVuZCgpO1xuICAgIH1cbiAgICBzZXRJc0FuaW1hdGluZyhmYWxzZSk7XG4gIH0sIFtvbkFuaW1hdGlvbkVuZF0pO1xuICB2YXIgaGFuZGxlQW5pbWF0aW9uU3RhcnQgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBvbkFuaW1hdGlvblN0YXJ0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBvbkFuaW1hdGlvblN0YXJ0KCk7XG4gICAgfVxuICAgIHNldElzQW5pbWF0aW5nKHRydWUpO1xuICB9LCBbb25BbmltYXRpb25TdGFydF0pO1xuICB2YXIgcHJldlBvaW50cyA9IHByZXZpb3VzUG9pbnRzUmVmLmN1cnJlbnQ7XG4gIHZhciBwcmV2QmFzZUxpbmUgPSBwcmV2aW91c0Jhc2VsaW5lUmVmLmN1cnJlbnQ7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChBbmltYXRlLCB7XG4gICAgYmVnaW46IGFuaW1hdGlvbkJlZ2luLFxuICAgIGR1cmF0aW9uOiBhbmltYXRpb25EdXJhdGlvbixcbiAgICBpc0FjdGl2ZTogaXNBbmltYXRpb25BY3RpdmUsXG4gICAgZWFzaW5nOiBhbmltYXRpb25FYXNpbmcsXG4gICAgZnJvbToge1xuICAgICAgdDogMFxuICAgIH0sXG4gICAgdG86IHtcbiAgICAgIHQ6IDFcbiAgICB9LFxuICAgIG9uQW5pbWF0aW9uRW5kOiBoYW5kbGVBbmltYXRpb25FbmQsXG4gICAgb25BbmltYXRpb25TdGFydDogaGFuZGxlQW5pbWF0aW9uU3RhcnQsXG4gICAga2V5OiBhbmltYXRpb25JZFxuICB9LCBfcmVmNyA9PiB7XG4gICAgdmFyIHtcbiAgICAgIHRcbiAgICB9ID0gX3JlZjc7XG4gICAgaWYgKHByZXZQb2ludHMpIHtcbiAgICAgIHZhciBwcmV2UG9pbnRzRGlmZkZhY3RvciA9IHByZXZQb2ludHMubGVuZ3RoIC8gcG9pbnRzLmxlbmd0aDtcbiAgICAgIHZhciBzdGVwUG9pbnRzID1cbiAgICAgIC8qXG4gICAgICAgKiBIZXJlIGl0IGlzIGltcG9ydGFudCB0aGF0IGF0IHRoZSB2ZXJ5IGVuZCBvZiB0aGUgYW5pbWF0aW9uLCBvbiB0aGUgbGFzdCBmcmFtZSxcbiAgICAgICAqIHdlIHJlbmRlciB0aGUgb3JpZ2luYWwgcG9pbnRzIHdpdGhvdXQgYW55IGludGVycG9sYXRpb24uXG4gICAgICAgKiBUaGlzIGlzIG5lZWRlZCBiZWNhdXNlIHRoZSBjb2RlIGFib3ZlIGlzIGNoZWNraW5nIGZvciByZWZlcmVuY2UgZXF1YWxpdHkgdG8gZGVjaWRlIGlmIHRoZSBhbmltYXRpb24gc2hvdWxkIHJ1blxuICAgICAgICogYW5kIGlmIHdlIGNyZWF0ZSBhIG5ldyBhcnJheSBpbnN0YW5jZSAoZXZlbiBpZiB0aGUgbnVtYmVycyB3ZXJlIHRoZSBzYW1lKVxuICAgICAgICogdGhlbiB3ZSB3b3VsZCBicmVhayBhbmltYXRpb25zLlxuICAgICAgICovXG4gICAgICB0ID09PSAxID8gcG9pbnRzIDogcG9pbnRzLm1hcCgoZW50cnksIGluZGV4KSA9PiB7XG4gICAgICAgIHZhciBwcmV2UG9pbnRJbmRleCA9IE1hdGguZmxvb3IoaW5kZXggKiBwcmV2UG9pbnRzRGlmZkZhY3Rvcik7XG4gICAgICAgIGlmIChwcmV2UG9pbnRzW3ByZXZQb2ludEluZGV4XSkge1xuICAgICAgICAgIHZhciBwcmV2ID0gcHJldlBvaW50c1twcmV2UG9pbnRJbmRleF07XG4gICAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgZW50cnkpLCB7fSwge1xuICAgICAgICAgICAgeDogaW50ZXJwb2xhdGUocHJldi54LCBlbnRyeS54LCB0KSxcbiAgICAgICAgICAgIHk6IGludGVycG9sYXRlKHByZXYueSwgZW50cnkueSwgdClcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZW50cnk7XG4gICAgICB9KTtcbiAgICAgIHZhciBzdGVwQmFzZUxpbmU7XG4gICAgICBpZiAoaXNOdW1iZXIoYmFzZUxpbmUpKSB7XG4gICAgICAgIHN0ZXBCYXNlTGluZSA9IGludGVycG9sYXRlKHByZXZCYXNlTGluZSwgYmFzZUxpbmUsIHQpO1xuICAgICAgfSBlbHNlIGlmIChpc051bGxpc2goYmFzZUxpbmUpIHx8IGlzTmFuKGJhc2VMaW5lKSkge1xuICAgICAgICBzdGVwQmFzZUxpbmUgPSBpbnRlcnBvbGF0ZShwcmV2QmFzZUxpbmUsIDAsIHQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3RlcEJhc2VMaW5lID0gYmFzZUxpbmUubWFwKChlbnRyeSwgaW5kZXgpID0+IHtcbiAgICAgICAgICB2YXIgcHJldlBvaW50SW5kZXggPSBNYXRoLmZsb29yKGluZGV4ICogcHJldlBvaW50c0RpZmZGYWN0b3IpO1xuICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHByZXZCYXNlTGluZSkgJiYgcHJldkJhc2VMaW5lW3ByZXZQb2ludEluZGV4XSkge1xuICAgICAgICAgICAgdmFyIHByZXYgPSBwcmV2QmFzZUxpbmVbcHJldlBvaW50SW5kZXhdO1xuICAgICAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgZW50cnkpLCB7fSwge1xuICAgICAgICAgICAgICB4OiBpbnRlcnBvbGF0ZShwcmV2LngsIGVudHJ5LngsIHQpLFxuICAgICAgICAgICAgICB5OiBpbnRlcnBvbGF0ZShwcmV2LnksIGVudHJ5LnksIHQpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIGVudHJ5O1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGlmICh0ID4gMCkge1xuICAgICAgICAvKlxuICAgICAgICAgKiBXZSBuZWVkIHRvIGtlZXAgdGhlIHJlZnMgaW4gdGhlIHBhcmVudCBjb21wb25lbnQgYmVjYXVzZSB3ZSBuZWVkIHRvIHJlbWVtYmVyIHRoZSBsYXN0IHNoYXBlIG9mIHRoZSBhbmltYXRpb25cbiAgICAgICAgICogZXZlbiBpZiBBcmVhV2l0aEFuaW1hdGlvbiBpcyB1bm1vdW50ZWQgYXMgdGhhdCBoYXBwZW5zIHdoZW4gY2hhbmdpbmcgcHJvcHMuXG4gICAgICAgICAqXG4gICAgICAgICAqIEFuZCB3ZSBuZWVkIHRvIHVwZGF0ZSB0aGUgcmVmcyBoZXJlIGJlY2F1c2UgaGVyZSBpcyB3aGVyZSB0aGUgaW50ZXJwb2xhdGlvbiBpcyBjb21wdXRlZC5cbiAgICAgICAgICogRXNsaW50IGRvZXNuJ3QgbGlrZSBjaGFuZ2luZyBmdW5jdGlvbiBhcmd1bWVudHMsIGJ1dCB3ZSBuZWVkIGl0IHNvIGhlcmUgaXMgYW4gZXNsaW50LWRpc2FibGUuXG4gICAgICAgICAqL1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgICAgcHJldmlvdXNQb2ludHNSZWYuY3VycmVudCA9IHN0ZXBQb2ludHM7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgICBwcmV2aW91c0Jhc2VsaW5lUmVmLmN1cnJlbnQgPSBzdGVwQmFzZUxpbmU7XG4gICAgICB9XG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoU3RhdGljQXJlYSwge1xuICAgICAgICBwb2ludHM6IHN0ZXBQb2ludHMsXG4gICAgICAgIGJhc2VMaW5lOiBzdGVwQmFzZUxpbmUsXG4gICAgICAgIG5lZWRDbGlwOiBuZWVkQ2xpcCxcbiAgICAgICAgY2xpcFBhdGhJZDogY2xpcFBhdGhJZCxcbiAgICAgICAgcHJvcHM6IHByb3BzLFxuICAgICAgICBzaG93TGFiZWxzOiAhaXNBbmltYXRpbmdcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAodCA+IDApIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgcHJldmlvdXNQb2ludHNSZWYuY3VycmVudCA9IHBvaW50cztcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgcHJldmlvdXNCYXNlbGluZVJlZi5jdXJyZW50ID0gYmFzZUxpbmU7XG4gICAgfVxuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChMYXllciwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkZWZzXCIsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiY2xpcFBhdGhcIiwge1xuICAgICAgaWQ6IFwiYW5pbWF0aW9uQ2xpcFBhdGgtXCIuY29uY2F0KGNsaXBQYXRoSWQpXG4gICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ2xpcFJlY3QsIHtcbiAgICAgIGFscGhhOiB0LFxuICAgICAgcG9pbnRzOiBwb2ludHMsXG4gICAgICBiYXNlTGluZTogYmFzZUxpbmUsXG4gICAgICBsYXlvdXQ6IHByb3BzLmxheW91dCxcbiAgICAgIHN0cm9rZVdpZHRoOiBwcm9wcy5zdHJva2VXaWR0aFxuICAgIH0pKSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KExheWVyLCB7XG4gICAgICBjbGlwUGF0aDogXCJ1cmwoI2FuaW1hdGlvbkNsaXBQYXRoLVwiLmNvbmNhdChjbGlwUGF0aElkLCBcIilcIilcbiAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChTdGF0aWNBcmVhLCB7XG4gICAgICBwb2ludHM6IHBvaW50cyxcbiAgICAgIGJhc2VMaW5lOiBiYXNlTGluZSxcbiAgICAgIG5lZWRDbGlwOiBuZWVkQ2xpcCxcbiAgICAgIGNsaXBQYXRoSWQ6IGNsaXBQYXRoSWQsXG4gICAgICBwcm9wczogcHJvcHMsXG4gICAgICBzaG93TGFiZWxzOiB0cnVlXG4gICAgfSkpKTtcbiAgfSk7XG59XG5cbi8qXG4gKiBUaGlzIGNvbXBvbmVudHMgZGVjaWRlcyBpZiB0aGUgYXJlYSBzaG91bGQgYmUgYW5pbWF0ZWQgb3Igbm90LlxuICogSXQgYWxzbyBob2xkcyB0aGUgc3RhdGUgb2YgdGhlIGFuaW1hdGlvbi5cbiAqL1xuZnVuY3Rpb24gUmVuZGVyQXJlYShfcmVmOCkge1xuICB2YXIge1xuICAgIG5lZWRDbGlwLFxuICAgIGNsaXBQYXRoSWQsXG4gICAgcHJvcHNcbiAgfSA9IF9yZWY4O1xuICB2YXIge1xuICAgIHBvaW50cyxcbiAgICBiYXNlTGluZSxcbiAgICBpc0FuaW1hdGlvbkFjdGl2ZVxuICB9ID0gcHJvcHM7XG5cbiAgLypcbiAgICogVGhlc2UgdHdvIG11c3QgYmUgcmVmcywgbm90IHN0YXRlIVxuICAgKiBCZWNhdXNlIHdlIHdhbnQgdG8gc3RvcmUgdGhlIG1vc3QgcmVjZW50IHNoYXBlIG9mIHRoZSBhbmltYXRpb24gaW4gY2FzZSB3ZSBoYXZlIHRvIGludGVycnVwdCB0aGUgYW5pbWF0aW9uO1xuICAgKiB0aGF0IGhhcHBlbnMgd2hlbiB1c2VyIGluaXRpYXRlcyBhbm90aGVyIGFuaW1hdGlvbiBiZWZvcmUgdGhlIGN1cnJlbnQgb25lIGZpbmlzaGVzLlxuICAgKlxuICAgKiBJZiB0aGlzIHdhcyBhIHVzZVN0YXRlLCB0aGVuIGV2ZXJ5IHN0ZXAgaW4gdGhlIGFuaW1hdGlvbiB3b3VsZCB0cmlnZ2VyIGEgcmUtcmVuZGVyLlxuICAgKiBTbywgdXNlUmVmIGl0IGlzLlxuICAgKi9cbiAgdmFyIHByZXZpb3VzUG9pbnRzUmVmID0gdXNlUmVmKG51bGwpO1xuICB2YXIgcHJldmlvdXNCYXNlbGluZVJlZiA9IHVzZVJlZigpO1xuICB2YXIgcHJldlBvaW50cyA9IHByZXZpb3VzUG9pbnRzUmVmLmN1cnJlbnQ7XG4gIHZhciBwcmV2QmFzZUxpbmUgPSBwcmV2aW91c0Jhc2VsaW5lUmVmLmN1cnJlbnQ7XG4gIGlmIChpc0FuaW1hdGlvbkFjdGl2ZSAmJlxuICAvKlxuICAgKiBIZXJlIGl0J3MgaW1wb3J0YW50IHRoYXQgd2UgdW5tb3VudCBvZiBBcmVhV2l0aEFuaW1hdGlvbiBpbiBjYXNlIHBvaW50cyBhcmUgdW5kZWZpbmVkXG4gICAqIC0gdGhpcyB3aWxsIG1ha2Ugc3VyZSB0byBpbnRlcnJ1cHQgdGhlIGFuaW1hdGlvbiBpZiBpdCdzIHJ1bm5pbmcuXG4gICAqIFdlIHN0aWxsIGdldCB0byBrZWVwIHRoZSBsYXN0IHNoYXBlIG9mIHRoZSBhbmltYXRpb24gaW4gdGhlIHJlZnMgYWJvdmUuXG4gICAqL1xuICBwb2ludHMgJiYgcG9pbnRzLmxlbmd0aCAmJiAocHJldlBvaW50cyAhPT0gcG9pbnRzIHx8IHByZXZCYXNlTGluZSAhPT0gYmFzZUxpbmUpKSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEFyZWFXaXRoQW5pbWF0aW9uLCB7XG4gICAgICBuZWVkQ2xpcDogbmVlZENsaXAsXG4gICAgICBjbGlwUGF0aElkOiBjbGlwUGF0aElkLFxuICAgICAgcHJvcHM6IHByb3BzLFxuICAgICAgcHJldmlvdXNQb2ludHNSZWY6IHByZXZpb3VzUG9pbnRzUmVmLFxuICAgICAgcHJldmlvdXNCYXNlbGluZVJlZjogcHJldmlvdXNCYXNlbGluZVJlZlxuICAgIH0pO1xuICB9XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChTdGF0aWNBcmVhLCB7XG4gICAgcG9pbnRzOiBwb2ludHMsXG4gICAgYmFzZUxpbmU6IGJhc2VMaW5lLFxuICAgIG5lZWRDbGlwOiBuZWVkQ2xpcCxcbiAgICBjbGlwUGF0aElkOiBjbGlwUGF0aElkLFxuICAgIHByb3BzOiBwcm9wcyxcbiAgICBzaG93TGFiZWxzOiB0cnVlXG4gIH0pO1xufVxuY2xhc3MgQXJlYVdpdGhTdGF0ZSBleHRlbmRzIFB1cmVDb21wb25lbnQge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImlkXCIsIHVuaXF1ZUlkKCdyZWNoYXJ0cy1hcmVhLScpKTtcbiAgfVxuICByZW5kZXIoKSB7XG4gICAgdmFyIF9maWx0ZXJQcm9wcztcbiAgICB2YXIge1xuICAgICAgaGlkZSxcbiAgICAgIGRvdCxcbiAgICAgIHBvaW50cyxcbiAgICAgIGNsYXNzTmFtZSxcbiAgICAgIHRvcCxcbiAgICAgIGxlZnQsXG4gICAgICBuZWVkQ2xpcCxcbiAgICAgIHhBeGlzSWQsXG4gICAgICB5QXhpc0lkLFxuICAgICAgd2lkdGgsXG4gICAgICBoZWlnaHQsXG4gICAgICBpZCxcbiAgICAgIGJhc2VMaW5lXG4gICAgfSA9IHRoaXMucHJvcHM7XG4gICAgaWYgKGhpZGUpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICB2YXIgbGF5ZXJDbGFzcyA9IGNsc3goJ3JlY2hhcnRzLWFyZWEnLCBjbGFzc05hbWUpO1xuICAgIHZhciBjbGlwUGF0aElkID0gaXNOdWxsaXNoKGlkKSA/IHRoaXMuaWQgOiBpZDtcbiAgICB2YXIge1xuICAgICAgciA9IDMsXG4gICAgICBzdHJva2VXaWR0aCA9IDJcbiAgICB9ID0gKF9maWx0ZXJQcm9wcyA9IGZpbHRlclByb3BzKGRvdCwgZmFsc2UpKSAhPT0gbnVsbCAmJiBfZmlsdGVyUHJvcHMgIT09IHZvaWQgMCA/IF9maWx0ZXJQcm9wcyA6IHtcbiAgICAgIHI6IDMsXG4gICAgICBzdHJva2VXaWR0aDogMlxuICAgIH07XG4gICAgdmFyIGNsaXBEb3QgPSBpc0NsaXBEb3QoZG90KTtcbiAgICB2YXIgZG90U2l6ZSA9IHIgKiAyICsgc3Ryb2tlV2lkdGg7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChMYXllciwge1xuICAgICAgY2xhc3NOYW1lOiBsYXllckNsYXNzXG4gICAgfSwgbmVlZENsaXAgJiYgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkZWZzXCIsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEdyYXBoaWNhbEl0ZW1DbGlwUGF0aCwge1xuICAgICAgY2xpcFBhdGhJZDogY2xpcFBhdGhJZCxcbiAgICAgIHhBeGlzSWQ6IHhBeGlzSWQsXG4gICAgICB5QXhpc0lkOiB5QXhpc0lkXG4gICAgfSksICFjbGlwRG90ICYmIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiY2xpcFBhdGhcIiwge1xuICAgICAgaWQ6IFwiY2xpcFBhdGgtZG90cy1cIi5jb25jYXQoY2xpcFBhdGhJZClcbiAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInJlY3RcIiwge1xuICAgICAgeDogbGVmdCAtIGRvdFNpemUgLyAyLFxuICAgICAgeTogdG9wIC0gZG90U2l6ZSAvIDIsXG4gICAgICB3aWR0aDogd2lkdGggKyBkb3RTaXplLFxuICAgICAgaGVpZ2h0OiBoZWlnaHQgKyBkb3RTaXplXG4gICAgfSkpKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUmVuZGVyQXJlYSwge1xuICAgICAgbmVlZENsaXA6IG5lZWRDbGlwLFxuICAgICAgY2xpcFBhdGhJZDogY2xpcFBhdGhJZCxcbiAgICAgIHByb3BzOiB0aGlzLnByb3BzXG4gICAgfSkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChBY3RpdmVQb2ludHMsIHtcbiAgICAgIHBvaW50czogcG9pbnRzLFxuICAgICAgbWFpbkNvbG9yOiBnZXRMZWdlbmRJdGVtQ29sb3IodGhpcy5wcm9wcy5zdHJva2UsIHRoaXMucHJvcHMuZmlsbCksXG4gICAgICBpdGVtRGF0YUtleTogdGhpcy5wcm9wcy5kYXRhS2V5LFxuICAgICAgYWN0aXZlRG90OiB0aGlzLnByb3BzLmFjdGl2ZURvdFxuICAgIH0pLCB0aGlzLnByb3BzLmlzUmFuZ2UgJiYgQXJyYXkuaXNBcnJheShiYXNlTGluZSkgJiYgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQWN0aXZlUG9pbnRzLCB7XG4gICAgICBwb2ludHM6IGJhc2VMaW5lLFxuICAgICAgbWFpbkNvbG9yOiBnZXRMZWdlbmRJdGVtQ29sb3IodGhpcy5wcm9wcy5zdHJva2UsIHRoaXMucHJvcHMuZmlsbCksXG4gICAgICBpdGVtRGF0YUtleTogdGhpcy5wcm9wcy5kYXRhS2V5LFxuICAgICAgYWN0aXZlRG90OiB0aGlzLnByb3BzLmFjdGl2ZURvdFxuICAgIH0pKTtcbiAgfVxufVxudmFyIGRlZmF1bHRBcmVhUHJvcHMgPSB7XG4gIGFjdGl2ZURvdDogdHJ1ZSxcbiAgYW5pbWF0aW9uQmVnaW46IDAsXG4gIGFuaW1hdGlvbkR1cmF0aW9uOiAxNTAwLFxuICBhbmltYXRpb25FYXNpbmc6ICdlYXNlJyxcbiAgY29ubmVjdE51bGxzOiBmYWxzZSxcbiAgZG90OiBmYWxzZSxcbiAgZmlsbDogJyMzMTgyYmQnLFxuICBmaWxsT3BhY2l0eTogMC42LFxuICBoaWRlOiBmYWxzZSxcbiAgaXNBbmltYXRpb25BY3RpdmU6ICFHbG9iYWwuaXNTc3IsXG4gIGxlZ2VuZFR5cGU6ICdsaW5lJyxcbiAgc3Ryb2tlOiAnIzMxODJiZCcsXG4gIHhBeGlzSWQ6IDAsXG4gIHlBeGlzSWQ6IDBcbn07XG5mdW5jdGlvbiBBcmVhSW1wbChwcm9wcykge1xuICB2YXIgX3VzZUFwcFNlbGVjdG9yO1xuICB2YXIgX3Jlc29sdmVEZWZhdWx0UHJvcHMgPSByZXNvbHZlRGVmYXVsdFByb3BzKHByb3BzLCBkZWZhdWx0QXJlYVByb3BzKSxcbiAgICB7XG4gICAgICBhY3RpdmVEb3QsXG4gICAgICBhbmltYXRpb25CZWdpbixcbiAgICAgIGFuaW1hdGlvbkR1cmF0aW9uLFxuICAgICAgYW5pbWF0aW9uRWFzaW5nLFxuICAgICAgY29ubmVjdE51bGxzLFxuICAgICAgZG90LFxuICAgICAgZmlsbCxcbiAgICAgIGZpbGxPcGFjaXR5LFxuICAgICAgaGlkZSxcbiAgICAgIGlzQW5pbWF0aW9uQWN0aXZlLFxuICAgICAgbGVnZW5kVHlwZSxcbiAgICAgIHN0cm9rZSxcbiAgICAgIHhBeGlzSWQsXG4gICAgICB5QXhpc0lkXG4gICAgfSA9IF9yZXNvbHZlRGVmYXVsdFByb3BzLFxuICAgIGV2ZXJ5dGhpbmdFbHNlID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZXNvbHZlRGVmYXVsdFByb3BzLCBfZXhjbHVkZWQyKTtcbiAgdmFyIGxheW91dCA9IHVzZUNoYXJ0TGF5b3V0KCk7XG4gIHZhciBjaGFydE5hbWUgPSB1c2VDaGFydE5hbWUoKTtcbiAgdmFyIHtcbiAgICBuZWVkQ2xpcFxuICB9ID0gdXNlTmVlZHNDbGlwKHhBeGlzSWQsIHlBeGlzSWQpO1xuICB2YXIgaXNQYW5vcmFtYSA9IHVzZUlzUGFub3JhbWEoKTtcbiAgdmFyIGFyZWFTZXR0aW5ncyA9IHVzZU1lbW8oKCkgPT4gKHtcbiAgICBiYXNlVmFsdWU6IHByb3BzLmJhc2VWYWx1ZSxcbiAgICBzdGFja0lkOiBwcm9wcy5zdGFja0lkLFxuICAgIGNvbm5lY3ROdWxscyxcbiAgICBkYXRhOiBwcm9wcy5kYXRhLFxuICAgIGRhdGFLZXk6IHByb3BzLmRhdGFLZXlcbiAgfSksIFtwcm9wcy5iYXNlVmFsdWUsIHByb3BzLnN0YWNrSWQsIGNvbm5lY3ROdWxscywgcHJvcHMuZGF0YSwgcHJvcHMuZGF0YUtleV0pO1xuICB2YXIge1xuICAgIHBvaW50cyxcbiAgICBpc1JhbmdlLFxuICAgIGJhc2VMaW5lXG4gIH0gPSAoX3VzZUFwcFNlbGVjdG9yID0gdXNlQXBwU2VsZWN0b3Ioc3RhdGUgPT4gc2VsZWN0QXJlYShzdGF0ZSwgeEF4aXNJZCwgeUF4aXNJZCwgaXNQYW5vcmFtYSwgYXJlYVNldHRpbmdzKSkpICE9PSBudWxsICYmIF91c2VBcHBTZWxlY3RvciAhPT0gdm9pZCAwID8gX3VzZUFwcFNlbGVjdG9yIDoge307XG4gIHZhciB7XG4gICAgaGVpZ2h0LFxuICAgIHdpZHRoLFxuICAgIHg6IGxlZnQsXG4gICAgeTogdG9wXG4gIH0gPSB1c2VQbG90QXJlYSgpO1xuICBpZiAobGF5b3V0ICE9PSAnaG9yaXpvbnRhbCcgJiYgbGF5b3V0ICE9PSAndmVydGljYWwnKSB7XG4gICAgLy8gQ2FuJ3QgcmVuZGVyIEFyZWEgaW4gYW4gdW5zdXBwb3J0ZWQgbGF5b3V0XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgaWYgKGNoYXJ0TmFtZSAhPT0gJ0FyZWFDaGFydCcgJiYgY2hhcnROYW1lICE9PSAnQ29tcG9zZWRDaGFydCcpIHtcbiAgICAvLyBUaGVyZSBpcyBub3RoaW5nIHN0b3BwaW5nIHVzIGZyb20gcmVuZGVyaW5nIEFyZWEgaW4gb3RoZXIgY2hhcnRzLCBleGNlcHQgZm9yIGhpc3RvcmljYWwgcmVhc29ucy4gRG8gd2Ugd2FudCB0byBhbGxvdyB0aGF0P1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgLypcbiAgICogSXQgaXMgaW1wb3J0YW50IHRvIE5PVCBoYXZlIHRoaXMgY29uZGl0aW9uIGhlcmUsXG4gICAqIGJlY2F1c2Ugd2UgbmVlZCB0aGUgQW5pbWF0ZSBpbnNpZGUgdG8gcmVjZWl2ZSBhbiBlbXB0eSBzdGF0ZVxuICAgKiBzbyB0aGF0IGl0IGNhbiBwcm9wZXJseSByZXNldCBpdHMgaW50ZXJuYWwgc3RhdGUgYW5kIHN0YXJ0IGEgbmV3IGFuaW1hdGlvbi5cbiAgICovXG4gIC8vIGlmICghcG9pbnRzIHx8ICFwb2ludHMubGVuZ3RoKSB7XG4gIC8vICAgcmV0dXJuIG51bGw7XG4gIC8vIH1cblxuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQXJlYVdpdGhTdGF0ZSwgX2V4dGVuZHMoe30sIGV2ZXJ5dGhpbmdFbHNlLCB7XG4gICAgYWN0aXZlRG90OiBhY3RpdmVEb3QsXG4gICAgYW5pbWF0aW9uQmVnaW46IGFuaW1hdGlvbkJlZ2luLFxuICAgIGFuaW1hdGlvbkR1cmF0aW9uOiBhbmltYXRpb25EdXJhdGlvbixcbiAgICBhbmltYXRpb25FYXNpbmc6IGFuaW1hdGlvbkVhc2luZyxcbiAgICBiYXNlTGluZTogYmFzZUxpbmUsXG4gICAgY29ubmVjdE51bGxzOiBjb25uZWN0TnVsbHMsXG4gICAgZG90OiBkb3QsXG4gICAgZmlsbDogZmlsbCxcbiAgICBmaWxsT3BhY2l0eTogZmlsbE9wYWNpdHksXG4gICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgaGlkZTogaGlkZSxcbiAgICBsYXlvdXQ6IGxheW91dCxcbiAgICBpc0FuaW1hdGlvbkFjdGl2ZTogaXNBbmltYXRpb25BY3RpdmUsXG4gICAgaXNSYW5nZTogaXNSYW5nZSxcbiAgICBsZWdlbmRUeXBlOiBsZWdlbmRUeXBlLFxuICAgIG5lZWRDbGlwOiBuZWVkQ2xpcCxcbiAgICBwb2ludHM6IHBvaW50cyxcbiAgICBzdHJva2U6IHN0cm9rZSxcbiAgICB3aWR0aDogd2lkdGgsXG4gICAgbGVmdDogbGVmdCxcbiAgICB0b3A6IHRvcCxcbiAgICB4QXhpc0lkOiB4QXhpc0lkLFxuICAgIHlBeGlzSWQ6IHlBeGlzSWRcbiAgfSkpO1xufVxuZXhwb3J0IHZhciBnZXRCYXNlVmFsdWUgPSAobGF5b3V0LCBjaGFydEJhc2VWYWx1ZSwgaXRlbUJhc2VWYWx1ZSwgeEF4aXMsIHlBeGlzKSA9PiB7XG4gIC8vIFRoZSBiYXNlVmFsdWUgY2FuIGJlIGRlZmluZWQgYm90aCBvbiB0aGUgQXJlYUNoYXJ0LCBhbmQgb24gdGhlIEFyZWEuXG4gIC8vIFRoZSB2YWx1ZSBmb3IgdGhlIGl0ZW0gdGFrZXMgcHJlY2VkZW5jZS5cbiAgdmFyIGJhc2VWYWx1ZSA9IGl0ZW1CYXNlVmFsdWUgIT09IG51bGwgJiYgaXRlbUJhc2VWYWx1ZSAhPT0gdm9pZCAwID8gaXRlbUJhc2VWYWx1ZSA6IGNoYXJ0QmFzZVZhbHVlO1xuICBpZiAoaXNOdW1iZXIoYmFzZVZhbHVlKSkge1xuICAgIHJldHVybiBiYXNlVmFsdWU7XG4gIH1cbiAgdmFyIG51bWVyaWNBeGlzID0gbGF5b3V0ID09PSAnaG9yaXpvbnRhbCcgPyB5QXhpcyA6IHhBeGlzO1xuICAvLyBAdHMtZXhwZWN0LWVycm9yIGQzc2NhbGUgLmRvbWFpbigpIHJldHVybnMgdW5rbm93biwgTWF0aC5tYXggZXhwZWN0cyBudW1iZXJcbiAgdmFyIGRvbWFpbiA9IG51bWVyaWNBeGlzLnNjYWxlLmRvbWFpbigpO1xuICBpZiAobnVtZXJpY0F4aXMudHlwZSA9PT0gJ251bWJlcicpIHtcbiAgICB2YXIgZG9tYWluTWF4ID0gTWF0aC5tYXgoZG9tYWluWzBdLCBkb21haW5bMV0pO1xuICAgIHZhciBkb21haW5NaW4gPSBNYXRoLm1pbihkb21haW5bMF0sIGRvbWFpblsxXSk7XG4gICAgaWYgKGJhc2VWYWx1ZSA9PT0gJ2RhdGFNaW4nKSB7XG4gICAgICByZXR1cm4gZG9tYWluTWluO1xuICAgIH1cbiAgICBpZiAoYmFzZVZhbHVlID09PSAnZGF0YU1heCcpIHtcbiAgICAgIHJldHVybiBkb21haW5NYXg7XG4gICAgfVxuICAgIHJldHVybiBkb21haW5NYXggPCAwID8gZG9tYWluTWF4IDogTWF0aC5tYXgoTWF0aC5taW4oZG9tYWluWzBdLCBkb21haW5bMV0pLCAwKTtcbiAgfVxuICBpZiAoYmFzZVZhbHVlID09PSAnZGF0YU1pbicpIHtcbiAgICByZXR1cm4gZG9tYWluWzBdO1xuICB9XG4gIGlmIChiYXNlVmFsdWUgPT09ICdkYXRhTWF4Jykge1xuICAgIHJldHVybiBkb21haW5bMV07XG4gIH1cbiAgcmV0dXJuIGRvbWFpblswXTtcbn07XG5leHBvcnQgZnVuY3Rpb24gY29tcHV0ZUFyZWEoX3JlZjkpIHtcbiAgdmFyIHtcbiAgICBhcmVhU2V0dGluZ3M6IHtcbiAgICAgIGNvbm5lY3ROdWxscyxcbiAgICAgIGJhc2VWYWx1ZTogaXRlbUJhc2VWYWx1ZSxcbiAgICAgIGRhdGFLZXlcbiAgICB9LFxuICAgIHN0YWNrZWREYXRhLFxuICAgIGxheW91dCxcbiAgICBjaGFydEJhc2VWYWx1ZSxcbiAgICB4QXhpcyxcbiAgICB5QXhpcyxcbiAgICBkaXNwbGF5ZWREYXRhLFxuICAgIGRhdGFTdGFydEluZGV4LFxuICAgIHhBeGlzVGlja3MsXG4gICAgeUF4aXNUaWNrcyxcbiAgICBiYW5kU2l6ZVxuICB9ID0gX3JlZjk7XG4gIHZhciBoYXNTdGFjayA9IHN0YWNrZWREYXRhICYmIHN0YWNrZWREYXRhLmxlbmd0aDtcbiAgdmFyIGJhc2VWYWx1ZSA9IGdldEJhc2VWYWx1ZShsYXlvdXQsIGNoYXJ0QmFzZVZhbHVlLCBpdGVtQmFzZVZhbHVlLCB4QXhpcywgeUF4aXMpO1xuICB2YXIgaXNIb3Jpem9udGFsTGF5b3V0ID0gbGF5b3V0ID09PSAnaG9yaXpvbnRhbCc7XG4gIHZhciBpc1JhbmdlID0gZmFsc2U7XG4gIHZhciBwb2ludHMgPSBkaXNwbGF5ZWREYXRhLm1hcCgoZW50cnksIGluZGV4KSA9PiB7XG4gICAgdmFyIHZhbHVlO1xuICAgIGlmIChoYXNTdGFjaykge1xuICAgICAgdmFsdWUgPSBzdGFja2VkRGF0YVtkYXRhU3RhcnRJbmRleCArIGluZGV4XTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFsdWUgPSBnZXRWYWx1ZUJ5RGF0YUtleShlbnRyeSwgZGF0YUtleSk7XG4gICAgICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIHZhbHVlID0gW2Jhc2VWYWx1ZSwgdmFsdWVdO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaXNSYW5nZSA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuICAgIHZhciBpc0JyZWFrUG9pbnQgPSB2YWx1ZVsxXSA9PSBudWxsIHx8IGhhc1N0YWNrICYmICFjb25uZWN0TnVsbHMgJiYgZ2V0VmFsdWVCeURhdGFLZXkoZW50cnksIGRhdGFLZXkpID09IG51bGw7XG4gICAgaWYgKGlzSG9yaXpvbnRhbExheW91dCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBnZXRDYXRlQ29vcmRpbmF0ZU9mTGluZSBleHBlY3RzIGNoYXJ0IGRhdGEgdG8gYmUgYW4gb2JqZWN0LCB3ZSBhbGxvdyB1bmtub3duXG4gICAgICAgIHg6IGdldENhdGVDb29yZGluYXRlT2ZMaW5lKHtcbiAgICAgICAgICBheGlzOiB4QXhpcyxcbiAgICAgICAgICB0aWNrczogeEF4aXNUaWNrcyxcbiAgICAgICAgICBiYW5kU2l6ZSxcbiAgICAgICAgICBlbnRyeSxcbiAgICAgICAgICBpbmRleFxuICAgICAgICB9KSxcbiAgICAgICAgeTogaXNCcmVha1BvaW50ID8gbnVsbCA6IHlBeGlzLnNjYWxlKHZhbHVlWzFdKSxcbiAgICAgICAgdmFsdWUsXG4gICAgICAgIHBheWxvYWQ6IGVudHJ5XG4gICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgeDogaXNCcmVha1BvaW50ID8gbnVsbCA6IHhBeGlzLnNjYWxlKHZhbHVlWzFdKSxcbiAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgZ2V0Q2F0ZUNvb3JkaW5hdGVPZkxpbmUgZXhwZWN0cyBjaGFydCBkYXRhIHRvIGJlIGFuIG9iamVjdCwgd2UgYWxsb3cgdW5rbm93blxuICAgICAgeTogZ2V0Q2F0ZUNvb3JkaW5hdGVPZkxpbmUoe1xuICAgICAgICBheGlzOiB5QXhpcyxcbiAgICAgICAgdGlja3M6IHlBeGlzVGlja3MsXG4gICAgICAgIGJhbmRTaXplLFxuICAgICAgICBlbnRyeSxcbiAgICAgICAgaW5kZXhcbiAgICAgIH0pLFxuICAgICAgdmFsdWUsXG4gICAgICBwYXlsb2FkOiBlbnRyeVxuICAgIH07XG4gIH0pO1xuICB2YXIgYmFzZUxpbmU7XG4gIGlmIChoYXNTdGFjayB8fCBpc1JhbmdlKSB7XG4gICAgYmFzZUxpbmUgPSBwb2ludHMubWFwKGVudHJ5ID0+IHtcbiAgICAgIHZhciB4ID0gQXJyYXkuaXNBcnJheShlbnRyeS52YWx1ZSkgPyBlbnRyeS52YWx1ZVswXSA6IG51bGw7XG4gICAgICBpZiAoaXNIb3Jpem9udGFsTGF5b3V0KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgeDogZW50cnkueCxcbiAgICAgICAgICB5OiB4ICE9IG51bGwgJiYgZW50cnkueSAhPSBudWxsID8geUF4aXMuc2NhbGUoeCkgOiBudWxsXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICByZXR1cm4ge1xuICAgICAgICB4OiB4ICE9IG51bGwgPyB4QXhpcy5zY2FsZSh4KSA6IG51bGwsXG4gICAgICAgIHk6IGVudHJ5LnlcbiAgICAgIH07XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgYmFzZUxpbmUgPSBpc0hvcml6b250YWxMYXlvdXQgPyB5QXhpcy5zY2FsZShiYXNlVmFsdWUpIDogeEF4aXMuc2NhbGUoYmFzZVZhbHVlKTtcbiAgfVxuICByZXR1cm4ge1xuICAgIHBvaW50cyxcbiAgICBiYXNlTGluZSxcbiAgICBpc1JhbmdlXG4gIH07XG59XG5leHBvcnQgY2xhc3MgQXJlYSBleHRlbmRzIFB1cmVDb21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgLy8gUmVwb3J0IGFsbCBwcm9wcyB0byBSZWR1eCBzdG9yZSBmaXJzdCwgYmVmb3JlIGNhbGxpbmcgYW55IGhvb2tzLCB0byBhdm9pZCBjaXJjdWxhciBkZXBlbmRlbmNpZXMuXG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENhcnRlc2lhbkdyYXBoaWNhbEl0ZW1Db250ZXh0LCB7XG4gICAgICB0eXBlOiBcImFyZWFcIixcbiAgICAgIGRhdGE6IHRoaXMucHJvcHMuZGF0YSxcbiAgICAgIGRhdGFLZXk6IHRoaXMucHJvcHMuZGF0YUtleSxcbiAgICAgIHhBeGlzSWQ6IHRoaXMucHJvcHMueEF4aXNJZCxcbiAgICAgIHlBeGlzSWQ6IHRoaXMucHJvcHMueUF4aXNJZCxcbiAgICAgIHpBeGlzSWQ6IDAsXG4gICAgICBzdGFja0lkOiB0aGlzLnByb3BzLnN0YWNrSWQsXG4gICAgICBoaWRlOiB0aGlzLnByb3BzLmhpZGUsXG4gICAgICBiYXJTaXplOiB1bmRlZmluZWRcbiAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChTZXRMZWdlbmRQYXlsb2FkLCB7XG4gICAgICBsZWdlbmRQYXlsb2FkOiBjb21wdXRlTGVnZW5kUGF5bG9hZEZyb21BcmVhRGF0YSh0aGlzLnByb3BzKVxuICAgIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChTZXRUb29sdGlwRW50cnlTZXR0aW5ncywge1xuICAgICAgZm46IGdldFRvb2x0aXBFbnRyeVNldHRpbmdzLFxuICAgICAgYXJnczogdGhpcy5wcm9wc1xuICAgIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChBcmVhSW1wbCwgdGhpcy5wcm9wcykpO1xuICB9XG59XG5fZGVmaW5lUHJvcGVydHkoQXJlYSwgXCJkaXNwbGF5TmFtZVwiLCAnQXJlYScpO1xuX2RlZmluZVByb3BlcnR5KEFyZWEsIFwiZGVmYXVsdFByb3BzXCIsIGRlZmF1bHRBcmVhUHJvcHMpOyJdLCJuYW1lcyI6WyJfZXhjbHVkZWQiLCJfZXhjbHVkZWQyIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwiZSIsInQiLCJvIiwiciIsImkiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsIk9iamVjdCIsImdldE93blByb3BlcnR5U3ltYm9scyIsIm4iLCJsZW5ndGgiLCJpbmRleE9mIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJjYWxsIiwiaGFzT3duUHJvcGVydHkiLCJvd25LZXlzIiwia2V5cyIsImZpbHRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwiYXJndW1lbnRzIiwiZm9yRWFjaCIsIl9kZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZGVmaW5lUHJvcGVydHkiLCJfdG9Qcm9wZXJ0eUtleSIsInZhbHVlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJfdG9QcmltaXRpdmUiLCJTeW1ib2wiLCJ0b1ByaW1pdGl2ZSIsIlR5cGVFcnJvciIsIlN0cmluZyIsIk51bWJlciIsIl9leHRlbmRzIiwiYXNzaWduIiwiYmluZCIsIlJlYWN0IiwiUHVyZUNvbXBvbmVudCIsInVzZUNhbGxiYWNrIiwidXNlTWVtbyIsInVzZVJlZiIsInVzZVN0YXRlIiwiY2xzeCIsIkN1cnZlIiwiRG90IiwiTGF5ZXIiLCJMYWJlbExpc3QiLCJHbG9iYWwiLCJpbnRlcnBvbGF0ZSIsImlzTmFuIiwiaXNOdWxsaXNoIiwiaXNOdW1iZXIiLCJ1bmlxdWVJZCIsImdldENhdGVDb29yZGluYXRlT2ZMaW5lIiwiZ2V0VG9vbHRpcE5hbWVQcm9wIiwiZ2V0VmFsdWVCeURhdGFLZXkiLCJmaWx0ZXJQcm9wcyIsImlzQ2xpcERvdCIsIkFjdGl2ZVBvaW50cyIsIlNldFRvb2x0aXBFbnRyeVNldHRpbmdzIiwiQ2FydGVzaWFuR3JhcGhpY2FsSXRlbUNvbnRleHQiLCJHcmFwaGljYWxJdGVtQ2xpcFBhdGgiLCJ1c2VOZWVkc0NsaXAiLCJzZWxlY3RBcmVhIiwidXNlSXNQYW5vcmFtYSIsInVzZUNoYXJ0TGF5b3V0IiwidXNlQ2hhcnROYW1lIiwiU2V0TGVnZW5kUGF5bG9hZCIsInVzZUFwcFNlbGVjdG9yIiwidXNlQW5pbWF0aW9uSWQiLCJyZXNvbHZlRGVmYXVsdFByb3BzIiwiaXNXZWxsQmVoYXZlZE51bWJlciIsIkFuaW1hdGUiLCJ1c2VQbG90QXJlYSIsImdldExlZ2VuZEl0ZW1Db2xvciIsInN0cm9rZSIsImZpbGwiLCJjb21wdXRlTGVnZW5kUGF5bG9hZEZyb21BcmVhRGF0YSIsInByb3BzIiwiZGF0YUtleSIsIm5hbWUiLCJsZWdlbmRUeXBlIiwiaGlkZSIsImluYWN0aXZlIiwidHlwZSIsImNvbG9yIiwicGF5bG9hZCIsImdldFRvb2x0aXBFbnRyeVNldHRpbmdzIiwiZGF0YSIsInN0cm9rZVdpZHRoIiwidW5pdCIsImRhdGFEZWZpbmVkT25JdGVtIiwicG9zaXRpb25zIiwidW5kZWZpbmVkIiwic2V0dGluZ3MiLCJuYW1lS2V5IiwidG9vbHRpcFR5cGUiLCJyZW5kZXJEb3RJdGVtIiwib3B0aW9uIiwiZG90SXRlbSIsImlzVmFsaWRFbGVtZW50IiwiY2xvbmVFbGVtZW50IiwiY2xhc3NOYW1lIiwiY3JlYXRlRWxlbWVudCIsInNob3VsZFJlbmRlckRvdHMiLCJwb2ludHMiLCJkb3QiLCJEb3RzIiwiX3JlZiIsImNsaXBQYXRoSWQiLCJuZWVkQ2xpcCIsImNsaXBEb3QiLCJhcmVhUHJvcHMiLCJjdXN0b21Eb3RQcm9wcyIsImRvdHMiLCJtYXAiLCJlbnRyeSIsImRvdFByb3BzIiwia2V5IiwiY29uY2F0IiwiaW5kZXgiLCJjeCIsIngiLCJjeSIsInkiLCJkb3RzUHJvcHMiLCJjbGlwUGF0aCIsIlN0YXRpY0FyZWEiLCJfcmVmMiIsImJhc2VMaW5lIiwic2hvd0xhYmVscyIsImxheW91dCIsImNvbm5lY3ROdWxscyIsImlzUmFuZ2UiLCJvdGhlcnMiLCJGcmFnbWVudCIsInJlbmRlckNhbGxCeVBhcmVudCIsIlZlcnRpY2FsUmVjdCIsIl9yZWYzIiwiYWxwaGEiLCJzdGFydFkiLCJlbmRZIiwiaGVpZ2h0IiwiTWF0aCIsImFicyIsIm1heFgiLCJtYXgiLCJBcnJheSIsImlzQXJyYXkiLCJ3aWR0aCIsInBhcnNlSW50IiwiZmxvb3IiLCJIb3Jpem9udGFsUmVjdCIsIl9yZWY0Iiwic3RhcnRYIiwiZW5kWCIsIm1heFkiLCJDbGlwUmVjdCIsIl9yZWY1IiwiQXJlYVdpdGhBbmltYXRpb24iLCJfcmVmNiIsInByZXZpb3VzUG9pbnRzUmVmIiwicHJldmlvdXNCYXNlbGluZVJlZiIsImlzQW5pbWF0aW9uQWN0aXZlIiwiYW5pbWF0aW9uQmVnaW4iLCJhbmltYXRpb25EdXJhdGlvbiIsImFuaW1hdGlvbkVhc2luZyIsIm9uQW5pbWF0aW9uU3RhcnQiLCJvbkFuaW1hdGlvbkVuZCIsImFuaW1hdGlvbklkIiwiaXNBbmltYXRpbmciLCJzZXRJc0FuaW1hdGluZyIsImhhbmRsZUFuaW1hdGlvbkVuZCIsImhhbmRsZUFuaW1hdGlvblN0YXJ0IiwicHJldlBvaW50cyIsImN1cnJlbnQiLCJwcmV2QmFzZUxpbmUiLCJiZWdpbiIsImR1cmF0aW9uIiwiaXNBY3RpdmUiLCJlYXNpbmciLCJmcm9tIiwidG8iLCJfcmVmNyIsInByZXZQb2ludHNEaWZmRmFjdG9yIiwic3RlcFBvaW50cyIsInByZXZQb2ludEluZGV4IiwicHJldiIsInN0ZXBCYXNlTGluZSIsImlkIiwiUmVuZGVyQXJlYSIsIl9yZWY4IiwiQXJlYVdpdGhTdGF0ZSIsImNvbnN0cnVjdG9yIiwicmVuZGVyIiwiX2ZpbHRlclByb3BzIiwidG9wIiwibGVmdCIsInhBeGlzSWQiLCJ5QXhpc0lkIiwibGF5ZXJDbGFzcyIsImRvdFNpemUiLCJtYWluQ29sb3IiLCJpdGVtRGF0YUtleSIsImFjdGl2ZURvdCIsImRlZmF1bHRBcmVhUHJvcHMiLCJmaWxsT3BhY2l0eSIsImlzU3NyIiwiQXJlYUltcGwiLCJfdXNlQXBwU2VsZWN0b3IiLCJfcmVzb2x2ZURlZmF1bHRQcm9wcyIsImV2ZXJ5dGhpbmdFbHNlIiwiY2hhcnROYW1lIiwiaXNQYW5vcmFtYSIsImFyZWFTZXR0aW5ncyIsImJhc2VWYWx1ZSIsInN0YWNrSWQiLCJzdGF0ZSIsImdldEJhc2VWYWx1ZSIsImNoYXJ0QmFzZVZhbHVlIiwiaXRlbUJhc2VWYWx1ZSIsInhBeGlzIiwieUF4aXMiLCJudW1lcmljQXhpcyIsImRvbWFpbiIsInNjYWxlIiwiZG9tYWluTWF4IiwiZG9tYWluTWluIiwibWluIiwiY29tcHV0ZUFyZWEiLCJfcmVmOSIsInN0YWNrZWREYXRhIiwiZGlzcGxheWVkRGF0YSIsImRhdGFTdGFydEluZGV4IiwieEF4aXNUaWNrcyIsInlBeGlzVGlja3MiLCJiYW5kU2l6ZSIsImhhc1N0YWNrIiwiaXNIb3Jpem9udGFsTGF5b3V0IiwiaXNCcmVha1BvaW50IiwiYXhpcyIsInRpY2tzIiwiQXJlYSIsInpBeGlzSWQiLCJiYXJTaXplIiwibGVnZW5kUGF5bG9hZCIsImZuIiwiYXJncyJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/recharts/es6/cartesian/Area.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/recharts/es6/cartesian/Bar.js":
/*!****************************************************!*\
  !*** ./node_modules/recharts/es6/cartesian/Bar.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bar: () => (/* binding */ Bar),\n/* harmony export */   computeBarRectangles: () => (/* binding */ computeBarRectangles)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../container/Layer */ \"(ssr)/./node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _ErrorBar__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./ErrorBar */ \"(ssr)/./node_modules/recharts/es6/cartesian/ErrorBar.js\");\n/* harmony import */ var _component_Cell__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../component/Cell */ \"(ssr)/./node_modules/recharts/es6/component/Cell.js\");\n/* harmony import */ var _component_LabelList__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../component/LabelList */ \"(ssr)/./node_modules/recharts/es6/component/LabelList.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _util_Global__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../util/Global */ \"(ssr)/./node_modules/recharts/es6/util/Global.js\");\n/* harmony import */ var _util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ChartUtils */ \"(ssr)/./node_modules/recharts/es6/util/ChartUtils.js\");\n/* harmony import */ var _util_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/types */ \"(ssr)/./node_modules/recharts/es6/util/types.js\");\n/* harmony import */ var _util_BarUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/BarUtils */ \"(ssr)/./node_modules/recharts/es6/util/BarUtils.js\");\n/* harmony import */ var _context_tooltipContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../context/tooltipContext */ \"(ssr)/./node_modules/recharts/es6/context/tooltipContext.js\");\n/* harmony import */ var _state_SetTooltipEntrySettings__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../state/SetTooltipEntrySettings */ \"(ssr)/./node_modules/recharts/es6/state/SetTooltipEntrySettings.js\");\n/* harmony import */ var _state_ReportBar__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../state/ReportBar */ \"(ssr)/./node_modules/recharts/es6/state/ReportBar.js\");\n/* harmony import */ var _context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../context/CartesianGraphicalItemContext */ \"(ssr)/./node_modules/recharts/es6/context/CartesianGraphicalItemContext.js\");\n/* harmony import */ var _GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./GraphicalItemClipPath */ \"(ssr)/./node_modules/recharts/es6/cartesian/GraphicalItemClipPath.js\");\n/* harmony import */ var _context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../context/chartLayoutContext */ \"(ssr)/./node_modules/recharts/es6/context/chartLayoutContext.js\");\n/* harmony import */ var _state_selectors_barSelectors__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../state/selectors/barSelectors */ \"(ssr)/./node_modules/recharts/es6/state/selectors/barSelectors.js\");\n/* harmony import */ var _state_hooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../state/hooks */ \"(ssr)/./node_modules/recharts/es6/state/hooks.js\");\n/* harmony import */ var _context_PanoramaContext__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../context/PanoramaContext */ \"(ssr)/./node_modules/recharts/es6/context/PanoramaContext.js\");\n/* harmony import */ var _state_selectors_tooltipSelectors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../state/selectors/tooltipSelectors */ \"(ssr)/./node_modules/recharts/es6/state/selectors/tooltipSelectors.js\");\n/* harmony import */ var _state_SetLegendPayload__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../state/SetLegendPayload */ \"(ssr)/./node_modules/recharts/es6/state/SetLegendPayload.js\");\n/* harmony import */ var _util_useAnimationId__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../util/useAnimationId */ \"(ssr)/./node_modules/recharts/es6/util/useAnimationId.js\");\n/* harmony import */ var _util_resolveDefaultProps__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../util/resolveDefaultProps */ \"(ssr)/./node_modules/recharts/es6/util/resolveDefaultProps.js\");\n/* harmony import */ var _animation_Animate__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../animation/Animate */ \"(ssr)/./node_modules/recharts/es6/animation/Animate.js\");\nvar _excluded = [\n    \"onMouseEnter\",\n    \"onMouseLeave\",\n    \"onClick\"\n], _excluded2 = [\n    \"value\",\n    \"background\",\n    \"tooltipPosition\"\n], _excluded3 = [\n    \"onMouseEnter\",\n    \"onClick\",\n    \"onMouseLeave\"\n];\nfunction _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function(n) {\n        for(var e = 1; e < arguments.length; e++){\n            var t = arguments[e];\n            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n        }\n        return n;\n    }, _extends.apply(null, arguments);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _objectWithoutProperties(e, t) {\n    if (null == e) return {};\n    var o, r, i = _objectWithoutPropertiesLoose(e, t);\n    if (Object.getOwnPropertySymbols) {\n        var n = Object.getOwnPropertySymbols(e);\n        for(r = 0; r < n.length; r++)o = n[r], -1 === t.indexOf(o) && ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n    }\n    return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n    if (null == r) return {};\n    var t = {};\n    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {\n        if (-1 !== e.indexOf(n)) continue;\n        t[n] = r[n];\n    }\n    return t;\n}\n/**\n * @fileOverview Render a group of bar\n */ // eslint-disable-next-line max-classes-per-file\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar computeLegendPayloadFromBarData = (props)=>{\n    var { dataKey, name, fill, legendType, hide } = props;\n    return [\n        {\n            inactive: hide,\n            dataKey,\n            type: legendType,\n            color: fill,\n            value: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getTooltipNameProp)(name, dataKey),\n            payload: props\n        }\n    ];\n};\nfunction getTooltipEntrySettings(props) {\n    var { dataKey, stroke, strokeWidth, fill, name, hide, unit } = props;\n    return {\n        dataDefinedOnItem: undefined,\n        positions: undefined,\n        settings: {\n            stroke,\n            strokeWidth,\n            fill,\n            dataKey,\n            nameKey: undefined,\n            name: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getTooltipNameProp)(name, dataKey),\n            hide,\n            type: props.tooltipType,\n            color: props.fill,\n            unit\n        }\n    };\n}\nfunction BarBackground(props) {\n    var activeIndex = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_3__.useAppSelector)(_state_selectors_tooltipSelectors__WEBPACK_IMPORTED_MODULE_4__.selectActiveTooltipIndex);\n    var { data, dataKey, background: backgroundFromProps, allOtherBarProps } = props;\n    var { onMouseEnter: onMouseEnterFromProps, onMouseLeave: onMouseLeaveFromProps, onClick: onItemClickFromProps } = allOtherBarProps, restOfAllOtherProps = _objectWithoutProperties(allOtherBarProps, _excluded);\n    var onMouseEnterFromContext = (0,_context_tooltipContext__WEBPACK_IMPORTED_MODULE_5__.useMouseEnterItemDispatch)(onMouseEnterFromProps, dataKey);\n    var onMouseLeaveFromContext = (0,_context_tooltipContext__WEBPACK_IMPORTED_MODULE_5__.useMouseLeaveItemDispatch)(onMouseLeaveFromProps);\n    var onClickFromContext = (0,_context_tooltipContext__WEBPACK_IMPORTED_MODULE_5__.useMouseClickItemDispatch)(onItemClickFromProps, dataKey);\n    if (!backgroundFromProps || data == null) {\n        return null;\n    }\n    var backgroundProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__.filterProps)(backgroundFromProps, false);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, data.map((entry, i)=>{\n        var { value, background: backgroundFromDataEntry, tooltipPosition } = entry, rest = _objectWithoutProperties(entry, _excluded2);\n        if (!backgroundFromDataEntry) {\n            return null;\n        }\n        // @ts-expect-error BarRectangleItem type definition says it's missing properties, but I can see them present in debugger!\n        var onMouseEnter = onMouseEnterFromContext(entry, i);\n        // @ts-expect-error BarRectangleItem type definition says it's missing properties, but I can see them present in debugger!\n        var onMouseLeave = onMouseLeaveFromContext(entry, i);\n        // @ts-expect-error BarRectangleItem type definition says it's missing properties, but I can see them present in debugger!\n        var onClick = onClickFromContext(entry, i);\n        var barRectangleProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n            option: backgroundFromProps,\n            isActive: String(i) === activeIndex\n        }, rest), {}, {\n            // @ts-expect-error BarRectangle props do not accept `fill` property.\n            fill: '#eee'\n        }, backgroundFromDataEntry), backgroundProps), (0,_util_types__WEBPACK_IMPORTED_MODULE_7__.adaptEventsOfChild)(restOfAllOtherProps, entry, i)), {}, {\n            onMouseEnter,\n            onMouseLeave,\n            onClick,\n            dataKey,\n            index: i,\n            className: 'recharts-bar-background-rectangle'\n        });\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_util_BarUtils__WEBPACK_IMPORTED_MODULE_8__.BarRectangle, _extends({\n            key: \"background-bar-\".concat(i)\n        }, barRectangleProps));\n    }));\n}\nfunction BarRectangles(_ref) {\n    var { data, props, showLabels } = _ref;\n    var baseProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__.filterProps)(props, false);\n    var { shape, dataKey, activeBar } = props;\n    var activeIndex = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_3__.useAppSelector)(_state_selectors_tooltipSelectors__WEBPACK_IMPORTED_MODULE_4__.selectActiveTooltipIndex);\n    var activeDataKey = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_3__.useAppSelector)(_state_selectors_tooltipSelectors__WEBPACK_IMPORTED_MODULE_4__.selectActiveTooltipDataKey);\n    var { onMouseEnter: onMouseEnterFromProps, onClick: onItemClickFromProps, onMouseLeave: onMouseLeaveFromProps } = props, restOfAllOtherProps = _objectWithoutProperties(props, _excluded3);\n    var onMouseEnterFromContext = (0,_context_tooltipContext__WEBPACK_IMPORTED_MODULE_5__.useMouseEnterItemDispatch)(onMouseEnterFromProps, dataKey);\n    var onMouseLeaveFromContext = (0,_context_tooltipContext__WEBPACK_IMPORTED_MODULE_5__.useMouseLeaveItemDispatch)(onMouseLeaveFromProps);\n    var onClickFromContext = (0,_context_tooltipContext__WEBPACK_IMPORTED_MODULE_5__.useMouseClickItemDispatch)(onItemClickFromProps, dataKey);\n    if (!data) {\n        return null;\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, data.map((entry, i)=>{\n        /*\n     * Bars support stacking, meaning that there can be multiple bars at the same x value.\n     * With Tooltip shared=false we only want to highlight the currently active Bar, not all.\n     *\n     * Also, if the tooltip is shared, we want to highlight all bars at the same x value\n     * regardless of the dataKey.\n     *\n     * With shared Tooltip, the activeDataKey is undefined.\n     */ var isActive = activeBar && String(i) === activeIndex && (activeDataKey == null || dataKey === activeDataKey);\n        var option = isActive ? activeBar : shape;\n        var barRectangleProps = _objectSpread(_objectSpread(_objectSpread({}, baseProps), entry), {}, {\n            isActive,\n            option,\n            index: i,\n            dataKey\n        });\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_9__.Layer, _extends({\n            className: \"recharts-bar-rectangle\"\n        }, (0,_util_types__WEBPACK_IMPORTED_MODULE_7__.adaptEventsOfChild)(restOfAllOtherProps, entry, i), {\n            // @ts-expect-error BarRectangleItem type definition says it's missing properties, but I can see them present in debugger!\n            onMouseEnter: onMouseEnterFromContext(entry, i),\n            onMouseLeave: onMouseLeaveFromContext(entry, i),\n            onClick: onClickFromContext(entry, i),\n            key: \"rectangle-\".concat(entry === null || entry === void 0 ? void 0 : entry.x, \"-\").concat(entry === null || entry === void 0 ? void 0 : entry.y, \"-\").concat(entry === null || entry === void 0 ? void 0 : entry.value, \"-\").concat(i)\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_util_BarUtils__WEBPACK_IMPORTED_MODULE_8__.BarRectangle, barRectangleProps));\n    }), showLabels && _component_LabelList__WEBPACK_IMPORTED_MODULE_10__.LabelList.renderCallByParent(props, data));\n}\nfunction RectanglesWithAnimation(_ref2) {\n    var { props, previousRectanglesRef } = _ref2;\n    var { data, layout, isAnimationActive, animationBegin, animationDuration, animationEasing, onAnimationEnd, onAnimationStart } = props;\n    var prevData = previousRectanglesRef.current;\n    var animationId = (0,_util_useAnimationId__WEBPACK_IMPORTED_MODULE_11__.useAnimationId)(props, 'recharts-bar-');\n    var [isAnimating, setIsAnimating] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    var handleAnimationEnd = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"RectanglesWithAnimation.useCallback[handleAnimationEnd]\": ()=>{\n            if (typeof onAnimationEnd === 'function') {\n                onAnimationEnd();\n            }\n            setIsAnimating(false);\n        }\n    }[\"RectanglesWithAnimation.useCallback[handleAnimationEnd]\"], [\n        onAnimationEnd\n    ]);\n    var handleAnimationStart = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"RectanglesWithAnimation.useCallback[handleAnimationStart]\": ()=>{\n            if (typeof onAnimationStart === 'function') {\n                onAnimationStart();\n            }\n            setIsAnimating(true);\n        }\n    }[\"RectanglesWithAnimation.useCallback[handleAnimationStart]\"], [\n        onAnimationStart\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_animation_Animate__WEBPACK_IMPORTED_MODULE_12__.Animate, {\n        begin: animationBegin,\n        duration: animationDuration,\n        isActive: isAnimationActive,\n        easing: animationEasing,\n        from: {\n            t: 0\n        },\n        to: {\n            t: 1\n        },\n        onAnimationEnd: handleAnimationEnd,\n        onAnimationStart: handleAnimationStart,\n        key: animationId\n    }, (_ref3)=>{\n        var { t } = _ref3;\n        var stepData = t === 1 ? data : data.map((entry, index)=>{\n            var prev = prevData && prevData[index];\n            if (prev) {\n                var interpolatorX = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.interpolateNumber)(prev.x, entry.x);\n                var interpolatorY = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.interpolateNumber)(prev.y, entry.y);\n                var interpolatorWidth = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.interpolateNumber)(prev.width, entry.width);\n                var interpolatorHeight = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.interpolateNumber)(prev.height, entry.height);\n                return _objectSpread(_objectSpread({}, entry), {}, {\n                    x: interpolatorX(t),\n                    y: interpolatorY(t),\n                    width: interpolatorWidth(t),\n                    height: interpolatorHeight(t)\n                });\n            }\n            if (layout === 'horizontal') {\n                var _interpolatorHeight = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.interpolateNumber)(0, entry.height);\n                var h = _interpolatorHeight(t);\n                return _objectSpread(_objectSpread({}, entry), {}, {\n                    y: entry.y + entry.height - h,\n                    height: h\n                });\n            }\n            var interpolator = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.interpolateNumber)(0, entry.width);\n            var w = interpolator(t);\n            return _objectSpread(_objectSpread({}, entry), {}, {\n                width: w\n            });\n        });\n        if (t > 0) {\n            // eslint-disable-next-line no-param-reassign\n            previousRectanglesRef.current = stepData;\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_9__.Layer, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(BarRectangles, {\n            props: props,\n            data: stepData,\n            showLabels: !isAnimating\n        }));\n    });\n}\nfunction RenderRectangles(props) {\n    var { data, isAnimationActive } = props;\n    var previousRectanglesRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    if (isAnimationActive && data && data.length && (previousRectanglesRef.current == null || previousRectanglesRef.current !== data)) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RectanglesWithAnimation, {\n            previousRectanglesRef: previousRectanglesRef,\n            props: props\n        });\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(BarRectangles, {\n        props: props,\n        data: data,\n        showLabels: true\n    });\n}\nvar defaultMinPointSize = 0;\nvar errorBarDataPointFormatter = (dataPoint, dataKey)=>{\n    /**\n   * if the value coming from `selectBarRectangles` is an array then this is a stacked bar chart.\n   * arr[1] represents end value of the bar since the data is in the form of [startValue, endValue].\n   * */ var value = Array.isArray(dataPoint.value) ? dataPoint.value[1] : dataPoint.value;\n    return {\n        x: dataPoint.x,\n        y: dataPoint.y,\n        value,\n        // @ts-expect-error getValueByDataKey does not validate the output type\n        errorVal: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getValueByDataKey)(dataPoint, dataKey)\n    };\n};\nclass BarWithState extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n    constructor(){\n        super(...arguments);\n        _defineProperty(this, \"id\", (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.uniqueId)('recharts-bar-'));\n    }\n    render() {\n        var { hide, data, dataKey, className, xAxisId, yAxisId, needClip, background, id, layout } = this.props;\n        if (hide) {\n            return null;\n        }\n        var layerClass = (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)('recharts-bar', className);\n        var clipPathId = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.isNullish)(id) ? this.id : id;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_9__.Layer, {\n            className: layerClass\n        }, needClip && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"defs\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_14__.GraphicalItemClipPath, {\n            clipPathId: clipPathId,\n            xAxisId: xAxisId,\n            yAxisId: yAxisId\n        })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_9__.Layer, {\n            className: \"recharts-bar-rectangles\",\n            clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : null\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(BarBackground, {\n            data: data,\n            dataKey: dataKey,\n            background: background,\n            allOtherBarProps: this.props\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RenderRectangles, this.props)), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ErrorBar__WEBPACK_IMPORTED_MODULE_15__.SetErrorBarPreferredDirection, {\n            direction: layout === 'horizontal' ? 'y' : 'x'\n        }, this.props.children));\n    }\n}\nvar defaultBarProps = {\n    activeBar: false,\n    animationBegin: 0,\n    animationDuration: 400,\n    animationEasing: 'ease',\n    hide: false,\n    isAnimationActive: !_util_Global__WEBPACK_IMPORTED_MODULE_16__.Global.isSsr,\n    legendType: 'rect',\n    minPointSize: defaultMinPointSize,\n    xAxisId: 0,\n    yAxisId: 0\n};\nfunction BarImpl(props) {\n    var { xAxisId, yAxisId, hide, legendType, minPointSize, activeBar, animationBegin, animationDuration, animationEasing, isAnimationActive } = (0,_util_resolveDefaultProps__WEBPACK_IMPORTED_MODULE_17__.resolveDefaultProps)(props, defaultBarProps);\n    var { needClip } = (0,_GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_14__.useNeedsClip)(xAxisId, yAxisId);\n    var layout = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_18__.useChartLayout)();\n    var isPanorama = (0,_context_PanoramaContext__WEBPACK_IMPORTED_MODULE_19__.useIsPanorama)();\n    var barSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"BarImpl.useMemo[barSettings]\": ()=>({\n                barSize: props.barSize,\n                data: undefined,\n                dataKey: props.dataKey,\n                maxBarSize: props.maxBarSize,\n                minPointSize,\n                stackId: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getNormalizedStackId)(props.stackId)\n            })\n    }[\"BarImpl.useMemo[barSettings]\"], [\n        props.barSize,\n        props.dataKey,\n        props.maxBarSize,\n        minPointSize,\n        props.stackId\n    ]);\n    var cells = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__.findAllByType)(props.children, _component_Cell__WEBPACK_IMPORTED_MODULE_20__.Cell);\n    var rects = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_3__.useAppSelector)({\n        \"BarImpl.useAppSelector[rects]\": (state)=>(0,_state_selectors_barSelectors__WEBPACK_IMPORTED_MODULE_21__.selectBarRectangles)(state, xAxisId, yAxisId, isPanorama, barSettings, cells)\n    }[\"BarImpl.useAppSelector[rects]\"]);\n    if (layout !== 'vertical' && layout !== 'horizontal') {\n        return null;\n    }\n    var errorBarOffset;\n    var firstDataPoint = rects === null || rects === void 0 ? void 0 : rects[0];\n    if (firstDataPoint == null || firstDataPoint.height == null || firstDataPoint.width == null) {\n        errorBarOffset = 0;\n    } else {\n        errorBarOffset = layout === 'vertical' ? firstDataPoint.height / 2 : firstDataPoint.width / 2;\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_22__.SetErrorBarContext, {\n        xAxisId: xAxisId,\n        yAxisId: yAxisId,\n        data: rects,\n        dataPointFormatter: errorBarDataPointFormatter,\n        errorBarOffset: errorBarOffset\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(BarWithState, _extends({}, props, {\n        layout: layout,\n        needClip: needClip,\n        data: rects,\n        xAxisId: xAxisId,\n        yAxisId: yAxisId,\n        hide: hide,\n        legendType: legendType,\n        minPointSize: minPointSize,\n        activeBar: activeBar,\n        animationBegin: animationBegin,\n        animationDuration: animationDuration,\n        animationEasing: animationEasing,\n        isAnimationActive: isAnimationActive\n    })));\n}\nfunction computeBarRectangles(_ref4) {\n    var { layout, barSettings: { dataKey, minPointSize: minPointSizeProp }, pos, bandSize, xAxis, yAxis, xAxisTicks, yAxisTicks, stackedData, displayedData, offset, cells } = _ref4;\n    var numericAxis = layout === 'horizontal' ? yAxis : xAxis;\n    // @ts-expect-error this assumes that the domain is always numeric, but doesn't check for it\n    var stackedDomain = stackedData ? numericAxis.scale.domain() : null;\n    var baseValue = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getBaseValueOfBar)({\n        numericAxis\n    });\n    return displayedData.map((entry, index)=>{\n        var value, x, y, width, height, background;\n        if (stackedData) {\n            // we don't need to use dataStartIndex here, because stackedData is already sliced from the selector\n            value = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.truncateByDomain)(stackedData[index], stackedDomain);\n        } else {\n            value = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getValueByDataKey)(entry, dataKey);\n            if (!Array.isArray(value)) {\n                value = [\n                    baseValue,\n                    value\n                ];\n            }\n        }\n        var minPointSize = (0,_util_BarUtils__WEBPACK_IMPORTED_MODULE_8__.minPointSizeCallback)(minPointSizeProp, defaultMinPointSize)(value[1], index);\n        if (layout === 'horizontal') {\n            var _ref5;\n            var [baseValueScale, currentValueScale] = [\n                yAxis.scale(value[0]),\n                yAxis.scale(value[1])\n            ];\n            x = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getCateCoordinateOfBar)({\n                axis: xAxis,\n                ticks: xAxisTicks,\n                bandSize,\n                offset: pos.offset,\n                entry,\n                index\n            });\n            y = (_ref5 = currentValueScale !== null && currentValueScale !== void 0 ? currentValueScale : baseValueScale) !== null && _ref5 !== void 0 ? _ref5 : undefined;\n            width = pos.size;\n            var computedHeight = baseValueScale - currentValueScale;\n            height = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.isNan)(computedHeight) ? 0 : computedHeight;\n            background = {\n                x,\n                y: offset.top,\n                width,\n                height: offset.height\n            };\n            if (Math.abs(minPointSize) > 0 && Math.abs(height) < Math.abs(minPointSize)) {\n                var delta = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.mathSign)(height || minPointSize) * (Math.abs(minPointSize) - Math.abs(height));\n                y -= delta;\n                height += delta;\n            }\n        } else {\n            var [_baseValueScale, _currentValueScale] = [\n                xAxis.scale(value[0]),\n                xAxis.scale(value[1])\n            ];\n            x = _baseValueScale;\n            y = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getCateCoordinateOfBar)({\n                axis: yAxis,\n                ticks: yAxisTicks,\n                bandSize,\n                offset: pos.offset,\n                entry,\n                index\n            });\n            width = _currentValueScale - _baseValueScale;\n            height = pos.size;\n            background = {\n                x: offset.left,\n                y,\n                width: offset.width,\n                height\n            };\n            if (Math.abs(minPointSize) > 0 && Math.abs(width) < Math.abs(minPointSize)) {\n                var _delta = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.mathSign)(width || minPointSize) * (Math.abs(minPointSize) - Math.abs(width));\n                width += _delta;\n            }\n        }\n        var barRectangleItem = _objectSpread(_objectSpread({}, entry), {}, {\n            x,\n            y,\n            width,\n            height,\n            value: stackedData ? value : value[1],\n            payload: entry,\n            background,\n            tooltipPosition: {\n                x: x + width / 2,\n                y: y + height / 2\n            }\n        }, cells && cells[index] && cells[index].props);\n        return barRectangleItem;\n    });\n}\nclass Bar extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n    render() {\n        // Report all props to Redux store first, before calling any hooks, to avoid circular dependencies.\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_22__.CartesianGraphicalItemContext, {\n            type: \"bar\",\n            data: null,\n            xAxisId: this.props.xAxisId,\n            yAxisId: this.props.yAxisId,\n            zAxisId: 0,\n            dataKey: this.props.dataKey,\n            stackId: this.props.stackId,\n            hide: this.props.hide,\n            barSize: this.props.barSize\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_state_ReportBar__WEBPACK_IMPORTED_MODULE_23__.ReportBar, null), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_state_SetLegendPayload__WEBPACK_IMPORTED_MODULE_24__.SetLegendPayload, {\n            legendPayload: computeLegendPayloadFromBarData(this.props)\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_state_SetTooltipEntrySettings__WEBPACK_IMPORTED_MODULE_25__.SetTooltipEntrySettings, {\n            fn: getTooltipEntrySettings,\n            args: this.props\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(BarImpl, this.props));\n    }\n}\n_defineProperty(Bar, \"displayName\", 'Bar');\n_defineProperty(Bar, \"defaultProps\", defaultBarProps);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/recharts/es6/cartesian/Bar.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/recharts/es6/cartesian/CartesianAxis.js":
/*!**************************************************************!*\
  !*** ./node_modules/recharts/es6/cartesian/CartesianAxis.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CartesianAxis: () => (/* binding */ CartesianAxis)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var es_toolkit_compat_get__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! es-toolkit/compat/get */ \"(ssr)/./node_modules/es-toolkit/compat/get.js\");\n/* harmony import */ var es_toolkit_compat_get__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(es_toolkit_compat_get__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _util_ShallowEqual__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ShallowEqual */ \"(ssr)/./node_modules/recharts/es6/util/ShallowEqual.js\");\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../container/Layer */ \"(ssr)/./node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _component_Text__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../component/Text */ \"(ssr)/./node_modules/recharts/es6/component/Text.js\");\n/* harmony import */ var _component_Label__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../component/Label */ \"(ssr)/./node_modules/recharts/es6/component/Label.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util/types */ \"(ssr)/./node_modules/recharts/es6/util/types.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _getTicks__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./getTicks */ \"(ssr)/./node_modules/recharts/es6/cartesian/getTicks.js\");\nvar _excluded = [\n    \"viewBox\"\n], _excluded2 = [\n    \"viewBox\"\n];\nfunction _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function(n) {\n        for(var e = 1; e < arguments.length; e++){\n            var t = arguments[e];\n            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n        }\n        return n;\n    }, _extends.apply(null, arguments);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _objectWithoutProperties(e, t) {\n    if (null == e) return {};\n    var o, r, i = _objectWithoutPropertiesLoose(e, t);\n    if (Object.getOwnPropertySymbols) {\n        var n = Object.getOwnPropertySymbols(e);\n        for(r = 0; r < n.length; r++)o = n[r], -1 === t.indexOf(o) && ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n    }\n    return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n    if (null == r) return {};\n    var t = {};\n    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {\n        if (-1 !== e.indexOf(n)) continue;\n        t[n] = r[n];\n    }\n    return t;\n}\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n/**\n * @fileOverview Cartesian Axis\n */ \n\n\n\n\n\n\n\n\n\n\n\n/** The orientation of the axis in correspondence to the chart */ /** A unit to be appended to a value */ /** The formatter function of tick */ /*\n * `viewBox` and `scale` are SVG attributes.\n * Recharts however - unfortunately - has its own attributes named `viewBox` and `scale`\n * that are completely different data shape and different purpose.\n */ class CartesianAxis extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n    constructor(props){\n        super(props);\n        this.tickRefs = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createRef();\n        this.tickRefs.current = [];\n        this.state = {\n            fontSize: '',\n            letterSpacing: ''\n        };\n    }\n    shouldComponentUpdate(_ref, nextState) {\n        var { viewBox } = _ref, restProps = _objectWithoutProperties(_ref, _excluded);\n        // props.viewBox is sometimes generated every time -\n        // check that specially as object equality is likely to fail\n        var _this$props = this.props, { viewBox: viewBoxOld } = _this$props, restPropsOld = _objectWithoutProperties(_this$props, _excluded2);\n        return !(0,_util_ShallowEqual__WEBPACK_IMPORTED_MODULE_2__.shallowEqual)(viewBox, viewBoxOld) || !(0,_util_ShallowEqual__WEBPACK_IMPORTED_MODULE_2__.shallowEqual)(restProps, restPropsOld) || !(0,_util_ShallowEqual__WEBPACK_IMPORTED_MODULE_2__.shallowEqual)(nextState, this.state);\n    }\n    /**\n   * Calculate the coordinates of endpoints in ticks\n   * @param  data The data of a simple tick\n   * @return (x1, y1): The coordinate of endpoint close to tick text\n   *  (x2, y2): The coordinate of endpoint close to axis\n   */ getTickLineCoord(data) {\n        var { x, y, width, height, orientation, tickSize, mirror, tickMargin } = this.props;\n        var x1, x2, y1, y2, tx, ty;\n        var sign = mirror ? -1 : 1;\n        var finalTickSize = data.tickSize || tickSize;\n        var tickCoord = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_3__.isNumber)(data.tickCoord) ? data.tickCoord : data.coordinate;\n        switch(orientation){\n            case 'top':\n                x1 = x2 = data.coordinate;\n                y2 = y + +!mirror * height;\n                y1 = y2 - sign * finalTickSize;\n                ty = y1 - sign * tickMargin;\n                tx = tickCoord;\n                break;\n            case 'left':\n                y1 = y2 = data.coordinate;\n                x2 = x + +!mirror * width;\n                x1 = x2 - sign * finalTickSize;\n                tx = x1 - sign * tickMargin;\n                ty = tickCoord;\n                break;\n            case 'right':\n                y1 = y2 = data.coordinate;\n                x2 = x + +mirror * width;\n                x1 = x2 + sign * finalTickSize;\n                tx = x1 + sign * tickMargin;\n                ty = tickCoord;\n                break;\n            default:\n                x1 = x2 = data.coordinate;\n                y2 = y + +mirror * height;\n                y1 = y2 + sign * finalTickSize;\n                ty = y1 + sign * tickMargin;\n                tx = tickCoord;\n                break;\n        }\n        return {\n            line: {\n                x1,\n                y1,\n                x2,\n                y2\n            },\n            tick: {\n                x: tx,\n                y: ty\n            }\n        };\n    }\n    getTickTextAnchor() {\n        var { orientation, mirror } = this.props;\n        var textAnchor;\n        switch(orientation){\n            case 'left':\n                textAnchor = mirror ? 'start' : 'end';\n                break;\n            case 'right':\n                textAnchor = mirror ? 'end' : 'start';\n                break;\n            default:\n                textAnchor = 'middle';\n                break;\n        }\n        return textAnchor;\n    }\n    getTickVerticalAnchor() {\n        var { orientation, mirror } = this.props;\n        switch(orientation){\n            case 'left':\n            case 'right':\n                return 'middle';\n            case 'top':\n                return mirror ? 'start' : 'end';\n            default:\n                return mirror ? 'end' : 'start';\n        }\n    }\n    renderAxisLine() {\n        var { x, y, width, height, orientation, mirror, axisLine } = this.props;\n        var props = _objectSpread(_objectSpread(_objectSpread({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(this.props, false)), (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(axisLine, false)), {}, {\n            fill: 'none'\n        });\n        if (orientation === 'top' || orientation === 'bottom') {\n            var needHeight = +(orientation === 'top' && !mirror || orientation === 'bottom' && mirror);\n            props = _objectSpread(_objectSpread({}, props), {}, {\n                x1: x,\n                y1: y + needHeight * height,\n                x2: x + width,\n                y2: y + needHeight * height\n            });\n        } else {\n            var needWidth = +(orientation === 'left' && !mirror || orientation === 'right' && mirror);\n            props = _objectSpread(_objectSpread({}, props), {}, {\n                x1: x + needWidth * width,\n                y1: y,\n                x2: x + needWidth * width,\n                y2: y + height\n            });\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"line\", _extends({}, props, {\n            className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)('recharts-cartesian-axis-line', es_toolkit_compat_get__WEBPACK_IMPORTED_MODULE_5___default()(axisLine, 'className'))\n        }));\n    }\n    static renderTickItem(option, props, value) {\n        var tickItem;\n        var combinedClassName = (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)(props.className, 'recharts-cartesian-axis-tick-value');\n        if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(option)) {\n            tickItem = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(option, _objectSpread(_objectSpread({}, props), {}, {\n                className: combinedClassName\n            }));\n        } else if (typeof option === 'function') {\n            tickItem = option(_objectSpread(_objectSpread({}, props), {}, {\n                className: combinedClassName\n            }));\n        } else {\n            var className = 'recharts-cartesian-axis-tick-value';\n            if (typeof option !== 'boolean') {\n                className = (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)(className, option.className);\n            }\n            tickItem = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_component_Text__WEBPACK_IMPORTED_MODULE_6__.Text, _extends({}, props, {\n                className: className\n            }), value);\n        }\n        return tickItem;\n    }\n    /**\n   * render the ticks\n   * @param {string} fontSize Fontsize to consider for tick spacing\n   * @param {string} letterSpacing Letter spacing to consider for tick spacing\n   * @param {Array} ticks The ticks to actually render (overrides what was passed in props)\n   * @return {ReactElement | null} renderedTicks\n   */ renderTicks(fontSize, letterSpacing) {\n        var ticks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n        var { tickLine, stroke, tick, tickFormatter, unit } = this.props;\n        // @ts-expect-error some properties are optional in props but required in getTicks\n        var finalTicks = (0,_getTicks__WEBPACK_IMPORTED_MODULE_7__.getTicks)(_objectSpread(_objectSpread({}, this.props), {}, {\n            ticks\n        }), fontSize, letterSpacing);\n        var textAnchor = this.getTickTextAnchor();\n        var verticalAnchor = this.getTickVerticalAnchor();\n        var axisProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(this.props, false);\n        var customTickProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(tick, false);\n        var tickLineProps = _objectSpread(_objectSpread({}, axisProps), {}, {\n            fill: 'none'\n        }, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(tickLine, false));\n        var items = finalTicks.map((entry, i)=>{\n            var { line: lineCoord, tick: tickCoord } = this.getTickLineCoord(entry);\n            var tickProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n                textAnchor,\n                verticalAnchor\n            }, axisProps), {}, {\n                stroke: 'none',\n                fill: stroke\n            }, customTickProps), tickCoord), {}, {\n                index: i,\n                payload: entry,\n                visibleTicksCount: finalTicks.length,\n                tickFormatter\n            });\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_8__.Layer, _extends({\n                className: \"recharts-cartesian-axis-tick\",\n                key: \"tick-\".concat(entry.value, \"-\").concat(entry.coordinate, \"-\").concat(entry.tickCoord)\n            }, (0,_util_types__WEBPACK_IMPORTED_MODULE_9__.adaptEventsOfChild)(this.props, entry, i)), tickLine && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"line\", _extends({}, tickLineProps, lineCoord, {\n                className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)('recharts-cartesian-axis-tick-line', es_toolkit_compat_get__WEBPACK_IMPORTED_MODULE_5___default()(tickLine, 'className'))\n            })), tick && CartesianAxis.renderTickItem(tick, tickProps, \"\".concat(typeof tickFormatter === 'function' ? tickFormatter(entry.value, i) : entry.value).concat(unit || '')));\n        });\n        return items.length > 0 ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n            className: \"recharts-cartesian-axis-ticks\"\n        }, items) : null;\n    }\n    render() {\n        var { axisLine, width, height, className, hide } = this.props;\n        if (hide) {\n            return null;\n        }\n        var { ticks } = this.props;\n        /*\n     * This is different condition from what validateWidthHeight is doing;\n     * the CartesianAxis does allow width or height to be undefined.\n     */ if (width != null && width <= 0 || height != null && height <= 0) {\n            return null;\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_8__.Layer, {\n            className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)('recharts-cartesian-axis', className),\n            ref: (_ref2)=>{\n                if (_ref2) {\n                    var tickNodes = _ref2.getElementsByClassName('recharts-cartesian-axis-tick-value');\n                    this.tickRefs.current = Array.from(tickNodes);\n                    var tick = tickNodes[0];\n                    if (tick) {\n                        var calculatedFontSize = window.getComputedStyle(tick).fontSize;\n                        var calculatedLetterSpacing = window.getComputedStyle(tick).letterSpacing;\n                        if (calculatedFontSize !== this.state.fontSize || calculatedLetterSpacing !== this.state.letterSpacing) {\n                            this.setState({\n                                fontSize: window.getComputedStyle(tick).fontSize,\n                                letterSpacing: window.getComputedStyle(tick).letterSpacing\n                            });\n                        }\n                    }\n                }\n            }\n        }, axisLine && this.renderAxisLine(), this.renderTicks(this.state.fontSize, this.state.letterSpacing, ticks), _component_Label__WEBPACK_IMPORTED_MODULE_10__.Label.renderCallByParent(this.props));\n    }\n}\n_defineProperty(CartesianAxis, \"displayName\", 'CartesianAxis');\n_defineProperty(CartesianAxis, \"defaultProps\", {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    viewBox: {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n    },\n    // The orientation of axis\n    orientation: 'bottom',\n    // The ticks\n    ticks: [],\n    stroke: '#666',\n    tickLine: true,\n    axisLine: true,\n    tick: true,\n    mirror: false,\n    minTickGap: 5,\n    // The width or height of tick\n    tickSize: 6,\n    tickMargin: 2,\n    interval: 'preserveEnd'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/recharts/es6/cartesian/CartesianAxis.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/recharts/es6/cartesian/ErrorBar.js":
/*!*********************************************************!*\
  !*** ./node_modules/recharts/es6/cartesian/ErrorBar.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ErrorBar: () => (/* binding */ ErrorBar),\n/* harmony export */   SetErrorBarPreferredDirection: () => (/* binding */ SetErrorBarPreferredDirection)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../container/Layer */ \"(ssr)/./node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/CartesianGraphicalItemContext */ \"(ssr)/./node_modules/recharts/es6/context/CartesianGraphicalItemContext.js\");\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hooks */ \"(ssr)/./node_modules/recharts/es6/hooks.js\");\n/* harmony import */ var _util_resolveDefaultProps__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/resolveDefaultProps */ \"(ssr)/./node_modules/recharts/es6/util/resolveDefaultProps.js\");\n/* harmony import */ var _animation_Animate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../animation/Animate */ \"(ssr)/./node_modules/recharts/es6/animation/Animate.js\");\nvar _excluded = [\n    \"direction\",\n    \"width\",\n    \"dataKey\",\n    \"isAnimationActive\",\n    \"animationBegin\",\n    \"animationDuration\",\n    \"animationEasing\"\n];\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function(n) {\n        for(var e = 1; e < arguments.length; e++){\n            var t = arguments[e];\n            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n        }\n        return n;\n    }, _extends.apply(null, arguments);\n}\nfunction _objectWithoutProperties(e, t) {\n    if (null == e) return {};\n    var o, r, i = _objectWithoutPropertiesLoose(e, t);\n    if (Object.getOwnPropertySymbols) {\n        var n = Object.getOwnPropertySymbols(e);\n        for(r = 0; r < n.length; r++)o = n[r], -1 === t.indexOf(o) && ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n    }\n    return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n    if (null == r) return {};\n    var t = {};\n    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {\n        if (-1 !== e.indexOf(n)) continue;\n        t[n] = r[n];\n    }\n    return t;\n}\n/**\n * @fileOverview Render a group of error bar\n */ \n\n\n\n\n\n\n\n/**\n * So usually the direction is decided by the chart layout.\n * Horizontal layout means error bars are vertical means direction=y\n * Vertical layout means error bars are horizontal means direction=x\n *\n * Except! In Scatter chart, error bars can go both ways.\n *\n * So this property is only ever used in Scatter chart, and ignored elsewhere.\n */ /**\n * External ErrorBar props, visible for users of the library\n */ /**\n * Props after defaults, and required props have been applied.\n */ function ErrorBarImpl(props) {\n    var { direction, width, dataKey, isAnimationActive, animationBegin, animationDuration, animationEasing } = props, others = _objectWithoutProperties(props, _excluded);\n    var svgProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_1__.filterProps)(others, false);\n    var { data, dataPointFormatter, xAxisId, yAxisId, errorBarOffset: offset } = (0,_context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_2__.useErrorBarContext)();\n    var xAxis = (0,_hooks__WEBPACK_IMPORTED_MODULE_3__.useXAxis)(xAxisId);\n    var yAxis = (0,_hooks__WEBPACK_IMPORTED_MODULE_3__.useYAxis)(yAxisId);\n    if ((xAxis === null || xAxis === void 0 ? void 0 : xAxis.scale) == null || (yAxis === null || yAxis === void 0 ? void 0 : yAxis.scale) == null || data == null) {\n        return null;\n    }\n    // ErrorBar requires type number XAxis, why?\n    if (direction === 'x' && xAxis.type !== 'number') {\n        return null;\n    }\n    var errorBars = data.map((entry)=>{\n        var { x, y, value, errorVal } = dataPointFormatter(entry, dataKey, direction);\n        if (!errorVal) {\n            return null;\n        }\n        var lineCoordinates = [];\n        var lowBound, highBound;\n        if (Array.isArray(errorVal)) {\n            [lowBound, highBound] = errorVal;\n        } else {\n            lowBound = highBound = errorVal;\n        }\n        if (direction === 'x') {\n            // error bar for horizontal charts, the y is fixed, x is a range value\n            var { scale } = xAxis;\n            var yMid = y + offset;\n            var yMin = yMid + width;\n            var yMax = yMid - width;\n            var xMin = scale(value - lowBound);\n            var xMax = scale(value + highBound);\n            // the right line of |--|\n            lineCoordinates.push({\n                x1: xMax,\n                y1: yMin,\n                x2: xMax,\n                y2: yMax\n            });\n            // the middle line of |--|\n            lineCoordinates.push({\n                x1: xMin,\n                y1: yMid,\n                x2: xMax,\n                y2: yMid\n            });\n            // the left line of |--|\n            lineCoordinates.push({\n                x1: xMin,\n                y1: yMin,\n                x2: xMin,\n                y2: yMax\n            });\n        } else if (direction === 'y') {\n            // error bar for horizontal charts, the x is fixed, y is a range value\n            var { scale: _scale } = yAxis;\n            var xMid = x + offset;\n            var _xMin = xMid - width;\n            var _xMax = xMid + width;\n            var _yMin = _scale(value - lowBound);\n            var _yMax = _scale(value + highBound);\n            // the top line\n            lineCoordinates.push({\n                x1: _xMin,\n                y1: _yMax,\n                x2: _xMax,\n                y2: _yMax\n            });\n            // the middle line\n            lineCoordinates.push({\n                x1: xMid,\n                y1: _yMin,\n                x2: xMid,\n                y2: _yMax\n            });\n            // the bottom line\n            lineCoordinates.push({\n                x1: _xMin,\n                y1: _yMin,\n                x2: _xMax,\n                y2: _yMin\n            });\n        }\n        var transformOrigin = \"\".concat(x + offset, \"px \").concat(y + offset, \"px\");\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_4__.Layer, _extends({\n            className: \"recharts-errorBar\",\n            key: \"bar-\".concat(lineCoordinates.map((c)=>\"\".concat(c.x1, \"-\").concat(c.x2, \"-\").concat(c.y1, \"-\").concat(c.y2)))\n        }, svgProps), lineCoordinates.map((coordinates)=>{\n            var lineStyle = isAnimationActive ? {\n                transformOrigin: \"\".concat(coordinates.x1 - 5, \"px\")\n            } : undefined;\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_animation_Animate__WEBPACK_IMPORTED_MODULE_5__.Animate, {\n                from: {\n                    transform: 'scaleY(0)',\n                    transformOrigin\n                },\n                to: {\n                    transform: 'scaleY(1)',\n                    transformOrigin\n                },\n                begin: animationBegin,\n                easing: animationEasing,\n                isActive: isAnimationActive,\n                duration: animationDuration,\n                key: \"line-\".concat(coordinates.x1, \"-\").concat(coordinates.x2, \"-\").concat(coordinates.y1, \"-\").concat(coordinates.y2),\n                style: {\n                    transformOrigin\n                }\n            }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"line\", _extends({}, coordinates, {\n                style: lineStyle\n            })));\n        }));\n    });\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_4__.Layer, {\n        className: \"recharts-errorBars\"\n    }, errorBars);\n}\nvar ErrorBarPreferredDirection = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\nfunction useErrorBarDirection(directionFromProps) {\n    var preferredDirection = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ErrorBarPreferredDirection);\n    if (directionFromProps != null) {\n        return directionFromProps;\n    }\n    if (preferredDirection != null) {\n        return preferredDirection;\n    }\n    return 'x';\n}\nfunction SetErrorBarPreferredDirection(_ref) {\n    var { direction, children } = _ref;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorBarPreferredDirection.Provider, {\n        value: direction\n    }, children);\n}\nvar errorBarDefaultProps = {\n    stroke: 'black',\n    strokeWidth: 1.5,\n    width: 5,\n    offset: 0,\n    isAnimationActive: true,\n    animationBegin: 0,\n    animationDuration: 400,\n    animationEasing: 'ease-in-out'\n};\nfunction ErrorBarInternal(props) {\n    var realDirection = useErrorBarDirection(props.direction);\n    var { width, isAnimationActive, animationBegin, animationDuration, animationEasing } = (0,_util_resolveDefaultProps__WEBPACK_IMPORTED_MODULE_6__.resolveDefaultProps)(props, errorBarDefaultProps);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_2__.ReportErrorBarSettings, {\n        dataKey: props.dataKey,\n        direction: realDirection\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorBarImpl, _extends({}, props, {\n        direction: realDirection,\n        width: width,\n        isAnimationActive: isAnimationActive,\n        animationBegin: animationBegin,\n        animationDuration: animationDuration,\n        animationEasing: animationEasing\n    })));\n}\n// eslint-disable-next-line react/prefer-stateless-function\nclass ErrorBar extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n    render() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorBarInternal, this.props);\n    }\n}\n_defineProperty(ErrorBar, \"defaultProps\", errorBarDefaultProps);\n_defineProperty(ErrorBar, \"displayName\", 'ErrorBar');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/recharts/es6/cartesian/ErrorBar.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/recharts/es6/cartesian/GraphicalItemClipPath.js":
/*!**********************************************************************!*\
  !*** ./node_modules/recharts/es6/cartesian/GraphicalItemClipPath.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GraphicalItemClipPath: () => (/* binding */ GraphicalItemClipPath),\n/* harmony export */   useNeedsClip: () => (/* binding */ useNeedsClip)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _state_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../state/hooks */ \"(ssr)/./node_modules/recharts/es6/state/hooks.js\");\n/* harmony import */ var _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../state/selectors/axisSelectors */ \"(ssr)/./node_modules/recharts/es6/state/selectors/axisSelectors.js\");\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hooks */ \"(ssr)/./node_modules/recharts/es6/hooks.js\");\n\n\n\n\nfunction useNeedsClip(xAxisId, yAxisId) {\n    var _xAxis$allowDataOverf, _yAxis$allowDataOverf;\n    var xAxis = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_1__.useAppSelector)({\n        \"useNeedsClip.useAppSelector[xAxis]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_2__.selectXAxisSettings)(state, xAxisId)\n    }[\"useNeedsClip.useAppSelector[xAxis]\"]);\n    var yAxis = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_1__.useAppSelector)({\n        \"useNeedsClip.useAppSelector[yAxis]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_2__.selectYAxisSettings)(state, yAxisId)\n    }[\"useNeedsClip.useAppSelector[yAxis]\"]);\n    var needClipX = (_xAxis$allowDataOverf = xAxis === null || xAxis === void 0 ? void 0 : xAxis.allowDataOverflow) !== null && _xAxis$allowDataOverf !== void 0 ? _xAxis$allowDataOverf : _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_2__.implicitXAxis.allowDataOverflow;\n    var needClipY = (_yAxis$allowDataOverf = yAxis === null || yAxis === void 0 ? void 0 : yAxis.allowDataOverflow) !== null && _yAxis$allowDataOverf !== void 0 ? _yAxis$allowDataOverf : _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_2__.implicitYAxis.allowDataOverflow;\n    var needClip = needClipX || needClipY;\n    return {\n        needClip,\n        needClipX,\n        needClipY\n    };\n}\nfunction GraphicalItemClipPath(_ref) {\n    var { xAxisId, yAxisId, clipPathId } = _ref;\n    var plotArea = (0,_hooks__WEBPACK_IMPORTED_MODULE_3__.usePlotArea)();\n    var { needClipX, needClipY, needClip } = useNeedsClip(xAxisId, yAxisId);\n    if (!needClip) {\n        return null;\n    }\n    var { x, y, width, height } = plotArea;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"clipPath\", {\n        id: \"clipPath-\".concat(clipPathId)\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", {\n        x: needClipX ? x : x - width / 2,\n        y: needClipY ? y : y - height / 2,\n        width: needClipX ? width : width * 2,\n        height: needClipY ? height : height * 2\n    }));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVjaGFydHMvZXM2L2NhcnRlc2lhbi9HcmFwaGljYWxJdGVtQ2xpcFBhdGguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUErQjtBQUNpQjtBQUMwRTtBQUNuRjtBQUNoQyxTQUFTTyxhQUFhQyxPQUFPLEVBQUVDLE9BQU87SUFDM0MsSUFBSUMsdUJBQXVCQztJQUMzQixJQUFJQyxRQUFRWCw0REFBY0E7OENBQUNZLENBQUFBLFFBQVNULG1GQUFtQkEsQ0FBQ1MsT0FBT0w7O0lBQy9ELElBQUlNLFFBQVFiLDREQUFjQTs4Q0FBQ1ksQ0FBQUEsUUFBU1IsbUZBQW1CQSxDQUFDUSxPQUFPSjs7SUFDL0QsSUFBSU0sWUFBWSxDQUFDTCx3QkFBd0JFLFVBQVUsUUFBUUEsVUFBVSxLQUFLLElBQUksS0FBSyxJQUFJQSxNQUFNSSxpQkFBaUIsTUFBTSxRQUFRTiwwQkFBMEIsS0FBSyxJQUFJQSx3QkFBd0JSLHlFQUFhQSxDQUFDYyxpQkFBaUI7SUFDdE4sSUFBSUMsWUFBWSxDQUFDTix3QkFBd0JHLFVBQVUsUUFBUUEsVUFBVSxLQUFLLElBQUksS0FBSyxJQUFJQSxNQUFNRSxpQkFBaUIsTUFBTSxRQUFRTCwwQkFBMEIsS0FBSyxJQUFJQSx3QkFBd0JSLHlFQUFhQSxDQUFDYSxpQkFBaUI7SUFDdE4sSUFBSUUsV0FBV0gsYUFBYUU7SUFDNUIsT0FBTztRQUNMQztRQUNBSDtRQUNBRTtJQUNGO0FBQ0Y7QUFDTyxTQUFTRSxzQkFBc0JDLElBQUk7SUFDeEMsSUFBSSxFQUNGWixPQUFPLEVBQ1BDLE9BQU8sRUFDUFksVUFBVSxFQUNYLEdBQUdEO0lBQ0osSUFBSUUsV0FBV2hCLG1EQUFXQTtJQUMxQixJQUFJLEVBQ0ZTLFNBQVMsRUFDVEUsU0FBUyxFQUNUQyxRQUFRLEVBQ1QsR0FBR1gsYUFBYUMsU0FBU0M7SUFDMUIsSUFBSSxDQUFDUyxVQUFVO1FBQ2IsT0FBTztJQUNUO0lBQ0EsSUFBSSxFQUNGSyxDQUFDLEVBQ0RDLENBQUMsRUFDREMsS0FBSyxFQUNMQyxNQUFNLEVBQ1AsR0FBR0o7SUFDSixPQUFPLFdBQVcsR0FBRXRCLGdEQUFtQixDQUFDLFlBQVk7UUFDbEQ0QixJQUFJLFlBQVlDLE1BQU0sQ0FBQ1I7SUFDekIsR0FBRyxXQUFXLEdBQUVyQixnREFBbUIsQ0FBQyxRQUFRO1FBQzFDdUIsR0FBR1IsWUFBWVEsSUFBSUEsSUFBSUUsUUFBUTtRQUMvQkQsR0FBR1AsWUFBWU8sSUFBSUEsSUFBSUUsU0FBUztRQUNoQ0QsT0FBT1YsWUFBWVUsUUFBUUEsUUFBUTtRQUNuQ0MsUUFBUVQsWUFBWVMsU0FBU0EsU0FBUztJQUN4QztBQUNGIiwic291cmNlcyI6WyIvcm9vdC9oeXBlcnN5bmMtY2xpZW50LXB5dGhvbi9mcm9udGVuZC1kZXBsb3ltZW50L25vZGVfbW9kdWxlcy9yZWNoYXJ0cy9lczYvY2FydGVzaWFuL0dyYXBoaWNhbEl0ZW1DbGlwUGF0aC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VBcHBTZWxlY3RvciB9IGZyb20gJy4uL3N0YXRlL2hvb2tzJztcbmltcG9ydCB7IGltcGxpY2l0WEF4aXMsIGltcGxpY2l0WUF4aXMsIHNlbGVjdFhBeGlzU2V0dGluZ3MsIHNlbGVjdFlBeGlzU2V0dGluZ3MgfSBmcm9tICcuLi9zdGF0ZS9zZWxlY3RvcnMvYXhpc1NlbGVjdG9ycyc7XG5pbXBvcnQgeyB1c2VQbG90QXJlYSB9IGZyb20gJy4uL2hvb2tzJztcbmV4cG9ydCBmdW5jdGlvbiB1c2VOZWVkc0NsaXAoeEF4aXNJZCwgeUF4aXNJZCkge1xuICB2YXIgX3hBeGlzJGFsbG93RGF0YU92ZXJmLCBfeUF4aXMkYWxsb3dEYXRhT3ZlcmY7XG4gIHZhciB4QXhpcyA9IHVzZUFwcFNlbGVjdG9yKHN0YXRlID0+IHNlbGVjdFhBeGlzU2V0dGluZ3Moc3RhdGUsIHhBeGlzSWQpKTtcbiAgdmFyIHlBeGlzID0gdXNlQXBwU2VsZWN0b3Ioc3RhdGUgPT4gc2VsZWN0WUF4aXNTZXR0aW5ncyhzdGF0ZSwgeUF4aXNJZCkpO1xuICB2YXIgbmVlZENsaXBYID0gKF94QXhpcyRhbGxvd0RhdGFPdmVyZiA9IHhBeGlzID09PSBudWxsIHx8IHhBeGlzID09PSB2b2lkIDAgPyB2b2lkIDAgOiB4QXhpcy5hbGxvd0RhdGFPdmVyZmxvdykgIT09IG51bGwgJiYgX3hBeGlzJGFsbG93RGF0YU92ZXJmICE9PSB2b2lkIDAgPyBfeEF4aXMkYWxsb3dEYXRhT3ZlcmYgOiBpbXBsaWNpdFhBeGlzLmFsbG93RGF0YU92ZXJmbG93O1xuICB2YXIgbmVlZENsaXBZID0gKF95QXhpcyRhbGxvd0RhdGFPdmVyZiA9IHlBeGlzID09PSBudWxsIHx8IHlBeGlzID09PSB2b2lkIDAgPyB2b2lkIDAgOiB5QXhpcy5hbGxvd0RhdGFPdmVyZmxvdykgIT09IG51bGwgJiYgX3lBeGlzJGFsbG93RGF0YU92ZXJmICE9PSB2b2lkIDAgPyBfeUF4aXMkYWxsb3dEYXRhT3ZlcmYgOiBpbXBsaWNpdFlBeGlzLmFsbG93RGF0YU92ZXJmbG93O1xuICB2YXIgbmVlZENsaXAgPSBuZWVkQ2xpcFggfHwgbmVlZENsaXBZO1xuICByZXR1cm4ge1xuICAgIG5lZWRDbGlwLFxuICAgIG5lZWRDbGlwWCxcbiAgICBuZWVkQ2xpcFlcbiAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBHcmFwaGljYWxJdGVtQ2xpcFBhdGgoX3JlZikge1xuICB2YXIge1xuICAgIHhBeGlzSWQsXG4gICAgeUF4aXNJZCxcbiAgICBjbGlwUGF0aElkXG4gIH0gPSBfcmVmO1xuICB2YXIgcGxvdEFyZWEgPSB1c2VQbG90QXJlYSgpO1xuICB2YXIge1xuICAgIG5lZWRDbGlwWCxcbiAgICBuZWVkQ2xpcFksXG4gICAgbmVlZENsaXBcbiAgfSA9IHVzZU5lZWRzQ2xpcCh4QXhpc0lkLCB5QXhpc0lkKTtcbiAgaWYgKCFuZWVkQ2xpcCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHZhciB7XG4gICAgeCxcbiAgICB5LFxuICAgIHdpZHRoLFxuICAgIGhlaWdodFxuICB9ID0gcGxvdEFyZWE7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImNsaXBQYXRoXCIsIHtcbiAgICBpZDogXCJjbGlwUGF0aC1cIi5jb25jYXQoY2xpcFBhdGhJZClcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJyZWN0XCIsIHtcbiAgICB4OiBuZWVkQ2xpcFggPyB4IDogeCAtIHdpZHRoIC8gMixcbiAgICB5OiBuZWVkQ2xpcFkgPyB5IDogeSAtIGhlaWdodCAvIDIsXG4gICAgd2lkdGg6IG5lZWRDbGlwWCA/IHdpZHRoIDogd2lkdGggKiAyLFxuICAgIGhlaWdodDogbmVlZENsaXBZID8gaGVpZ2h0IDogaGVpZ2h0ICogMlxuICB9KSk7XG59Il0sIm5hbWVzIjpbIlJlYWN0IiwidXNlQXBwU2VsZWN0b3IiLCJpbXBsaWNpdFhBeGlzIiwiaW1wbGljaXRZQXhpcyIsInNlbGVjdFhBeGlzU2V0dGluZ3MiLCJzZWxlY3RZQXhpc1NldHRpbmdzIiwidXNlUGxvdEFyZWEiLCJ1c2VOZWVkc0NsaXAiLCJ4QXhpc0lkIiwieUF4aXNJZCIsIl94QXhpcyRhbGxvd0RhdGFPdmVyZiIsIl95QXhpcyRhbGxvd0RhdGFPdmVyZiIsInhBeGlzIiwic3RhdGUiLCJ5QXhpcyIsIm5lZWRDbGlwWCIsImFsbG93RGF0YU92ZXJmbG93IiwibmVlZENsaXBZIiwibmVlZENsaXAiLCJHcmFwaGljYWxJdGVtQ2xpcFBhdGgiLCJfcmVmIiwiY2xpcFBhdGhJZCIsInBsb3RBcmVhIiwieCIsInkiLCJ3aWR0aCIsImhlaWdodCIsImNyZWF0ZUVsZW1lbnQiLCJpZCIsImNvbmNhdCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/recharts/es6/cartesian/GraphicalItemClipPath.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/recharts/es6/cartesian/Line.js":
/*!*****************************************************!*\
  !*** ./node_modules/recharts/es6/cartesian/Line.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Line: () => (/* binding */ Line),\n/* harmony export */   computeLinePoints: () => (/* binding */ computeLinePoints)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _shape_Curve__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shape/Curve */ \"(ssr)/./node_modules/recharts/es6/shape/Curve.js\");\n/* harmony import */ var _shape_Dot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shape/Dot */ \"(ssr)/./node_modules/recharts/es6/shape/Dot.js\");\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../container/Layer */ \"(ssr)/./node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _component_LabelList__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../component/LabelList */ \"(ssr)/./node_modules/recharts/es6/component/LabelList.js\");\n/* harmony import */ var _ErrorBar__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./ErrorBar */ \"(ssr)/./node_modules/recharts/es6/cartesian/ErrorBar.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _util_Global__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../util/Global */ \"(ssr)/./node_modules/recharts/es6/util/Global.js\");\n/* harmony import */ var _util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ChartUtils */ \"(ssr)/./node_modules/recharts/es6/util/ChartUtils.js\");\n/* harmony import */ var _component_ActivePoints__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../component/ActivePoints */ \"(ssr)/./node_modules/recharts/es6/component/ActivePoints.js\");\n/* harmony import */ var _state_SetTooltipEntrySettings__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../state/SetTooltipEntrySettings */ \"(ssr)/./node_modules/recharts/es6/state/SetTooltipEntrySettings.js\");\n/* harmony import */ var _context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../context/CartesianGraphicalItemContext */ \"(ssr)/./node_modules/recharts/es6/context/CartesianGraphicalItemContext.js\");\n/* harmony import */ var _GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./GraphicalItemClipPath */ \"(ssr)/./node_modules/recharts/es6/cartesian/GraphicalItemClipPath.js\");\n/* harmony import */ var _context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../context/chartLayoutContext */ \"(ssr)/./node_modules/recharts/es6/context/chartLayoutContext.js\");\n/* harmony import */ var _context_PanoramaContext__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../context/PanoramaContext */ \"(ssr)/./node_modules/recharts/es6/context/PanoramaContext.js\");\n/* harmony import */ var _state_selectors_lineSelectors__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../state/selectors/lineSelectors */ \"(ssr)/./node_modules/recharts/es6/state/selectors/lineSelectors.js\");\n/* harmony import */ var _state_hooks__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../state/hooks */ \"(ssr)/./node_modules/recharts/es6/state/hooks.js\");\n/* harmony import */ var _state_SetLegendPayload__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../state/SetLegendPayload */ \"(ssr)/./node_modules/recharts/es6/state/SetLegendPayload.js\");\n/* harmony import */ var _util_useAnimationId__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/useAnimationId */ \"(ssr)/./node_modules/recharts/es6/util/useAnimationId.js\");\n/* harmony import */ var _util_resolveDefaultProps__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../util/resolveDefaultProps */ \"(ssr)/./node_modules/recharts/es6/util/resolveDefaultProps.js\");\n/* harmony import */ var _animation_Animate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../animation/Animate */ \"(ssr)/./node_modules/recharts/es6/animation/Animate.js\");\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../hooks */ \"(ssr)/./node_modules/recharts/es6/hooks.js\");\nvar _excluded = [\n    \"type\",\n    \"layout\",\n    \"connectNulls\",\n    \"needClip\"\n], _excluded2 = [\n    \"activeDot\",\n    \"animateNewValues\",\n    \"animationBegin\",\n    \"animationDuration\",\n    \"animationEasing\",\n    \"connectNulls\",\n    \"dot\",\n    \"hide\",\n    \"isAnimationActive\",\n    \"label\",\n    \"legendType\",\n    \"xAxisId\",\n    \"yAxisId\"\n];\nfunction _objectWithoutProperties(e, t) {\n    if (null == e) return {};\n    var o, r, i = _objectWithoutPropertiesLoose(e, t);\n    if (Object.getOwnPropertySymbols) {\n        var n = Object.getOwnPropertySymbols(e);\n        for(r = 0; r < n.length; r++)o = n[r], -1 === t.indexOf(o) && ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n    }\n    return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n    if (null == r) return {};\n    var t = {};\n    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {\n        if (-1 !== e.indexOf(n)) continue;\n        t[n] = r[n];\n    }\n    return t;\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function(n) {\n        for(var e = 1; e < arguments.length; e++){\n            var t = arguments[e];\n            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n        }\n        return n;\n    }, _extends.apply(null, arguments);\n}\n// eslint-disable-next-line max-classes-per-file\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Internal props, combination of external props + defaultProps + private Recharts state\n */ /**\n * External props, intended for end users to fill in\n */ /**\n * Because of naming conflict, we are forced to ignore certain (valid) SVG attributes.\n */ var computeLegendPayloadFromAreaData = (props)=>{\n    var { dataKey, name, stroke, legendType, hide } = props;\n    return [\n        {\n            inactive: hide,\n            dataKey,\n            type: legendType,\n            color: stroke,\n            value: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getTooltipNameProp)(name, dataKey),\n            payload: props\n        }\n    ];\n};\nfunction getTooltipEntrySettings(props) {\n    var { dataKey, data, stroke, strokeWidth, fill, name, hide, unit } = props;\n    return {\n        dataDefinedOnItem: data,\n        positions: undefined,\n        settings: {\n            stroke,\n            strokeWidth,\n            fill,\n            dataKey,\n            nameKey: undefined,\n            name: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getTooltipNameProp)(name, dataKey),\n            hide,\n            type: props.tooltipType,\n            color: props.stroke,\n            unit\n        }\n    };\n}\nvar generateSimpleStrokeDasharray = (totalLength, length)=>{\n    return \"\".concat(length, \"px \").concat(totalLength - length, \"px\");\n};\nfunction repeat(lines, count) {\n    var linesUnit = lines.length % 2 !== 0 ? [\n        ...lines,\n        0\n    ] : lines;\n    var result = [];\n    for(var i = 0; i < count; ++i){\n        result = [\n            ...result,\n            ...linesUnit\n        ];\n    }\n    return result;\n}\nvar getStrokeDasharray = (length, totalLength, lines)=>{\n    var lineLength = lines.reduce((pre, next)=>pre + next);\n    // if lineLength is 0 return the default when no strokeDasharray is provided\n    if (!lineLength) {\n        return generateSimpleStrokeDasharray(totalLength, length);\n    }\n    var count = Math.floor(length / lineLength);\n    var remainLength = length % lineLength;\n    var restLength = totalLength - length;\n    var remainLines = [];\n    for(var i = 0, sum = 0; i < lines.length; sum += lines[i], ++i){\n        if (sum + lines[i] > remainLength) {\n            remainLines = [\n                ...lines.slice(0, i),\n                remainLength - sum\n            ];\n            break;\n        }\n    }\n    var emptyLines = remainLines.length % 2 === 0 ? [\n        0,\n        restLength\n    ] : [\n        restLength\n    ];\n    return [\n        ...repeat(lines, count),\n        ...remainLines,\n        ...emptyLines\n    ].map((line)=>\"\".concat(line, \"px\")).join(', ');\n};\nfunction renderDotItem(option, props) {\n    var dotItem;\n    if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(option)) {\n        dotItem = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(option, props);\n    } else if (typeof option === 'function') {\n        dotItem = option(props);\n    } else {\n        var className = (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)('recharts-line-dot', typeof option !== 'boolean' ? option.className : '');\n        dotItem = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_shape_Dot__WEBPACK_IMPORTED_MODULE_3__.Dot, _extends({}, props, {\n            className: className\n        }));\n    }\n    return dotItem;\n}\nfunction shouldRenderDots(points, dot) {\n    if (points == null) {\n        return false;\n    }\n    if (dot) {\n        return true;\n    }\n    return points.length === 1;\n}\nfunction Dots(_ref) {\n    var { clipPathId, points, props } = _ref;\n    var { dot, dataKey, needClip } = props;\n    if (!shouldRenderDots(points, dot)) {\n        return null;\n    }\n    var clipDot = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.isClipDot)(dot);\n    var lineProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(props, false);\n    var customDotProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(dot, true);\n    var dots = points.map((entry, i)=>{\n        var dotProps = _objectSpread(_objectSpread(_objectSpread({\n            key: \"dot-\".concat(i),\n            r: 3\n        }, lineProps), customDotProps), {}, {\n            index: i,\n            cx: entry.x,\n            cy: entry.y,\n            dataKey,\n            value: entry.value,\n            payload: entry.payload,\n            points\n        });\n        return renderDotItem(dot, dotProps);\n    });\n    var dotsProps = {\n        clipPath: needClip ? \"url(#clipPath-\".concat(clipDot ? '' : 'dots-').concat(clipPathId, \")\") : null\n    };\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_5__.Layer, _extends({\n        className: \"recharts-line-dots\",\n        key: \"dots\"\n    }, dotsProps), dots);\n}\nfunction StaticCurve(_ref2) {\n    var { clipPathId, pathRef, points, strokeDasharray, props, showLabels } = _ref2;\n    var { type, layout, connectNulls, needClip } = props, others = _objectWithoutProperties(props, _excluded);\n    var curveProps = _objectSpread(_objectSpread({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(others, true)), {}, {\n        fill: 'none',\n        className: 'recharts-line-curve',\n        clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : null,\n        points,\n        type,\n        layout,\n        connectNulls,\n        strokeDasharray: strokeDasharray !== null && strokeDasharray !== void 0 ? strokeDasharray : props.strokeDasharray\n    });\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (points === null || points === void 0 ? void 0 : points.length) > 1 && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_shape_Curve__WEBPACK_IMPORTED_MODULE_6__.Curve, _extends({}, curveProps, {\n        pathRef: pathRef\n    })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Dots, {\n        points: points,\n        clipPathId: clipPathId,\n        props: props\n    }), showLabels && _component_LabelList__WEBPACK_IMPORTED_MODULE_7__.LabelList.renderCallByParent(props, points));\n}\nfunction getTotalLength(mainCurve) {\n    try {\n        return mainCurve && mainCurve.getTotalLength && mainCurve.getTotalLength() || 0;\n    } catch (_unused) {\n        return 0;\n    }\n}\nfunction CurveWithAnimation(_ref3) {\n    var { clipPathId, props, pathRef, previousPointsRef, longestAnimatedLengthRef } = _ref3;\n    var { points, strokeDasharray, isAnimationActive, animationBegin, animationDuration, animationEasing, animateNewValues, width, height, onAnimationEnd, onAnimationStart } = props;\n    var prevPoints = previousPointsRef.current;\n    var animationId = (0,_util_useAnimationId__WEBPACK_IMPORTED_MODULE_8__.useAnimationId)(props, 'recharts-line-');\n    var [isAnimating, setIsAnimating] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    var handleAnimationEnd = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"CurveWithAnimation.useCallback[handleAnimationEnd]\": ()=>{\n            if (typeof onAnimationEnd === 'function') {\n                onAnimationEnd();\n            }\n            setIsAnimating(false);\n        }\n    }[\"CurveWithAnimation.useCallback[handleAnimationEnd]\"], [\n        onAnimationEnd\n    ]);\n    var handleAnimationStart = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"CurveWithAnimation.useCallback[handleAnimationStart]\": ()=>{\n            if (typeof onAnimationStart === 'function') {\n                onAnimationStart();\n            }\n            setIsAnimating(true);\n        }\n    }[\"CurveWithAnimation.useCallback[handleAnimationStart]\"], [\n        onAnimationStart\n    ]);\n    var totalLength = getTotalLength(pathRef.current);\n    /*\n   * Here we want to detect if the length animation has been interrupted.\n   * For that we keep a reference to the furthest length that has been animated.\n   *\n   * And then, to keep things smooth, we add to it the current length that is being animated right now.\n   *\n   * If we did Math.max then it makes the length animation \"pause\" but we want to keep it smooth\n   * so in case we have some \"leftover\" length from the previous animation we add it to the current length.\n   *\n   * This is not perfect because the animation changes speed due to easing. The default easing is 'ease' which is not linear\n   * and makes it stand out. But it's good enough I suppose.\n   * If we want to fix it then we need to keep track of multiple animations and their easing and timings.\n   *\n   * If you want to see this in action, try to change the dataKey of the line chart while the initial animation is running.\n   * The Line begins with zero length and slowly grows to the full length. While this growth is in progress,\n   * change the dataKey and the Line will continue growing from where it has grown so far.\n   */ var startingPoint = longestAnimatedLengthRef.current;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_animation_Animate__WEBPACK_IMPORTED_MODULE_9__.Animate, {\n        begin: animationBegin,\n        duration: animationDuration,\n        isActive: isAnimationActive,\n        easing: animationEasing,\n        from: {\n            t: 0\n        },\n        to: {\n            t: 1\n        },\n        onAnimationEnd: handleAnimationEnd,\n        onAnimationStart: handleAnimationStart,\n        key: animationId\n    }, (_ref4)=>{\n        var { t } = _ref4;\n        var interpolator = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.interpolateNumber)(startingPoint, totalLength + startingPoint);\n        var curLength = Math.min(interpolator(t), totalLength);\n        var currentStrokeDasharray;\n        if (strokeDasharray) {\n            var lines = \"\".concat(strokeDasharray).split(/[,\\s]+/gim).map((num)=>parseFloat(num));\n            currentStrokeDasharray = getStrokeDasharray(curLength, totalLength, lines);\n        } else {\n            currentStrokeDasharray = generateSimpleStrokeDasharray(totalLength, curLength);\n        }\n        if (prevPoints) {\n            var prevPointsDiffFactor = prevPoints.length / points.length;\n            var stepData = t === 1 ? points : points.map((entry, index)=>{\n                var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n                if (prevPoints[prevPointIndex]) {\n                    var prev = prevPoints[prevPointIndex];\n                    var interpolatorX = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.interpolateNumber)(prev.x, entry.x);\n                    var interpolatorY = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.interpolateNumber)(prev.y, entry.y);\n                    return _objectSpread(_objectSpread({}, entry), {}, {\n                        x: interpolatorX(t),\n                        y: interpolatorY(t)\n                    });\n                }\n                // magic number of faking previous x and y location\n                if (animateNewValues) {\n                    var _interpolatorX = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.interpolateNumber)(width * 2, entry.x);\n                    var _interpolatorY = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.interpolateNumber)(height / 2, entry.y);\n                    return _objectSpread(_objectSpread({}, entry), {}, {\n                        x: _interpolatorX(t),\n                        y: _interpolatorY(t)\n                    });\n                }\n                return _objectSpread(_objectSpread({}, entry), {}, {\n                    x: entry.x,\n                    y: entry.y\n                });\n            });\n            // eslint-disable-next-line no-param-reassign\n            previousPointsRef.current = stepData;\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(StaticCurve, {\n                props: props,\n                points: stepData,\n                clipPathId: clipPathId,\n                pathRef: pathRef,\n                showLabels: !isAnimating,\n                strokeDasharray: currentStrokeDasharray\n            });\n        }\n        /*\n     * Here it is important to wait a little bit with updating the previousPointsRef\n     * before the animation has a time to initialize.\n     * If we set the previous pointsRef immediately, we set it before the Legend height it calculated\n     * and before pathRef is set.\n     * If that happens, the Line will re-render again after Legend had reported its height\n     * which will start a new animation with the previous points as the starting point\n     * which gives the effect of the Line animating slightly upwards (where the animation distance equals the Legend height).\n     * Waiting for t > 0 is indirect but good enough to ensure that the Legend height is calculated and animation works properly.\n     *\n     * Total length similarly is calculated from the pathRef. We should not update the previousPointsRef\n     * before the pathRef is set, otherwise we will have a wrong total length.\n     */ if (t > 0 && totalLength > 0) {\n            // eslint-disable-next-line no-param-reassign\n            previousPointsRef.current = points;\n            /*\n       * totalLength is set from a ref and is not updated in the first tick of the animation.\n       * It defaults to zero which is exactly what we want here because we want to grow from zero,\n       * however the same happens when the data change.\n       *\n       * In that case we want to remember the previous length and continue from there, and only animate the shape.\n       *\n       * Therefore the totalLength > 0 check.\n       *\n       * The Animate is about to fire handleAnimationStart which will update the state\n       * and cause a re-render and read a new proper totalLength which will be used in the next tick\n       * and update the longestAnimatedLengthRef.\n       */ // eslint-disable-next-line no-param-reassign\n            longestAnimatedLengthRef.current = curLength;\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(StaticCurve, {\n            props: props,\n            points: points,\n            clipPathId: clipPathId,\n            pathRef: pathRef,\n            showLabels: !isAnimating,\n            strokeDasharray: currentStrokeDasharray\n        });\n    });\n}\nfunction RenderCurve(_ref5) {\n    var { clipPathId, props } = _ref5;\n    var { points, isAnimationActive } = props;\n    var previousPointsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var longestAnimatedLengthRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n    var pathRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var prevPoints = previousPointsRef.current;\n    if (isAnimationActive && points && points.length && prevPoints !== points) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CurveWithAnimation, {\n            props: props,\n            clipPathId: clipPathId,\n            previousPointsRef: previousPointsRef,\n            longestAnimatedLengthRef: longestAnimatedLengthRef,\n            pathRef: pathRef\n        });\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(StaticCurve, {\n        props: props,\n        points: points,\n        clipPathId: clipPathId,\n        pathRef: pathRef,\n        showLabels: true\n    });\n}\nvar errorBarDataPointFormatter = (dataPoint, dataKey)=>{\n    return {\n        x: dataPoint.x,\n        y: dataPoint.y,\n        value: dataPoint.value,\n        // @ts-expect-error getValueByDataKey does not validate the output type\n        errorVal: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getValueByDataKey)(dataPoint.payload, dataKey)\n    };\n};\nclass LineWithState extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n    constructor(){\n        super(...arguments);\n        _defineProperty(this, \"id\", (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.uniqueId)('recharts-line-'));\n    }\n    render() {\n        var _filterProps;\n        var { hide, dot, points, className, xAxisId, yAxisId, top, left, width, height, id, needClip, layout } = this.props;\n        if (hide) {\n            return null;\n        }\n        var layerClass = (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)('recharts-line', className);\n        var clipPathId = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.isNullish)(id) ? this.id : id;\n        var { r = 3, strokeWidth = 2 } = (_filterProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(dot, false)) !== null && _filterProps !== void 0 ? _filterProps : {\n            r: 3,\n            strokeWidth: 2\n        };\n        var clipDot = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.isClipDot)(dot);\n        var dotSize = r * 2 + strokeWidth;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_5__.Layer, {\n            className: layerClass\n        }, needClip && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"defs\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_11__.GraphicalItemClipPath, {\n            clipPathId: clipPathId,\n            xAxisId: xAxisId,\n            yAxisId: yAxisId\n        }), !clipDot && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"clipPath\", {\n            id: \"clipPath-dots-\".concat(clipPathId)\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", {\n            x: left - dotSize / 2,\n            y: top - dotSize / 2,\n            width: width + dotSize,\n            height: height + dotSize\n        }))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RenderCurve, {\n            props: this.props,\n            clipPathId: clipPathId\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ErrorBar__WEBPACK_IMPORTED_MODULE_12__.SetErrorBarPreferredDirection, {\n            direction: layout === 'horizontal' ? 'y' : 'x'\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_13__.SetErrorBarContext, {\n            xAxisId: xAxisId,\n            yAxisId: yAxisId,\n            data: points,\n            dataPointFormatter: errorBarDataPointFormatter,\n            errorBarOffset: 0\n        }, this.props.children))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_component_ActivePoints__WEBPACK_IMPORTED_MODULE_14__.ActivePoints, {\n            activeDot: this.props.activeDot,\n            points: points,\n            mainColor: this.props.stroke,\n            itemDataKey: this.props.dataKey\n        }));\n    }\n}\nvar defaultLineProps = {\n    activeDot: true,\n    animateNewValues: true,\n    animationBegin: 0,\n    animationDuration: 1500,\n    animationEasing: 'ease',\n    connectNulls: false,\n    dot: true,\n    fill: '#fff',\n    hide: false,\n    isAnimationActive: !_util_Global__WEBPACK_IMPORTED_MODULE_15__.Global.isSsr,\n    label: false,\n    legendType: 'line',\n    stroke: '#3182bd',\n    strokeWidth: 1,\n    xAxisId: 0,\n    yAxisId: 0\n};\nfunction LineImpl(props) {\n    var _resolveDefaultProps = (0,_util_resolveDefaultProps__WEBPACK_IMPORTED_MODULE_16__.resolveDefaultProps)(props, defaultLineProps), { activeDot, animateNewValues, animationBegin, animationDuration, animationEasing, connectNulls, dot, hide, isAnimationActive, label, legendType, xAxisId, yAxisId } = _resolveDefaultProps, everythingElse = _objectWithoutProperties(_resolveDefaultProps, _excluded2);\n    var { needClip } = (0,_GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_11__.useNeedsClip)(xAxisId, yAxisId);\n    var { height, width, x: left, y: top } = (0,_hooks__WEBPACK_IMPORTED_MODULE_17__.usePlotArea)();\n    var layout = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_18__.useChartLayout)();\n    var isPanorama = (0,_context_PanoramaContext__WEBPACK_IMPORTED_MODULE_19__.useIsPanorama)();\n    var lineSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"LineImpl.useMemo[lineSettings]\": ()=>({\n                dataKey: props.dataKey,\n                data: props.data\n            })\n    }[\"LineImpl.useMemo[lineSettings]\"], [\n        props.dataKey,\n        props.data\n    ]);\n    var points = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_20__.useAppSelector)({\n        \"LineImpl.useAppSelector[points]\": (state)=>(0,_state_selectors_lineSelectors__WEBPACK_IMPORTED_MODULE_21__.selectLinePoints)(state, xAxisId, yAxisId, isPanorama, lineSettings)\n    }[\"LineImpl.useAppSelector[points]\"]);\n    if (layout !== 'horizontal' && layout !== 'vertical') {\n        // Cannot render Line in an unsupported layout\n        return null;\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LineWithState, _extends({}, everythingElse, {\n        connectNulls: connectNulls,\n        dot: dot,\n        activeDot: activeDot,\n        animateNewValues: animateNewValues,\n        animationBegin: animationBegin,\n        animationDuration: animationDuration,\n        animationEasing: animationEasing,\n        isAnimationActive: isAnimationActive,\n        hide: hide,\n        label: label,\n        legendType: legendType,\n        xAxisId: xAxisId,\n        yAxisId: yAxisId,\n        points: points,\n        layout: layout,\n        height: height,\n        width: width,\n        left: left,\n        top: top,\n        needClip: needClip\n    }));\n}\nfunction computeLinePoints(_ref6) {\n    var { layout, xAxis, yAxis, xAxisTicks, yAxisTicks, dataKey, bandSize, displayedData } = _ref6;\n    return displayedData.map((entry, index)=>{\n        // @ts-expect-error getValueByDataKey does not validate the output type\n        var value = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getValueByDataKey)(entry, dataKey);\n        if (layout === 'horizontal') {\n            return {\n                x: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getCateCoordinateOfLine)({\n                    axis: xAxis,\n                    ticks: xAxisTicks,\n                    bandSize,\n                    entry,\n                    index\n                }),\n                y: (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.isNullish)(value) ? null : yAxis.scale(value),\n                value,\n                payload: entry\n            };\n        }\n        return {\n            x: (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.isNullish)(value) ? null : xAxis.scale(value),\n            y: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getCateCoordinateOfLine)({\n                axis: yAxis,\n                ticks: yAxisTicks,\n                bandSize,\n                entry,\n                index\n            }),\n            value,\n            payload: entry\n        };\n    });\n}\nclass Line extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n    render() {\n        // Report all props to Redux store first, before calling any hooks, to avoid circular dependencies.\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_13__.CartesianGraphicalItemContext, {\n            type: \"line\",\n            data: this.props.data,\n            xAxisId: this.props.xAxisId,\n            yAxisId: this.props.yAxisId,\n            zAxisId: 0,\n            dataKey: this.props.dataKey,\n            stackId: undefined,\n            hide: this.props.hide,\n            barSize: undefined\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_state_SetLegendPayload__WEBPACK_IMPORTED_MODULE_22__.SetLegendPayload, {\n            legendPayload: computeLegendPayloadFromAreaData(this.props)\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_state_SetTooltipEntrySettings__WEBPACK_IMPORTED_MODULE_23__.SetTooltipEntrySettings, {\n            fn: getTooltipEntrySettings,\n            args: this.props\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LineImpl, this.props));\n    }\n}\n_defineProperty(Line, \"displayName\", 'Line');\n_defineProperty(Line, \"defaultProps\", defaultLineProps);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/recharts/es6/cartesian/Line.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/recharts/es6/cartesian/XAxis.js":
/*!******************************************************!*\
  !*** ./node_modules/recharts/es6/cartesian/XAxis.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   XAxis: () => (/* binding */ XAxis)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _CartesianAxis__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./CartesianAxis */ \"(ssr)/./node_modules/recharts/es6/cartesian/CartesianAxis.js\");\n/* harmony import */ var _state_hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../state/hooks */ \"(ssr)/./node_modules/recharts/es6/state/hooks.js\");\n/* harmony import */ var _state_cartesianAxisSlice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../state/cartesianAxisSlice */ \"(ssr)/./node_modules/recharts/es6/state/cartesianAxisSlice.js\");\n/* harmony import */ var _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../state/selectors/axisSelectors */ \"(ssr)/./node_modules/recharts/es6/state/selectors/axisSelectors.js\");\n/* harmony import */ var _state_selectors_selectChartOffsetInternal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../state/selectors/selectChartOffsetInternal */ \"(ssr)/./node_modules/recharts/es6/state/selectors/selectChartOffsetInternal.js\");\n/* harmony import */ var _context_PanoramaContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../context/PanoramaContext */ \"(ssr)/./node_modules/recharts/es6/context/PanoramaContext.js\");\nvar _excluded = [\n    \"children\"\n], _excluded2 = [\n    \"dangerouslySetInnerHTML\",\n    \"ticks\"\n];\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function(n) {\n        for(var e = 1; e < arguments.length; e++){\n            var t = arguments[e];\n            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n        }\n        return n;\n    }, _extends.apply(null, arguments);\n}\nfunction _objectWithoutProperties(e, t) {\n    if (null == e) return {};\n    var o, r, i = _objectWithoutPropertiesLoose(e, t);\n    if (Object.getOwnPropertySymbols) {\n        var n = Object.getOwnPropertySymbols(e);\n        for(r = 0; r < n.length; r++)o = n[r], -1 === t.indexOf(o) && ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n    }\n    return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n    if (null == r) return {};\n    var t = {};\n    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {\n        if (-1 !== e.indexOf(n)) continue;\n        t[n] = r[n];\n    }\n    return t;\n}\n/**\n * @fileOverview X Axis\n */ \n\n\n\n\n\n\n\n\nfunction SetXAxisSettings(props) {\n    var dispatch = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppDispatch)();\n    var settings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"SetXAxisSettings.useMemo[settings]\": ()=>{\n            var { children } = props, rest = _objectWithoutProperties(props, _excluded);\n            return rest;\n        }\n    }[\"SetXAxisSettings.useMemo[settings]\"], [\n        props\n    ]);\n    var synchronizedSettings = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)({\n        \"SetXAxisSettings.useAppSelector[synchronizedSettings]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.selectXAxisSettings)(state, settings.id)\n    }[\"SetXAxisSettings.useAppSelector[synchronizedSettings]\"]);\n    var settingsAreSynchronized = settings === synchronizedSettings;\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"SetXAxisSettings.useEffect\": ()=>{\n            dispatch((0,_state_cartesianAxisSlice__WEBPACK_IMPORTED_MODULE_4__.addXAxis)(settings));\n            return ({\n                \"SetXAxisSettings.useEffect\": ()=>{\n                    dispatch((0,_state_cartesianAxisSlice__WEBPACK_IMPORTED_MODULE_4__.removeXAxis)(settings));\n                }\n            })[\"SetXAxisSettings.useEffect\"];\n        }\n    }[\"SetXAxisSettings.useEffect\"], [\n        settings,\n        dispatch\n    ]);\n    if (settingsAreSynchronized) {\n        return props.children;\n    }\n    return null;\n}\nvar XAxisImpl = (props)=>{\n    var { xAxisId, className } = props;\n    var viewBox = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)(_state_selectors_selectChartOffsetInternal__WEBPACK_IMPORTED_MODULE_5__.selectAxisViewBox);\n    var isPanorama = (0,_context_PanoramaContext__WEBPACK_IMPORTED_MODULE_6__.useIsPanorama)();\n    var axisType = 'xAxis';\n    var scale = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)({\n        \"XAxisImpl.useAppSelector[scale]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.selectAxisScale)(state, axisType, xAxisId, isPanorama)\n    }[\"XAxisImpl.useAppSelector[scale]\"]);\n    var cartesianTickItems = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)({\n        \"XAxisImpl.useAppSelector[cartesianTickItems]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.selectTicksOfAxis)(state, axisType, xAxisId, isPanorama)\n    }[\"XAxisImpl.useAppSelector[cartesianTickItems]\"]);\n    var axisSize = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)({\n        \"XAxisImpl.useAppSelector[axisSize]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.selectXAxisSize)(state, xAxisId)\n    }[\"XAxisImpl.useAppSelector[axisSize]\"]);\n    var position = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)({\n        \"XAxisImpl.useAppSelector[position]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.selectXAxisPosition)(state, xAxisId)\n    }[\"XAxisImpl.useAppSelector[position]\"]);\n    if (axisSize == null || position == null) {\n        return null;\n    }\n    var { dangerouslySetInnerHTML, ticks } = props, allOtherProps = _objectWithoutProperties(props, _excluded2);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CartesianAxis__WEBPACK_IMPORTED_MODULE_7__.CartesianAxis, _extends({}, allOtherProps, {\n        scale: scale,\n        x: position.x,\n        y: position.y,\n        width: axisSize.width,\n        height: axisSize.height,\n        className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)(\"recharts-\".concat(axisType, \" \").concat(axisType), className),\n        viewBox: viewBox,\n        ticks: cartesianTickItems\n    }));\n};\nvar XAxisSettingsDispatcher = (props)=>{\n    var _props$interval, _props$includeHidden, _props$angle, _props$minTickGap, _props$tick;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SetXAxisSettings, {\n        interval: (_props$interval = props.interval) !== null && _props$interval !== void 0 ? _props$interval : 'preserveEnd',\n        id: props.xAxisId,\n        scale: props.scale,\n        type: props.type,\n        padding: props.padding,\n        allowDataOverflow: props.allowDataOverflow,\n        domain: props.domain,\n        dataKey: props.dataKey,\n        allowDuplicatedCategory: props.allowDuplicatedCategory,\n        allowDecimals: props.allowDecimals,\n        tickCount: props.tickCount,\n        includeHidden: (_props$includeHidden = props.includeHidden) !== null && _props$includeHidden !== void 0 ? _props$includeHidden : false,\n        reversed: props.reversed,\n        ticks: props.ticks,\n        height: props.height,\n        orientation: props.orientation,\n        mirror: props.mirror,\n        hide: props.hide,\n        unit: props.unit,\n        name: props.name,\n        angle: (_props$angle = props.angle) !== null && _props$angle !== void 0 ? _props$angle : 0,\n        minTickGap: (_props$minTickGap = props.minTickGap) !== null && _props$minTickGap !== void 0 ? _props$minTickGap : 5,\n        tick: (_props$tick = props.tick) !== null && _props$tick !== void 0 ? _props$tick : true,\n        tickFormatter: props.tickFormatter\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(XAxisImpl, props));\n};\n// eslint-disable-next-line react/prefer-stateless-function\nclass XAxis extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n    render() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(XAxisSettingsDispatcher, this.props);\n    }\n}\n_defineProperty(XAxis, \"displayName\", 'XAxis');\n_defineProperty(XAxis, \"defaultProps\", {\n    allowDataOverflow: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.allowDataOverflow,\n    allowDecimals: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.allowDecimals,\n    allowDuplicatedCategory: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.allowDuplicatedCategory,\n    height: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.height,\n    hide: false,\n    mirror: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.mirror,\n    orientation: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.orientation,\n    padding: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.padding,\n    reversed: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.reversed,\n    scale: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.scale,\n    tickCount: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.tickCount,\n    type: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.type,\n    xAxisId: 0\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/recharts/es6/cartesian/XAxis.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/recharts/es6/cartesian/YAxis.js":
/*!******************************************************!*\
  !*** ./node_modules/recharts/es6/cartesian/YAxis.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   YAxis: () => (/* binding */ YAxis),\n/* harmony export */   YAxisDefaultProps: () => (/* binding */ YAxisDefaultProps)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _CartesianAxis__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./CartesianAxis */ \"(ssr)/./node_modules/recharts/es6/cartesian/CartesianAxis.js\");\n/* harmony import */ var _state_cartesianAxisSlice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../state/cartesianAxisSlice */ \"(ssr)/./node_modules/recharts/es6/state/cartesianAxisSlice.js\");\n/* harmony import */ var _state_hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../state/hooks */ \"(ssr)/./node_modules/recharts/es6/state/hooks.js\");\n/* harmony import */ var _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../state/selectors/axisSelectors */ \"(ssr)/./node_modules/recharts/es6/state/selectors/axisSelectors.js\");\n/* harmony import */ var _state_selectors_selectChartOffsetInternal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../state/selectors/selectChartOffsetInternal */ \"(ssr)/./node_modules/recharts/es6/state/selectors/selectChartOffsetInternal.js\");\n/* harmony import */ var _context_PanoramaContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../context/PanoramaContext */ \"(ssr)/./node_modules/recharts/es6/context/PanoramaContext.js\");\n/* harmony import */ var _util_YAxisUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/YAxisUtils */ \"(ssr)/./node_modules/recharts/es6/util/YAxisUtils.js\");\n/* harmony import */ var _component_Label__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../component/Label */ \"(ssr)/./node_modules/recharts/es6/component/Label.js\");\nvar _excluded = [\n    \"dangerouslySetInnerHTML\",\n    \"ticks\"\n];\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function(n) {\n        for(var e = 1; e < arguments.length; e++){\n            var t = arguments[e];\n            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n        }\n        return n;\n    }, _extends.apply(null, arguments);\n}\nfunction _objectWithoutProperties(e, t) {\n    if (null == e) return {};\n    var o, r, i = _objectWithoutPropertiesLoose(e, t);\n    if (Object.getOwnPropertySymbols) {\n        var n = Object.getOwnPropertySymbols(e);\n        for(r = 0; r < n.length; r++)o = n[r], -1 === t.indexOf(o) && ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n    }\n    return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n    if (null == r) return {};\n    var t = {};\n    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {\n        if (-1 !== e.indexOf(n)) continue;\n        t[n] = r[n];\n    }\n    return t;\n}\n\n\n\n\n\n\n\n\n\n\n\nfunction SetYAxisSettings(settings) {\n    var dispatch = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppDispatch)();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"SetYAxisSettings.useEffect\": ()=>{\n            dispatch((0,_state_cartesianAxisSlice__WEBPACK_IMPORTED_MODULE_3__.addYAxis)(settings));\n            return ({\n                \"SetYAxisSettings.useEffect\": ()=>{\n                    dispatch((0,_state_cartesianAxisSlice__WEBPACK_IMPORTED_MODULE_3__.removeYAxis)(settings));\n                }\n            })[\"SetYAxisSettings.useEffect\"];\n        }\n    }[\"SetYAxisSettings.useEffect\"], [\n        settings,\n        dispatch\n    ]);\n    return null;\n}\nvar YAxisImpl = (props)=>{\n    var _cartesianAxisRef$cur;\n    var { yAxisId, className, width, label } = props;\n    var cartesianAxisRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var labelRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var viewBox = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)(_state_selectors_selectChartOffsetInternal__WEBPACK_IMPORTED_MODULE_4__.selectAxisViewBox);\n    var isPanorama = (0,_context_PanoramaContext__WEBPACK_IMPORTED_MODULE_5__.useIsPanorama)();\n    var dispatch = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppDispatch)();\n    var axisType = 'yAxis';\n    var scale = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)({\n        \"YAxisImpl.useAppSelector[scale]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.selectAxisScale)(state, axisType, yAxisId, isPanorama)\n    }[\"YAxisImpl.useAppSelector[scale]\"]);\n    var axisSize = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)({\n        \"YAxisImpl.useAppSelector[axisSize]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.selectYAxisSize)(state, yAxisId)\n    }[\"YAxisImpl.useAppSelector[axisSize]\"]);\n    var position = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)({\n        \"YAxisImpl.useAppSelector[position]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.selectYAxisPosition)(state, yAxisId)\n    }[\"YAxisImpl.useAppSelector[position]\"]);\n    var cartesianTickItems = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)({\n        \"YAxisImpl.useAppSelector[cartesianTickItems]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.selectTicksOfAxis)(state, axisType, yAxisId, isPanorama)\n    }[\"YAxisImpl.useAppSelector[cartesianTickItems]\"]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)({\n        \"YAxisImpl.useLayoutEffect\": ()=>{\n            var _axisComponent$tickRe;\n            // No dynamic width calculation is done when width !== 'auto'\n            // or when a function/react element is used for label\n            if (width !== 'auto' || !axisSize || (0,_component_Label__WEBPACK_IMPORTED_MODULE_7__.isLabelContentAFunction)(label) || /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(label)) return;\n            var axisComponent = cartesianAxisRef.current;\n            var tickNodes = axisComponent === null || axisComponent === void 0 || (_axisComponent$tickRe = axisComponent.tickRefs) === null || _axisComponent$tickRe === void 0 ? void 0 : _axisComponent$tickRe.current;\n            var { tickSize, tickMargin } = axisComponent.props;\n            // get calculated width based on the label width, ticks etc\n            var updatedYAxisWidth = (0,_util_YAxisUtils__WEBPACK_IMPORTED_MODULE_8__.getCalculatedYAxisWidth)({\n                ticks: tickNodes,\n                label: labelRef.current,\n                labelGapWithTick: 5,\n                tickSize,\n                tickMargin\n            });\n            // if the width has changed, dispatch an action to update the width\n            if (Math.round(axisSize.width) !== Math.round(updatedYAxisWidth)) dispatch((0,_state_cartesianAxisSlice__WEBPACK_IMPORTED_MODULE_3__.updateYAxisWidth)({\n                id: yAxisId,\n                width: updatedYAxisWidth\n            }));\n        }\n    }[\"YAxisImpl.useLayoutEffect\"], [\n        cartesianAxisRef,\n        cartesianAxisRef === null || cartesianAxisRef === void 0 || (_cartesianAxisRef$cur = cartesianAxisRef.current) === null || _cartesianAxisRef$cur === void 0 || (_cartesianAxisRef$cur = _cartesianAxisRef$cur.tickRefs) === null || _cartesianAxisRef$cur === void 0 ? void 0 : _cartesianAxisRef$cur.current,\n        axisSize === null || axisSize === void 0 ? void 0 : axisSize.width,\n        axisSize,\n        dispatch,\n        label,\n        yAxisId,\n        width\n    ]);\n    if (axisSize == null || position == null) {\n        return null;\n    }\n    var { dangerouslySetInnerHTML, ticks } = props, allOtherProps = _objectWithoutProperties(props, _excluded);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CartesianAxis__WEBPACK_IMPORTED_MODULE_9__.CartesianAxis, _extends({}, allOtherProps, {\n        ref: cartesianAxisRef,\n        labelRef: labelRef,\n        scale: scale,\n        x: position.x,\n        y: position.y,\n        width: axisSize.width,\n        height: axisSize.height,\n        className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)(\"recharts-\".concat(axisType, \" \").concat(axisType), className),\n        viewBox: viewBox,\n        ticks: cartesianTickItems\n    }));\n};\nvar YAxisSettingsDispatcher = (props)=>{\n    var _props$interval, _props$includeHidden, _props$angle, _props$minTickGap, _props$tick;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SetYAxisSettings, {\n        interval: (_props$interval = props.interval) !== null && _props$interval !== void 0 ? _props$interval : 'preserveEnd',\n        id: props.yAxisId,\n        scale: props.scale,\n        type: props.type,\n        domain: props.domain,\n        allowDataOverflow: props.allowDataOverflow,\n        dataKey: props.dataKey,\n        allowDuplicatedCategory: props.allowDuplicatedCategory,\n        allowDecimals: props.allowDecimals,\n        tickCount: props.tickCount,\n        padding: props.padding,\n        includeHidden: (_props$includeHidden = props.includeHidden) !== null && _props$includeHidden !== void 0 ? _props$includeHidden : false,\n        reversed: props.reversed,\n        ticks: props.ticks,\n        width: props.width,\n        orientation: props.orientation,\n        mirror: props.mirror,\n        hide: props.hide,\n        unit: props.unit,\n        name: props.name,\n        angle: (_props$angle = props.angle) !== null && _props$angle !== void 0 ? _props$angle : 0,\n        minTickGap: (_props$minTickGap = props.minTickGap) !== null && _props$minTickGap !== void 0 ? _props$minTickGap : 5,\n        tick: (_props$tick = props.tick) !== null && _props$tick !== void 0 ? _props$tick : true,\n        tickFormatter: props.tickFormatter\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(YAxisImpl, props));\n};\nvar YAxisDefaultProps = {\n    allowDataOverflow: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.allowDataOverflow,\n    allowDecimals: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.allowDecimals,\n    allowDuplicatedCategory: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.allowDuplicatedCategory,\n    hide: false,\n    mirror: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.mirror,\n    orientation: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.orientation,\n    padding: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.padding,\n    reversed: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.reversed,\n    scale: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.scale,\n    tickCount: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.tickCount,\n    type: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.type,\n    width: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.width,\n    yAxisId: 0\n};\n// eslint-disable-next-line react/prefer-stateless-function\nclass YAxis extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n    render() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(YAxisSettingsDispatcher, this.props);\n    }\n}\n_defineProperty(YAxis, \"displayName\", 'YAxis');\n_defineProperty(YAxis, \"defaultProps\", YAxisDefaultProps);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVjaGFydHMvZXM2L2NhcnRlc2lhbi9ZQXhpcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsWUFBWTtJQUFDO0lBQTJCO0NBQVE7QUFDcEQsU0FBU0MsZ0JBQWdCQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQztJQUFJLE9BQU8sQ0FBQ0QsSUFBSUUsZUFBZUYsRUFBQyxLQUFNRCxJQUFJSSxPQUFPQyxjQUFjLENBQUNMLEdBQUdDLEdBQUc7UUFBRUssT0FBT0o7UUFBR0ssWUFBWSxDQUFDO1FBQUdDLGNBQWMsQ0FBQztRQUFHQyxVQUFVLENBQUM7SUFBRSxLQUFLVCxDQUFDLENBQUNDLEVBQUUsR0FBR0MsR0FBR0Y7QUFBRztBQUNuTCxTQUFTRyxlQUFlRCxDQUFDO0lBQUksSUFBSVEsSUFBSUMsYUFBYVQsR0FBRztJQUFXLE9BQU8sWUFBWSxPQUFPUSxJQUFJQSxJQUFJQSxJQUFJO0FBQUk7QUFDMUcsU0FBU0MsYUFBYVQsQ0FBQyxFQUFFRCxDQUFDO0lBQUksSUFBSSxZQUFZLE9BQU9DLEtBQUssQ0FBQ0EsR0FBRyxPQUFPQTtJQUFHLElBQUlGLElBQUlFLENBQUMsQ0FBQ1UsT0FBT0MsV0FBVyxDQUFDO0lBQUUsSUFBSSxLQUFLLE1BQU1iLEdBQUc7UUFBRSxJQUFJVSxJQUFJVixFQUFFYyxJQUFJLENBQUNaLEdBQUdELEtBQUs7UUFBWSxJQUFJLFlBQVksT0FBT1MsR0FBRyxPQUFPQTtRQUFHLE1BQU0sSUFBSUssVUFBVTtJQUFpRDtJQUFFLE9BQU8sQ0FBQyxhQUFhZCxJQUFJZSxTQUFTQyxNQUFLLEVBQUdmO0FBQUk7QUFDdlQsU0FBU2dCO0lBQWEsT0FBT0EsV0FBV2QsT0FBT2UsTUFBTSxHQUFHZixPQUFPZSxNQUFNLENBQUNDLElBQUksS0FBSyxTQUFVQyxDQUFDO1FBQUksSUFBSyxJQUFJckIsSUFBSSxHQUFHQSxJQUFJc0IsVUFBVUMsTUFBTSxFQUFFdkIsSUFBSztZQUFFLElBQUlFLElBQUlvQixTQUFTLENBQUN0QixFQUFFO1lBQUUsSUFBSyxJQUFJQyxLQUFLQyxFQUFHLENBQUMsQ0FBQyxHQUFHc0IsY0FBYyxDQUFDVixJQUFJLENBQUNaLEdBQUdELE1BQU9vQixDQUFBQSxDQUFDLENBQUNwQixFQUFFLEdBQUdDLENBQUMsQ0FBQ0QsRUFBRTtRQUFHO1FBQUUsT0FBT29CO0lBQUcsR0FBR0gsU0FBU08sS0FBSyxDQUFDLE1BQU1IO0FBQVk7QUFDblIsU0FBU0kseUJBQXlCMUIsQ0FBQyxFQUFFRSxDQUFDO0lBQUksSUFBSSxRQUFRRixHQUFHLE9BQU8sQ0FBQztJQUFHLElBQUkyQixHQUFHMUIsR0FBR1MsSUFBSWtCLDhCQUE4QjVCLEdBQUdFO0lBQUksSUFBSUUsT0FBT3lCLHFCQUFxQixFQUFFO1FBQUUsSUFBSVIsSUFBSWpCLE9BQU95QixxQkFBcUIsQ0FBQzdCO1FBQUksSUFBS0MsSUFBSSxHQUFHQSxJQUFJb0IsRUFBRUUsTUFBTSxFQUFFdEIsSUFBSzBCLElBQUlOLENBQUMsQ0FBQ3BCLEVBQUUsRUFBRSxDQUFDLE1BQU1DLEVBQUU0QixPQUFPLENBQUNILE1BQU0sRUFBQyxHQUFFSSxvQkFBb0IsQ0FBQ2pCLElBQUksQ0FBQ2QsR0FBRzJCLE1BQU9qQixDQUFBQSxDQUFDLENBQUNpQixFQUFFLEdBQUczQixDQUFDLENBQUMyQixFQUFFO0lBQUc7SUFBRSxPQUFPakI7QUFBRztBQUNyVSxTQUFTa0IsOEJBQThCM0IsQ0FBQyxFQUFFRCxDQUFDO0lBQUksSUFBSSxRQUFRQyxHQUFHLE9BQU8sQ0FBQztJQUFHLElBQUlDLElBQUksQ0FBQztJQUFHLElBQUssSUFBSW1CLEtBQUtwQixFQUFHLElBQUksRUFBQyxHQUFFdUIsY0FBYyxDQUFDVixJQUFJLENBQUNiLEdBQUdvQixJQUFJO1FBQUUsSUFBSSxDQUFDLE1BQU1yQixFQUFFOEIsT0FBTyxDQUFDVCxJQUFJO1FBQVVuQixDQUFDLENBQUNtQixFQUFFLEdBQUdwQixDQUFDLENBQUNvQixFQUFFO0lBQUU7SUFBRSxPQUFPbkI7QUFBRztBQUN2SztBQUN1RDtBQUMxRDtBQUNvQjtBQUNzQztBQUN0QjtBQUMyRTtBQUMxRDtBQUN0QjtBQUNFO0FBQ0E7QUFDN0QsU0FBU29ELGlCQUFpQkMsUUFBUTtJQUNoQyxJQUFJQyxXQUFXYiw0REFBY0E7SUFDN0JULGdEQUFTQTtzQ0FBQztZQUNSc0IsU0FBU2hCLG1FQUFRQSxDQUFDZTtZQUNsQjs4Q0FBTztvQkFDTEMsU0FBU2Ysc0VBQVdBLENBQUNjO2dCQUN2Qjs7UUFDRjtxQ0FBRztRQUFDQTtRQUFVQztLQUFTO0lBQ3ZCLE9BQU87QUFDVDtBQUNBLElBQUlDLFlBQVlDLENBQUFBO0lBQ2QsSUFBSUM7SUFDSixJQUFJLEVBQ0ZDLE9BQU8sRUFDUEMsU0FBUyxFQUNUQyxLQUFLLEVBQ0xDLEtBQUssRUFDTixHQUFHTDtJQUNKLElBQUlNLG1CQUFtQjdCLDZDQUFNQSxDQUFDO0lBQzlCLElBQUk4QixXQUFXOUIsNkNBQU1BLENBQUM7SUFDdEIsSUFBSStCLFVBQVV0Qiw0REFBY0EsQ0FBQ00seUZBQWlCQTtJQUM5QyxJQUFJaUIsYUFBYWhCLHVFQUFhQTtJQUM5QixJQUFJSyxXQUFXYiw0REFBY0E7SUFDN0IsSUFBSXlCLFdBQVc7SUFDZixJQUFJQyxRQUFRekIsNERBQWNBOzJDQUFDMEIsQ0FBQUEsUUFBU3hCLCtFQUFlQSxDQUFDd0IsT0FBT0YsVUFBVVIsU0FBU087O0lBQzlFLElBQUlJLFdBQVczQiw0REFBY0E7OENBQUMwQixDQUFBQSxRQUFTckIsK0VBQWVBLENBQUNxQixPQUFPVjs7SUFDOUQsSUFBSVksV0FBVzVCLDREQUFjQTs4Q0FBQzBCLENBQUFBLFFBQVN0QixtRkFBbUJBLENBQUNzQixPQUFPVjs7SUFDbEUsSUFBSWEscUJBQXFCN0IsNERBQWNBO3dEQUFDMEIsQ0FBQUEsUUFBU3ZCLGlGQUFpQkEsQ0FBQ3VCLE9BQU9GLFVBQVVSLFNBQVNPOztJQUM3Ri9CLHNEQUFlQTtxQ0FBQztZQUNkLElBQUlzQztZQUNKLDZEQUE2RDtZQUM3RCxxREFBcUQ7WUFDckQsSUFBSVosVUFBVSxVQUFVLENBQUNTLFlBQVlsQix5RUFBdUJBLENBQUNVLFVBQVUsV0FBVyxHQUFFMUIscURBQWNBLENBQUMwQixRQUFRO1lBQzNHLElBQUlZLGdCQUFnQlgsaUJBQWlCWSxPQUFPO1lBQzVDLElBQUlDLFlBQVlGLGtCQUFrQixRQUFRQSxrQkFBa0IsS0FBSyxLQUFLLENBQUNELHdCQUF3QkMsY0FBY0csUUFBUSxNQUFNLFFBQVFKLDBCQUEwQixLQUFLLElBQUksS0FBSyxJQUFJQSxzQkFBc0JFLE9BQU87WUFDNU0sSUFBSSxFQUNGRyxRQUFRLEVBQ1JDLFVBQVUsRUFDWCxHQUFHTCxjQUFjakIsS0FBSztZQUV2QiwyREFBMkQ7WUFDM0QsSUFBSXVCLG9CQUFvQjdCLHlFQUF1QkEsQ0FBQztnQkFDOUM4QixPQUFPTDtnQkFDUGQsT0FBT0UsU0FBU1csT0FBTztnQkFDdkJPLGtCQUFrQjtnQkFDbEJKO2dCQUNBQztZQUNGO1lBRUEsbUVBQW1FO1lBQ25FLElBQUlJLEtBQUtDLEtBQUssQ0FBQ2QsU0FBU1QsS0FBSyxNQUFNc0IsS0FBS0MsS0FBSyxDQUFDSixvQkFBb0J6QixTQUFTZCwyRUFBZ0JBLENBQUM7Z0JBQzFGNEMsSUFBSTFCO2dCQUNKRSxPQUFPbUI7WUFDVDtRQUNGO29DQUFHO1FBQUNqQjtRQUFrQkEscUJBQXFCLFFBQVFBLHFCQUFxQixLQUFLLEtBQUssQ0FBQ0wsd0JBQXdCSyxpQkFBaUJZLE9BQU8sTUFBTSxRQUFRakIsMEJBQTBCLEtBQUssS0FBSyxDQUFDQSx3QkFBd0JBLHNCQUFzQm1CLFFBQVEsTUFBTSxRQUFRbkIsMEJBQTBCLEtBQUssSUFBSSxLQUFLLElBQUlBLHNCQUFzQmlCLE9BQU87UUFDblVMLGFBQWEsUUFBUUEsYUFBYSxLQUFLLElBQUksS0FBSyxJQUFJQSxTQUFTVCxLQUFLO1FBQUVTO1FBQVVmO1FBQVVPO1FBQU9IO1FBQVNFO0tBQU07SUFDOUcsSUFBSVMsWUFBWSxRQUFRQyxZQUFZLE1BQU07UUFDeEMsT0FBTztJQUNUO0lBQ0EsSUFBSSxFQUNBZSx1QkFBdUIsRUFDdkJMLEtBQUssRUFDTixHQUFHeEIsT0FDSjhCLGdCQUFnQjlELHlCQUF5QmdDLE9BQU81RDtJQUNsRCxPQUFPLFdBQVcsR0FBRWtDLGdEQUFtQixDQUFDTyx5REFBYUEsRUFBRXJCLFNBQVMsQ0FBQyxHQUFHc0UsZUFBZTtRQUNqRkUsS0FBSzFCO1FBQ0xDLFVBQVVBO1FBQ1ZJLE9BQU9BO1FBQ1BzQixHQUFHbkIsU0FBU21CLENBQUM7UUFDYkMsR0FBR3BCLFNBQVNvQixDQUFDO1FBQ2I5QixPQUFPUyxTQUFTVCxLQUFLO1FBQ3JCK0IsUUFBUXRCLFNBQVNzQixNQUFNO1FBQ3ZCaEMsV0FBV3ZCLDBDQUFJQSxDQUFDLFlBQVl3RCxNQUFNLENBQUMxQixVQUFVLEtBQUswQixNQUFNLENBQUMxQixXQUFXUDtRQUNwRUssU0FBU0E7UUFDVGdCLE9BQU9UO0lBQ1Q7QUFDRjtBQUNBLElBQUlzQiwwQkFBMEJyQyxDQUFBQTtJQUM1QixJQUFJc0MsaUJBQWlCQyxzQkFBc0JDLGNBQWNDLG1CQUFtQkM7SUFDNUUsT0FBTyxXQUFXLEdBQUVwRSxnREFBbUIsQ0FBQ0EsMkNBQWMsRUFBRSxNQUFNLFdBQVcsR0FBRUEsZ0RBQW1CLENBQUNzQixrQkFBa0I7UUFDL0dnRCxVQUFVLENBQUNOLGtCQUFrQnRDLE1BQU00QyxRQUFRLE1BQU0sUUFBUU4sb0JBQW9CLEtBQUssSUFBSUEsa0JBQWtCO1FBQ3hHVixJQUFJNUIsTUFBTUUsT0FBTztRQUNqQlMsT0FBT1gsTUFBTVcsS0FBSztRQUNsQmtDLE1BQU03QyxNQUFNNkMsSUFBSTtRQUNoQkMsUUFBUTlDLE1BQU04QyxNQUFNO1FBQ3BCQyxtQkFBbUIvQyxNQUFNK0MsaUJBQWlCO1FBQzFDQyxTQUFTaEQsTUFBTWdELE9BQU87UUFDdEJDLHlCQUF5QmpELE1BQU1pRCx1QkFBdUI7UUFDdERDLGVBQWVsRCxNQUFNa0QsYUFBYTtRQUNsQ0MsV0FBV25ELE1BQU1tRCxTQUFTO1FBQzFCQyxTQUFTcEQsTUFBTW9ELE9BQU87UUFDdEJDLGVBQWUsQ0FBQ2QsdUJBQXVCdkMsTUFBTXFELGFBQWEsTUFBTSxRQUFRZCx5QkFBeUIsS0FBSyxJQUFJQSx1QkFBdUI7UUFDakllLFVBQVV0RCxNQUFNc0QsUUFBUTtRQUN4QjlCLE9BQU94QixNQUFNd0IsS0FBSztRQUNsQnBCLE9BQU9KLE1BQU1JLEtBQUs7UUFDbEJtRCxhQUFhdkQsTUFBTXVELFdBQVc7UUFDOUJDLFFBQVF4RCxNQUFNd0QsTUFBTTtRQUNwQkMsTUFBTXpELE1BQU15RCxJQUFJO1FBQ2hCQyxNQUFNMUQsTUFBTTBELElBQUk7UUFDaEJDLE1BQU0zRCxNQUFNMkQsSUFBSTtRQUNoQkMsT0FBTyxDQUFDcEIsZUFBZXhDLE1BQU00RCxLQUFLLE1BQU0sUUFBUXBCLGlCQUFpQixLQUFLLElBQUlBLGVBQWU7UUFDekZxQixZQUFZLENBQUNwQixvQkFBb0J6QyxNQUFNNkQsVUFBVSxNQUFNLFFBQVFwQixzQkFBc0IsS0FBSyxJQUFJQSxvQkFBb0I7UUFDbEhxQixNQUFNLENBQUNwQixjQUFjMUMsTUFBTThELElBQUksTUFBTSxRQUFRcEIsZ0JBQWdCLEtBQUssSUFBSUEsY0FBYztRQUNwRnFCLGVBQWUvRCxNQUFNK0QsYUFBYTtJQUNwQyxJQUFJLFdBQVcsR0FBRXpGLGdEQUFtQixDQUFDeUIsV0FBV0M7QUFDbEQ7QUFDTyxJQUFJZ0Usb0JBQW9CO0lBQzdCakIsbUJBQW1CNUQseUVBQWFBLENBQUM0RCxpQkFBaUI7SUFDbERHLGVBQWUvRCx5RUFBYUEsQ0FBQytELGFBQWE7SUFDMUNELHlCQUF5QjlELHlFQUFhQSxDQUFDOEQsdUJBQXVCO0lBQzlEUSxNQUFNO0lBQ05ELFFBQVFyRSx5RUFBYUEsQ0FBQ3FFLE1BQU07SUFDNUJELGFBQWFwRSx5RUFBYUEsQ0FBQ29FLFdBQVc7SUFDdENILFNBQVNqRSx5RUFBYUEsQ0FBQ2lFLE9BQU87SUFDOUJFLFVBQVVuRSx5RUFBYUEsQ0FBQ21FLFFBQVE7SUFDaEMzQyxPQUFPeEIseUVBQWFBLENBQUN3QixLQUFLO0lBQzFCd0MsV0FBV2hFLHlFQUFhQSxDQUFDZ0UsU0FBUztJQUNsQ04sTUFBTTFELHlFQUFhQSxDQUFDMEQsSUFBSTtJQUN4QnpDLE9BQU9qQix5RUFBYUEsQ0FBQ2lCLEtBQUs7SUFDMUJGLFNBQVM7QUFDWCxFQUFFO0FBRUYsMkRBQTJEO0FBQ3BELE1BQU0rRCxjQUFjMUYsNENBQVNBO0lBQ2xDMkYsU0FBUztRQUNQLE9BQU8sV0FBVyxHQUFFNUYsZ0RBQW1CLENBQUMrRCx5QkFBeUIsSUFBSSxDQUFDckMsS0FBSztJQUM3RTtBQUNGO0FBQ0EzRCxnQkFBZ0I0SCxPQUFPLGVBQWU7QUFDdEM1SCxnQkFBZ0I0SCxPQUFPLGdCQUFnQkQiLCJzb3VyY2VzIjpbIi9yb290L2h5cGVyc3luYy1jbGllbnQtcHl0aG9uL2Zyb250ZW5kLWRlcGxveW1lbnQvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi9jYXJ0ZXNpYW4vWUF4aXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9leGNsdWRlZCA9IFtcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIsIFwidGlja3NcIl07XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkoZSwgciwgdCkgeyByZXR1cm4gKHIgPSBfdG9Qcm9wZXJ0eUtleShyKSkgaW4gZSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCByLCB7IHZhbHVlOiB0LCBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCwgd3JpdGFibGU6ICEwIH0pIDogZVtyXSA9IHQsIGU7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IHR5cGVvZiBpID8gaSA6IGkgKyBcIlwiOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUodCwgcikgeyBpZiAoXCJvYmplY3RcIiAhPSB0eXBlb2YgdCB8fCAhdCkgcmV0dXJuIHQ7IHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdOyBpZiAodm9pZCAwICE9PSBlKSB7IHZhciBpID0gZS5jYWxsKHQsIHIgfHwgXCJkZWZhdWx0XCIpOyBpZiAoXCJvYmplY3RcIiAhPSB0eXBlb2YgaSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG5mdW5jdGlvbiBfZXh0ZW5kcygpIHsgcmV0dXJuIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiA/IE9iamVjdC5hc3NpZ24uYmluZCgpIDogZnVuY3Rpb24gKG4pIHsgZm9yICh2YXIgZSA9IDE7IGUgPCBhcmd1bWVudHMubGVuZ3RoOyBlKyspIHsgdmFyIHQgPSBhcmd1bWVudHNbZV07IGZvciAodmFyIHIgaW4gdCkgKHt9KS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsIHIpICYmIChuW3JdID0gdFtyXSk7IH0gcmV0dXJuIG47IH0sIF9leHRlbmRzLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7IH1cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhlLCB0KSB7IGlmIChudWxsID09IGUpIHJldHVybiB7fTsgdmFyIG8sIHIsIGkgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShlLCB0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIG4gPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpOyBmb3IgKHIgPSAwOyByIDwgbi5sZW5ndGg7IHIrKykgbyA9IG5bcl0sIC0xID09PSB0LmluZGV4T2YobykgJiYge30ucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlLCBvKSAmJiAoaVtvXSA9IGVbb10pOyB9IHJldHVybiBpOyB9XG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShyLCBlKSB7IGlmIChudWxsID09IHIpIHJldHVybiB7fTsgdmFyIHQgPSB7fTsgZm9yICh2YXIgbiBpbiByKSBpZiAoe30uaGFzT3duUHJvcGVydHkuY2FsbChyLCBuKSkgeyBpZiAoLTEgIT09IGUuaW5kZXhPZihuKSkgY29udGludWU7IHRbbl0gPSByW25dOyB9IHJldHVybiB0OyB9XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBDb21wb25lbnQsIHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VMYXlvdXRFZmZlY3QsIGlzVmFsaWRFbGVtZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY2xzeCB9IGZyb20gJ2Nsc3gnO1xuaW1wb3J0IHsgQ2FydGVzaWFuQXhpcyB9IGZyb20gJy4vQ2FydGVzaWFuQXhpcyc7XG5pbXBvcnQgeyBhZGRZQXhpcywgcmVtb3ZlWUF4aXMsIHVwZGF0ZVlBeGlzV2lkdGggfSBmcm9tICcuLi9zdGF0ZS9jYXJ0ZXNpYW5BeGlzU2xpY2UnO1xuaW1wb3J0IHsgdXNlQXBwRGlzcGF0Y2gsIHVzZUFwcFNlbGVjdG9yIH0gZnJvbSAnLi4vc3RhdGUvaG9va3MnO1xuaW1wb3J0IHsgaW1wbGljaXRZQXhpcywgc2VsZWN0QXhpc1NjYWxlLCBzZWxlY3RUaWNrc09mQXhpcywgc2VsZWN0WUF4aXNQb3NpdGlvbiwgc2VsZWN0WUF4aXNTaXplIH0gZnJvbSAnLi4vc3RhdGUvc2VsZWN0b3JzL2F4aXNTZWxlY3RvcnMnO1xuaW1wb3J0IHsgc2VsZWN0QXhpc1ZpZXdCb3ggfSBmcm9tICcuLi9zdGF0ZS9zZWxlY3RvcnMvc2VsZWN0Q2hhcnRPZmZzZXRJbnRlcm5hbCc7XG5pbXBvcnQgeyB1c2VJc1Bhbm9yYW1hIH0gZnJvbSAnLi4vY29udGV4dC9QYW5vcmFtYUNvbnRleHQnO1xuaW1wb3J0IHsgZ2V0Q2FsY3VsYXRlZFlBeGlzV2lkdGggfSBmcm9tICcuLi91dGlsL1lBeGlzVXRpbHMnO1xuaW1wb3J0IHsgaXNMYWJlbENvbnRlbnRBRnVuY3Rpb24gfSBmcm9tICcuLi9jb21wb25lbnQvTGFiZWwnO1xuZnVuY3Rpb24gU2V0WUF4aXNTZXR0aW5ncyhzZXR0aW5ncykge1xuICB2YXIgZGlzcGF0Y2ggPSB1c2VBcHBEaXNwYXRjaCgpO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGRpc3BhdGNoKGFkZFlBeGlzKHNldHRpbmdzKSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGRpc3BhdGNoKHJlbW92ZVlBeGlzKHNldHRpbmdzKSk7XG4gICAgfTtcbiAgfSwgW3NldHRpbmdzLCBkaXNwYXRjaF0pO1xuICByZXR1cm4gbnVsbDtcbn1cbnZhciBZQXhpc0ltcGwgPSBwcm9wcyA9PiB7XG4gIHZhciBfY2FydGVzaWFuQXhpc1JlZiRjdXI7XG4gIHZhciB7XG4gICAgeUF4aXNJZCxcbiAgICBjbGFzc05hbWUsXG4gICAgd2lkdGgsXG4gICAgbGFiZWxcbiAgfSA9IHByb3BzO1xuICB2YXIgY2FydGVzaWFuQXhpc1JlZiA9IHVzZVJlZihudWxsKTtcbiAgdmFyIGxhYmVsUmVmID0gdXNlUmVmKG51bGwpO1xuICB2YXIgdmlld0JveCA9IHVzZUFwcFNlbGVjdG9yKHNlbGVjdEF4aXNWaWV3Qm94KTtcbiAgdmFyIGlzUGFub3JhbWEgPSB1c2VJc1Bhbm9yYW1hKCk7XG4gIHZhciBkaXNwYXRjaCA9IHVzZUFwcERpc3BhdGNoKCk7XG4gIHZhciBheGlzVHlwZSA9ICd5QXhpcyc7XG4gIHZhciBzY2FsZSA9IHVzZUFwcFNlbGVjdG9yKHN0YXRlID0+IHNlbGVjdEF4aXNTY2FsZShzdGF0ZSwgYXhpc1R5cGUsIHlBeGlzSWQsIGlzUGFub3JhbWEpKTtcbiAgdmFyIGF4aXNTaXplID0gdXNlQXBwU2VsZWN0b3Ioc3RhdGUgPT4gc2VsZWN0WUF4aXNTaXplKHN0YXRlLCB5QXhpc0lkKSk7XG4gIHZhciBwb3NpdGlvbiA9IHVzZUFwcFNlbGVjdG9yKHN0YXRlID0+IHNlbGVjdFlBeGlzUG9zaXRpb24oc3RhdGUsIHlBeGlzSWQpKTtcbiAgdmFyIGNhcnRlc2lhblRpY2tJdGVtcyA9IHVzZUFwcFNlbGVjdG9yKHN0YXRlID0+IHNlbGVjdFRpY2tzT2ZBeGlzKHN0YXRlLCBheGlzVHlwZSwgeUF4aXNJZCwgaXNQYW5vcmFtYSkpO1xuICB1c2VMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgIHZhciBfYXhpc0NvbXBvbmVudCR0aWNrUmU7XG4gICAgLy8gTm8gZHluYW1pYyB3aWR0aCBjYWxjdWxhdGlvbiBpcyBkb25lIHdoZW4gd2lkdGggIT09ICdhdXRvJ1xuICAgIC8vIG9yIHdoZW4gYSBmdW5jdGlvbi9yZWFjdCBlbGVtZW50IGlzIHVzZWQgZm9yIGxhYmVsXG4gICAgaWYgKHdpZHRoICE9PSAnYXV0bycgfHwgIWF4aXNTaXplIHx8IGlzTGFiZWxDb250ZW50QUZ1bmN0aW9uKGxhYmVsKSB8fCAvKiNfX1BVUkVfXyovaXNWYWxpZEVsZW1lbnQobGFiZWwpKSByZXR1cm47XG4gICAgdmFyIGF4aXNDb21wb25lbnQgPSBjYXJ0ZXNpYW5BeGlzUmVmLmN1cnJlbnQ7XG4gICAgdmFyIHRpY2tOb2RlcyA9IGF4aXNDb21wb25lbnQgPT09IG51bGwgfHwgYXhpc0NvbXBvbmVudCA9PT0gdm9pZCAwIHx8IChfYXhpc0NvbXBvbmVudCR0aWNrUmUgPSBheGlzQ29tcG9uZW50LnRpY2tSZWZzKSA9PT0gbnVsbCB8fCBfYXhpc0NvbXBvbmVudCR0aWNrUmUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9heGlzQ29tcG9uZW50JHRpY2tSZS5jdXJyZW50O1xuICAgIHZhciB7XG4gICAgICB0aWNrU2l6ZSxcbiAgICAgIHRpY2tNYXJnaW5cbiAgICB9ID0gYXhpc0NvbXBvbmVudC5wcm9wcztcblxuICAgIC8vIGdldCBjYWxjdWxhdGVkIHdpZHRoIGJhc2VkIG9uIHRoZSBsYWJlbCB3aWR0aCwgdGlja3MgZXRjXG4gICAgdmFyIHVwZGF0ZWRZQXhpc1dpZHRoID0gZ2V0Q2FsY3VsYXRlZFlBeGlzV2lkdGgoe1xuICAgICAgdGlja3M6IHRpY2tOb2RlcyxcbiAgICAgIGxhYmVsOiBsYWJlbFJlZi5jdXJyZW50LFxuICAgICAgbGFiZWxHYXBXaXRoVGljazogNSxcbiAgICAgIHRpY2tTaXplLFxuICAgICAgdGlja01hcmdpblxuICAgIH0pO1xuXG4gICAgLy8gaWYgdGhlIHdpZHRoIGhhcyBjaGFuZ2VkLCBkaXNwYXRjaCBhbiBhY3Rpb24gdG8gdXBkYXRlIHRoZSB3aWR0aFxuICAgIGlmIChNYXRoLnJvdW5kKGF4aXNTaXplLndpZHRoKSAhPT0gTWF0aC5yb3VuZCh1cGRhdGVkWUF4aXNXaWR0aCkpIGRpc3BhdGNoKHVwZGF0ZVlBeGlzV2lkdGgoe1xuICAgICAgaWQ6IHlBeGlzSWQsXG4gICAgICB3aWR0aDogdXBkYXRlZFlBeGlzV2lkdGhcbiAgICB9KSk7XG4gIH0sIFtjYXJ0ZXNpYW5BeGlzUmVmLCBjYXJ0ZXNpYW5BeGlzUmVmID09PSBudWxsIHx8IGNhcnRlc2lhbkF4aXNSZWYgPT09IHZvaWQgMCB8fCAoX2NhcnRlc2lhbkF4aXNSZWYkY3VyID0gY2FydGVzaWFuQXhpc1JlZi5jdXJyZW50KSA9PT0gbnVsbCB8fCBfY2FydGVzaWFuQXhpc1JlZiRjdXIgPT09IHZvaWQgMCB8fCAoX2NhcnRlc2lhbkF4aXNSZWYkY3VyID0gX2NhcnRlc2lhbkF4aXNSZWYkY3VyLnRpY2tSZWZzKSA9PT0gbnVsbCB8fCBfY2FydGVzaWFuQXhpc1JlZiRjdXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jYXJ0ZXNpYW5BeGlzUmVmJGN1ci5jdXJyZW50LCAvLyByZXF1aXJlZCB0byBkbyByZS1jYWxjdWxhdGlvbiB3aGVuIHVzaW5nIGJydXNoXG4gIGF4aXNTaXplID09PSBudWxsIHx8IGF4aXNTaXplID09PSB2b2lkIDAgPyB2b2lkIDAgOiBheGlzU2l6ZS53aWR0aCwgYXhpc1NpemUsIGRpc3BhdGNoLCBsYWJlbCwgeUF4aXNJZCwgd2lkdGhdKTtcbiAgaWYgKGF4aXNTaXplID09IG51bGwgfHwgcG9zaXRpb24gPT0gbnVsbCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHZhciB7XG4gICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTCxcbiAgICAgIHRpY2tzXG4gICAgfSA9IHByb3BzLFxuICAgIGFsbE90aGVyUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMocHJvcHMsIF9leGNsdWRlZCk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDYXJ0ZXNpYW5BeGlzLCBfZXh0ZW5kcyh7fSwgYWxsT3RoZXJQcm9wcywge1xuICAgIHJlZjogY2FydGVzaWFuQXhpc1JlZixcbiAgICBsYWJlbFJlZjogbGFiZWxSZWYsXG4gICAgc2NhbGU6IHNjYWxlLFxuICAgIHg6IHBvc2l0aW9uLngsXG4gICAgeTogcG9zaXRpb24ueSxcbiAgICB3aWR0aDogYXhpc1NpemUud2lkdGgsXG4gICAgaGVpZ2h0OiBheGlzU2l6ZS5oZWlnaHQsXG4gICAgY2xhc3NOYW1lOiBjbHN4KFwicmVjaGFydHMtXCIuY29uY2F0KGF4aXNUeXBlLCBcIiBcIikuY29uY2F0KGF4aXNUeXBlKSwgY2xhc3NOYW1lKSxcbiAgICB2aWV3Qm94OiB2aWV3Qm94LFxuICAgIHRpY2tzOiBjYXJ0ZXNpYW5UaWNrSXRlbXNcbiAgfSkpO1xufTtcbnZhciBZQXhpc1NldHRpbmdzRGlzcGF0Y2hlciA9IHByb3BzID0+IHtcbiAgdmFyIF9wcm9wcyRpbnRlcnZhbCwgX3Byb3BzJGluY2x1ZGVIaWRkZW4sIF9wcm9wcyRhbmdsZSwgX3Byb3BzJG1pblRpY2tHYXAsIF9wcm9wcyR0aWNrO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFNldFlBeGlzU2V0dGluZ3MsIHtcbiAgICBpbnRlcnZhbDogKF9wcm9wcyRpbnRlcnZhbCA9IHByb3BzLmludGVydmFsKSAhPT0gbnVsbCAmJiBfcHJvcHMkaW50ZXJ2YWwgIT09IHZvaWQgMCA/IF9wcm9wcyRpbnRlcnZhbCA6ICdwcmVzZXJ2ZUVuZCcsXG4gICAgaWQ6IHByb3BzLnlBeGlzSWQsXG4gICAgc2NhbGU6IHByb3BzLnNjYWxlLFxuICAgIHR5cGU6IHByb3BzLnR5cGUsXG4gICAgZG9tYWluOiBwcm9wcy5kb21haW4sXG4gICAgYWxsb3dEYXRhT3ZlcmZsb3c6IHByb3BzLmFsbG93RGF0YU92ZXJmbG93LFxuICAgIGRhdGFLZXk6IHByb3BzLmRhdGFLZXksXG4gICAgYWxsb3dEdXBsaWNhdGVkQ2F0ZWdvcnk6IHByb3BzLmFsbG93RHVwbGljYXRlZENhdGVnb3J5LFxuICAgIGFsbG93RGVjaW1hbHM6IHByb3BzLmFsbG93RGVjaW1hbHMsXG4gICAgdGlja0NvdW50OiBwcm9wcy50aWNrQ291bnQsXG4gICAgcGFkZGluZzogcHJvcHMucGFkZGluZyxcbiAgICBpbmNsdWRlSGlkZGVuOiAoX3Byb3BzJGluY2x1ZGVIaWRkZW4gPSBwcm9wcy5pbmNsdWRlSGlkZGVuKSAhPT0gbnVsbCAmJiBfcHJvcHMkaW5jbHVkZUhpZGRlbiAhPT0gdm9pZCAwID8gX3Byb3BzJGluY2x1ZGVIaWRkZW4gOiBmYWxzZSxcbiAgICByZXZlcnNlZDogcHJvcHMucmV2ZXJzZWQsXG4gICAgdGlja3M6IHByb3BzLnRpY2tzLFxuICAgIHdpZHRoOiBwcm9wcy53aWR0aCxcbiAgICBvcmllbnRhdGlvbjogcHJvcHMub3JpZW50YXRpb24sXG4gICAgbWlycm9yOiBwcm9wcy5taXJyb3IsXG4gICAgaGlkZTogcHJvcHMuaGlkZSxcbiAgICB1bml0OiBwcm9wcy51bml0LFxuICAgIG5hbWU6IHByb3BzLm5hbWUsXG4gICAgYW5nbGU6IChfcHJvcHMkYW5nbGUgPSBwcm9wcy5hbmdsZSkgIT09IG51bGwgJiYgX3Byb3BzJGFuZ2xlICE9PSB2b2lkIDAgPyBfcHJvcHMkYW5nbGUgOiAwLFxuICAgIG1pblRpY2tHYXA6IChfcHJvcHMkbWluVGlja0dhcCA9IHByb3BzLm1pblRpY2tHYXApICE9PSBudWxsICYmIF9wcm9wcyRtaW5UaWNrR2FwICE9PSB2b2lkIDAgPyBfcHJvcHMkbWluVGlja0dhcCA6IDUsXG4gICAgdGljazogKF9wcm9wcyR0aWNrID0gcHJvcHMudGljaykgIT09IG51bGwgJiYgX3Byb3BzJHRpY2sgIT09IHZvaWQgMCA/IF9wcm9wcyR0aWNrIDogdHJ1ZSxcbiAgICB0aWNrRm9ybWF0dGVyOiBwcm9wcy50aWNrRm9ybWF0dGVyXG4gIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChZQXhpc0ltcGwsIHByb3BzKSk7XG59O1xuZXhwb3J0IHZhciBZQXhpc0RlZmF1bHRQcm9wcyA9IHtcbiAgYWxsb3dEYXRhT3ZlcmZsb3c6IGltcGxpY2l0WUF4aXMuYWxsb3dEYXRhT3ZlcmZsb3csXG4gIGFsbG93RGVjaW1hbHM6IGltcGxpY2l0WUF4aXMuYWxsb3dEZWNpbWFscyxcbiAgYWxsb3dEdXBsaWNhdGVkQ2F0ZWdvcnk6IGltcGxpY2l0WUF4aXMuYWxsb3dEdXBsaWNhdGVkQ2F0ZWdvcnksXG4gIGhpZGU6IGZhbHNlLFxuICBtaXJyb3I6IGltcGxpY2l0WUF4aXMubWlycm9yLFxuICBvcmllbnRhdGlvbjogaW1wbGljaXRZQXhpcy5vcmllbnRhdGlvbixcbiAgcGFkZGluZzogaW1wbGljaXRZQXhpcy5wYWRkaW5nLFxuICByZXZlcnNlZDogaW1wbGljaXRZQXhpcy5yZXZlcnNlZCxcbiAgc2NhbGU6IGltcGxpY2l0WUF4aXMuc2NhbGUsXG4gIHRpY2tDb3VudDogaW1wbGljaXRZQXhpcy50aWNrQ291bnQsXG4gIHR5cGU6IGltcGxpY2l0WUF4aXMudHlwZSxcbiAgd2lkdGg6IGltcGxpY2l0WUF4aXMud2lkdGgsXG4gIHlBeGlzSWQ6IDBcbn07XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9wcmVmZXItc3RhdGVsZXNzLWZ1bmN0aW9uXG5leHBvcnQgY2xhc3MgWUF4aXMgZXh0ZW5kcyBDb21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFlBeGlzU2V0dGluZ3NEaXNwYXRjaGVyLCB0aGlzLnByb3BzKTtcbiAgfVxufVxuX2RlZmluZVByb3BlcnR5KFlBeGlzLCBcImRpc3BsYXlOYW1lXCIsICdZQXhpcycpO1xuX2RlZmluZVByb3BlcnR5KFlBeGlzLCBcImRlZmF1bHRQcm9wc1wiLCBZQXhpc0RlZmF1bHRQcm9wcyk7Il0sIm5hbWVzIjpbIl9leGNsdWRlZCIsIl9kZWZpbmVQcm9wZXJ0eSIsImUiLCJyIiwidCIsIl90b1Byb3BlcnR5S2V5IiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImkiLCJfdG9QcmltaXRpdmUiLCJTeW1ib2wiLCJ0b1ByaW1pdGl2ZSIsImNhbGwiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJOdW1iZXIiLCJfZXh0ZW5kcyIsImFzc2lnbiIsImJpbmQiLCJuIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiaGFzT3duUHJvcGVydHkiLCJhcHBseSIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllcyIsIm8iLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsImdldE93blByb3BlcnR5U3ltYm9scyIsImluZGV4T2YiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIlJlYWN0IiwiQ29tcG9uZW50IiwidXNlRWZmZWN0IiwidXNlUmVmIiwidXNlTGF5b3V0RWZmZWN0IiwiaXNWYWxpZEVsZW1lbnQiLCJjbHN4IiwiQ2FydGVzaWFuQXhpcyIsImFkZFlBeGlzIiwicmVtb3ZlWUF4aXMiLCJ1cGRhdGVZQXhpc1dpZHRoIiwidXNlQXBwRGlzcGF0Y2giLCJ1c2VBcHBTZWxlY3RvciIsImltcGxpY2l0WUF4aXMiLCJzZWxlY3RBeGlzU2NhbGUiLCJzZWxlY3RUaWNrc09mQXhpcyIsInNlbGVjdFlBeGlzUG9zaXRpb24iLCJzZWxlY3RZQXhpc1NpemUiLCJzZWxlY3RBeGlzVmlld0JveCIsInVzZUlzUGFub3JhbWEiLCJnZXRDYWxjdWxhdGVkWUF4aXNXaWR0aCIsImlzTGFiZWxDb250ZW50QUZ1bmN0aW9uIiwiU2V0WUF4aXNTZXR0aW5ncyIsInNldHRpbmdzIiwiZGlzcGF0Y2giLCJZQXhpc0ltcGwiLCJwcm9wcyIsIl9jYXJ0ZXNpYW5BeGlzUmVmJGN1ciIsInlBeGlzSWQiLCJjbGFzc05hbWUiLCJ3aWR0aCIsImxhYmVsIiwiY2FydGVzaWFuQXhpc1JlZiIsImxhYmVsUmVmIiwidmlld0JveCIsImlzUGFub3JhbWEiLCJheGlzVHlwZSIsInNjYWxlIiwic3RhdGUiLCJheGlzU2l6ZSIsInBvc2l0aW9uIiwiY2FydGVzaWFuVGlja0l0ZW1zIiwiX2F4aXNDb21wb25lbnQkdGlja1JlIiwiYXhpc0NvbXBvbmVudCIsImN1cnJlbnQiLCJ0aWNrTm9kZXMiLCJ0aWNrUmVmcyIsInRpY2tTaXplIiwidGlja01hcmdpbiIsInVwZGF0ZWRZQXhpc1dpZHRoIiwidGlja3MiLCJsYWJlbEdhcFdpdGhUaWNrIiwiTWF0aCIsInJvdW5kIiwiaWQiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsImFsbE90aGVyUHJvcHMiLCJjcmVhdGVFbGVtZW50IiwicmVmIiwieCIsInkiLCJoZWlnaHQiLCJjb25jYXQiLCJZQXhpc1NldHRpbmdzRGlzcGF0Y2hlciIsIl9wcm9wcyRpbnRlcnZhbCIsIl9wcm9wcyRpbmNsdWRlSGlkZGVuIiwiX3Byb3BzJGFuZ2xlIiwiX3Byb3BzJG1pblRpY2tHYXAiLCJfcHJvcHMkdGljayIsIkZyYWdtZW50IiwiaW50ZXJ2YWwiLCJ0eXBlIiwiZG9tYWluIiwiYWxsb3dEYXRhT3ZlcmZsb3ciLCJkYXRhS2V5IiwiYWxsb3dEdXBsaWNhdGVkQ2F0ZWdvcnkiLCJhbGxvd0RlY2ltYWxzIiwidGlja0NvdW50IiwicGFkZGluZyIsImluY2x1ZGVIaWRkZW4iLCJyZXZlcnNlZCIsIm9yaWVudGF0aW9uIiwibWlycm9yIiwiaGlkZSIsInVuaXQiLCJuYW1lIiwiYW5nbGUiLCJtaW5UaWNrR2FwIiwidGljayIsInRpY2tGb3JtYXR0ZXIiLCJZQXhpc0RlZmF1bHRQcm9wcyIsIllBeGlzIiwicmVuZGVyIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/recharts/es6/cartesian/YAxis.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/recharts/es6/cartesian/getEquidistantTicks.js":
/*!********************************************************************!*\
  !*** ./node_modules/recharts/es6/cartesian/getEquidistantTicks.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEquidistantTicks: () => (/* binding */ getEquidistantTicks)\n/* harmony export */ });\n/* harmony import */ var _util_TickUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/TickUtils */ \"(ssr)/./node_modules/recharts/es6/util/TickUtils.js\");\n/* harmony import */ var _util_getEveryNthWithCondition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/getEveryNthWithCondition */ \"(ssr)/./node_modules/recharts/es6/util/getEveryNthWithCondition.js\");\n\n\nfunction getEquidistantTicks(sign, boundaries, getTickSize, ticks, minTickGap) {\n    // If the ticks are readonly, then the slice might not be necessary\n    var result = (ticks || []).slice();\n    var { start: initialStart, end } = boundaries;\n    var index = 0;\n    // Premature optimisation idea 1: Estimate a lower bound, and start from there.\n    // For now, start from every tick\n    var stepsize = 1;\n    var start = initialStart;\n    var _loop = function _loop() {\n        // Given stepsize, evaluate whether every stepsize-th tick can be shown.\n        // If it can not, then increase the stepsize by 1, and try again.\n        var entry = ticks === null || ticks === void 0 ? void 0 : ticks[index];\n        // Break condition - If we have evaluated all the ticks, then we are done.\n        if (entry === undefined) {\n            return {\n                v: (0,_util_getEveryNthWithCondition__WEBPACK_IMPORTED_MODULE_0__.getEveryNthWithCondition)(ticks, stepsize)\n            };\n        }\n        // Check if the element collides with the next element\n        var i = index;\n        var size;\n        var getSize = ()=>{\n            if (size === undefined) {\n                size = getTickSize(entry, i);\n            }\n            return size;\n        };\n        var tickCoord = entry.coordinate;\n        // We will always show the first tick.\n        var isShow = index === 0 || (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_1__.isVisible)(sign, tickCoord, getSize, start, end);\n        if (!isShow) {\n            // Start all over with a larger stepsize\n            index = 0;\n            start = initialStart;\n            stepsize += 1;\n        }\n        if (isShow) {\n            // If it can be shown, update the start\n            start = tickCoord + sign * (getSize() / 2 + minTickGap);\n            index += stepsize;\n        }\n    }, _ret;\n    while(stepsize <= result.length){\n        _ret = _loop();\n        if (_ret) return _ret.v;\n    }\n    return [];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVjaGFydHMvZXM2L2NhcnRlc2lhbi9nZXRFcXVpZGlzdGFudFRpY2tzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4QztBQUM4QjtBQUNyRSxTQUFTRSxvQkFBb0JDLElBQUksRUFBRUMsVUFBVSxFQUFFQyxXQUFXLEVBQUVDLEtBQUssRUFBRUMsVUFBVTtJQUNsRixtRUFBbUU7SUFDbkUsSUFBSUMsU0FBUyxDQUFDRixTQUFTLEVBQUUsRUFBRUcsS0FBSztJQUNoQyxJQUFJLEVBQ0ZDLE9BQU9DLFlBQVksRUFDbkJDLEdBQUcsRUFDSixHQUFHUjtJQUNKLElBQUlTLFFBQVE7SUFDWiwrRUFBK0U7SUFDL0UsaUNBQWlDO0lBQ2pDLElBQUlDLFdBQVc7SUFDZixJQUFJSixRQUFRQztJQUNaLElBQUlJLFFBQVEsU0FBU0E7UUFDakIsd0VBQXdFO1FBQ3hFLGlFQUFpRTtRQUVqRSxJQUFJQyxRQUFRVixVQUFVLFFBQVFBLFVBQVUsS0FBSyxJQUFJLEtBQUssSUFBSUEsS0FBSyxDQUFDTyxNQUFNO1FBRXRFLDBFQUEwRTtRQUMxRSxJQUFJRyxVQUFVQyxXQUFXO1lBQ3ZCLE9BQU87Z0JBQ0xDLEdBQUdqQix3RkFBd0JBLENBQUNLLE9BQU9RO1lBQ3JDO1FBQ0Y7UUFFQSxzREFBc0Q7UUFDdEQsSUFBSUssSUFBSU47UUFDUixJQUFJTztRQUNKLElBQUlDLFVBQVU7WUFDWixJQUFJRCxTQUFTSCxXQUFXO2dCQUN0QkcsT0FBT2YsWUFBWVcsT0FBT0c7WUFDNUI7WUFDQSxPQUFPQztRQUNUO1FBQ0EsSUFBSUUsWUFBWU4sTUFBTU8sVUFBVTtRQUNoQyxzQ0FBc0M7UUFDdEMsSUFBSUMsU0FBU1gsVUFBVSxLQUFLYiwwREFBU0EsQ0FBQ0csTUFBTW1CLFdBQVdELFNBQVNYLE9BQU9FO1FBQ3ZFLElBQUksQ0FBQ1ksUUFBUTtZQUNYLHdDQUF3QztZQUN4Q1gsUUFBUTtZQUNSSCxRQUFRQztZQUNSRyxZQUFZO1FBQ2Q7UUFDQSxJQUFJVSxRQUFRO1lBQ1YsdUNBQXVDO1lBQ3ZDZCxRQUFRWSxZQUFZbkIsT0FBUWtCLENBQUFBLFlBQVksSUFBSWQsVUFBUztZQUNyRE0sU0FBU0M7UUFDWDtJQUNGLEdBQ0FXO0lBQ0YsTUFBT1gsWUFBWU4sT0FBT2tCLE1BQU0sQ0FBRTtRQUNoQ0QsT0FBT1Y7UUFDUCxJQUFJVSxNQUFNLE9BQU9BLEtBQUtQLENBQUM7SUFDekI7SUFDQSxPQUFPLEVBQUU7QUFDWCIsInNvdXJjZXMiOlsiL3Jvb3QvaHlwZXJzeW5jLWNsaWVudC1weXRob24vZnJvbnRlbmQtZGVwbG95bWVudC9ub2RlX21vZHVsZXMvcmVjaGFydHMvZXM2L2NhcnRlc2lhbi9nZXRFcXVpZGlzdGFudFRpY2tzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzVmlzaWJsZSB9IGZyb20gJy4uL3V0aWwvVGlja1V0aWxzJztcbmltcG9ydCB7IGdldEV2ZXJ5TnRoV2l0aENvbmRpdGlvbiB9IGZyb20gJy4uL3V0aWwvZ2V0RXZlcnlOdGhXaXRoQ29uZGl0aW9uJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRFcXVpZGlzdGFudFRpY2tzKHNpZ24sIGJvdW5kYXJpZXMsIGdldFRpY2tTaXplLCB0aWNrcywgbWluVGlja0dhcCkge1xuICAvLyBJZiB0aGUgdGlja3MgYXJlIHJlYWRvbmx5LCB0aGVuIHRoZSBzbGljZSBtaWdodCBub3QgYmUgbmVjZXNzYXJ5XG4gIHZhciByZXN1bHQgPSAodGlja3MgfHwgW10pLnNsaWNlKCk7XG4gIHZhciB7XG4gICAgc3RhcnQ6IGluaXRpYWxTdGFydCxcbiAgICBlbmRcbiAgfSA9IGJvdW5kYXJpZXM7XG4gIHZhciBpbmRleCA9IDA7XG4gIC8vIFByZW1hdHVyZSBvcHRpbWlzYXRpb24gaWRlYSAxOiBFc3RpbWF0ZSBhIGxvd2VyIGJvdW5kLCBhbmQgc3RhcnQgZnJvbSB0aGVyZS5cbiAgLy8gRm9yIG5vdywgc3RhcnQgZnJvbSBldmVyeSB0aWNrXG4gIHZhciBzdGVwc2l6ZSA9IDE7XG4gIHZhciBzdGFydCA9IGluaXRpYWxTdGFydDtcbiAgdmFyIF9sb29wID0gZnVuY3Rpb24gX2xvb3AoKSB7XG4gICAgICAvLyBHaXZlbiBzdGVwc2l6ZSwgZXZhbHVhdGUgd2hldGhlciBldmVyeSBzdGVwc2l6ZS10aCB0aWNrIGNhbiBiZSBzaG93bi5cbiAgICAgIC8vIElmIGl0IGNhbiBub3QsIHRoZW4gaW5jcmVhc2UgdGhlIHN0ZXBzaXplIGJ5IDEsIGFuZCB0cnkgYWdhaW4uXG5cbiAgICAgIHZhciBlbnRyeSA9IHRpY2tzID09PSBudWxsIHx8IHRpY2tzID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0aWNrc1tpbmRleF07XG5cbiAgICAgIC8vIEJyZWFrIGNvbmRpdGlvbiAtIElmIHdlIGhhdmUgZXZhbHVhdGVkIGFsbCB0aGUgdGlja3MsIHRoZW4gd2UgYXJlIGRvbmUuXG4gICAgICBpZiAoZW50cnkgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHY6IGdldEV2ZXJ5TnRoV2l0aENvbmRpdGlvbih0aWNrcywgc3RlcHNpemUpXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIC8vIENoZWNrIGlmIHRoZSBlbGVtZW50IGNvbGxpZGVzIHdpdGggdGhlIG5leHQgZWxlbWVudFxuICAgICAgdmFyIGkgPSBpbmRleDtcbiAgICAgIHZhciBzaXplO1xuICAgICAgdmFyIGdldFNpemUgPSAoKSA9PiB7XG4gICAgICAgIGlmIChzaXplID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBzaXplID0gZ2V0VGlja1NpemUoZW50cnksIGkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzaXplO1xuICAgICAgfTtcbiAgICAgIHZhciB0aWNrQ29vcmQgPSBlbnRyeS5jb29yZGluYXRlO1xuICAgICAgLy8gV2Ugd2lsbCBhbHdheXMgc2hvdyB0aGUgZmlyc3QgdGljay5cbiAgICAgIHZhciBpc1Nob3cgPSBpbmRleCA9PT0gMCB8fCBpc1Zpc2libGUoc2lnbiwgdGlja0Nvb3JkLCBnZXRTaXplLCBzdGFydCwgZW5kKTtcbiAgICAgIGlmICghaXNTaG93KSB7XG4gICAgICAgIC8vIFN0YXJ0IGFsbCBvdmVyIHdpdGggYSBsYXJnZXIgc3RlcHNpemVcbiAgICAgICAgaW5kZXggPSAwO1xuICAgICAgICBzdGFydCA9IGluaXRpYWxTdGFydDtcbiAgICAgICAgc3RlcHNpemUgKz0gMTtcbiAgICAgIH1cbiAgICAgIGlmIChpc1Nob3cpIHtcbiAgICAgICAgLy8gSWYgaXQgY2FuIGJlIHNob3duLCB1cGRhdGUgdGhlIHN0YXJ0XG4gICAgICAgIHN0YXJ0ID0gdGlja0Nvb3JkICsgc2lnbiAqIChnZXRTaXplKCkgLyAyICsgbWluVGlja0dhcCk7XG4gICAgICAgIGluZGV4ICs9IHN0ZXBzaXplO1xuICAgICAgfVxuICAgIH0sXG4gICAgX3JldDtcbiAgd2hpbGUgKHN0ZXBzaXplIDw9IHJlc3VsdC5sZW5ndGgpIHtcbiAgICBfcmV0ID0gX2xvb3AoKTtcbiAgICBpZiAoX3JldCkgcmV0dXJuIF9yZXQudjtcbiAgfVxuICByZXR1cm4gW107XG59Il0sIm5hbWVzIjpbImlzVmlzaWJsZSIsImdldEV2ZXJ5TnRoV2l0aENvbmRpdGlvbiIsImdldEVxdWlkaXN0YW50VGlja3MiLCJzaWduIiwiYm91bmRhcmllcyIsImdldFRpY2tTaXplIiwidGlja3MiLCJtaW5UaWNrR2FwIiwicmVzdWx0Iiwic2xpY2UiLCJzdGFydCIsImluaXRpYWxTdGFydCIsImVuZCIsImluZGV4Iiwic3RlcHNpemUiLCJfbG9vcCIsImVudHJ5IiwidW5kZWZpbmVkIiwidiIsImkiLCJzaXplIiwiZ2V0U2l6ZSIsInRpY2tDb29yZCIsImNvb3JkaW5hdGUiLCJpc1Nob3ciLCJfcmV0IiwibGVuZ3RoIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/recharts/es6/cartesian/getEquidistantTicks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/recharts/es6/cartesian/getTicks.js":
/*!*********************************************************!*\
  !*** ./node_modules/recharts/es6/cartesian/getTicks.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTicks: () => (/* binding */ getTicks)\n/* harmony export */ });\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_DOMUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/DOMUtils */ \"(ssr)/./node_modules/recharts/es6/util/DOMUtils.js\");\n/* harmony import */ var _util_Global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Global */ \"(ssr)/./node_modules/recharts/es6/util/Global.js\");\n/* harmony import */ var _util_TickUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/TickUtils */ \"(ssr)/./node_modules/recharts/es6/util/TickUtils.js\");\n/* harmony import */ var _getEquidistantTicks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getEquidistantTicks */ \"(ssr)/./node_modules/recharts/es6/cartesian/getEquidistantTicks.js\");\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n\n\n\n\n\nfunction getTicksEnd(sign, boundaries, getTickSize, ticks, minTickGap) {\n    var result = (ticks || []).slice();\n    var len = result.length;\n    var { start } = boundaries;\n    var { end } = boundaries;\n    var _loop = function _loop(i) {\n        var entry = result[i];\n        var size;\n        var getSize = ()=>{\n            if (size === undefined) {\n                size = getTickSize(entry, i);\n            }\n            return size;\n        };\n        if (i === len - 1) {\n            var gap = sign * (entry.coordinate + sign * getSize() / 2 - end);\n            result[i] = entry = _objectSpread(_objectSpread({}, entry), {}, {\n                tickCoord: gap > 0 ? entry.coordinate - gap * sign : entry.coordinate\n            });\n        } else {\n            result[i] = entry = _objectSpread(_objectSpread({}, entry), {}, {\n                tickCoord: entry.coordinate\n            });\n        }\n        var isShow = (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_0__.isVisible)(sign, entry.tickCoord, getSize, start, end);\n        if (isShow) {\n            end = entry.tickCoord - sign * (getSize() / 2 + minTickGap);\n            result[i] = _objectSpread(_objectSpread({}, entry), {}, {\n                isShow: true\n            });\n        }\n    };\n    for(var i = len - 1; i >= 0; i--){\n        _loop(i);\n    }\n    return result;\n}\nfunction getTicksStart(sign, boundaries, getTickSize, ticks, minTickGap, preserveEnd) {\n    // This method is mutating the array so clone is indeed necessary here\n    var result = (ticks || []).slice();\n    var len = result.length;\n    var { start, end } = boundaries;\n    if (preserveEnd) {\n        // Try to guarantee the tail to be displayed\n        var tail = ticks[len - 1];\n        var tailSize = getTickSize(tail, len - 1);\n        var tailGap = sign * (tail.coordinate + sign * tailSize / 2 - end);\n        result[len - 1] = tail = _objectSpread(_objectSpread({}, tail), {}, {\n            tickCoord: tailGap > 0 ? tail.coordinate - tailGap * sign : tail.coordinate\n        });\n        var isTailShow = (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_0__.isVisible)(sign, tail.tickCoord, ()=>tailSize, start, end);\n        if (isTailShow) {\n            end = tail.tickCoord - sign * (tailSize / 2 + minTickGap);\n            result[len - 1] = _objectSpread(_objectSpread({}, tail), {}, {\n                isShow: true\n            });\n        }\n    }\n    var count = preserveEnd ? len - 1 : len;\n    var _loop2 = function _loop2(i) {\n        var entry = result[i];\n        var size;\n        var getSize = ()=>{\n            if (size === undefined) {\n                size = getTickSize(entry, i);\n            }\n            return size;\n        };\n        if (i === 0) {\n            var gap = sign * (entry.coordinate - sign * getSize() / 2 - start);\n            result[i] = entry = _objectSpread(_objectSpread({}, entry), {}, {\n                tickCoord: gap < 0 ? entry.coordinate - gap * sign : entry.coordinate\n            });\n        } else {\n            result[i] = entry = _objectSpread(_objectSpread({}, entry), {}, {\n                tickCoord: entry.coordinate\n            });\n        }\n        var isShow = (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_0__.isVisible)(sign, entry.tickCoord, getSize, start, end);\n        if (isShow) {\n            start = entry.tickCoord + sign * (getSize() / 2 + minTickGap);\n            result[i] = _objectSpread(_objectSpread({}, entry), {}, {\n                isShow: true\n            });\n        }\n    };\n    for(var i = 0; i < count; i++){\n        _loop2(i);\n    }\n    return result;\n}\nfunction getTicks(props, fontSize, letterSpacing) {\n    var { tick, ticks, viewBox, minTickGap, orientation, interval, tickFormatter, unit, angle } = props;\n    if (!ticks || !ticks.length || !tick) {\n        return [];\n    }\n    if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(interval) || _util_Global__WEBPACK_IMPORTED_MODULE_2__.Global.isSsr) {\n        var _getNumberIntervalTic;\n        return (_getNumberIntervalTic = (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_0__.getNumberIntervalTicks)(ticks, (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(interval) ? interval : 0)) !== null && _getNumberIntervalTic !== void 0 ? _getNumberIntervalTic : [];\n    }\n    var candidates = [];\n    var sizeKey = orientation === 'top' || orientation === 'bottom' ? 'width' : 'height';\n    var unitSize = unit && sizeKey === 'width' ? (0,_util_DOMUtils__WEBPACK_IMPORTED_MODULE_3__.getStringSize)(unit, {\n        fontSize,\n        letterSpacing\n    }) : {\n        width: 0,\n        height: 0\n    };\n    var getTickSize = (content, index)=>{\n        var value = typeof tickFormatter === 'function' ? tickFormatter(content.value, index) : content.value;\n        // Recharts only supports angles when sizeKey === 'width'\n        return sizeKey === 'width' ? (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_0__.getAngledTickWidth)((0,_util_DOMUtils__WEBPACK_IMPORTED_MODULE_3__.getStringSize)(value, {\n            fontSize,\n            letterSpacing\n        }), unitSize, angle) : (0,_util_DOMUtils__WEBPACK_IMPORTED_MODULE_3__.getStringSize)(value, {\n            fontSize,\n            letterSpacing\n        })[sizeKey];\n    };\n    var sign = ticks.length >= 2 ? (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_1__.mathSign)(ticks[1].coordinate - ticks[0].coordinate) : 1;\n    var boundaries = (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_0__.getTickBoundaries)(viewBox, sign, sizeKey);\n    if (interval === 'equidistantPreserveStart') {\n        return (0,_getEquidistantTicks__WEBPACK_IMPORTED_MODULE_4__.getEquidistantTicks)(sign, boundaries, getTickSize, ticks, minTickGap);\n    }\n    if (interval === 'preserveStart' || interval === 'preserveStartEnd') {\n        candidates = getTicksStart(sign, boundaries, getTickSize, ticks, minTickGap, interval === 'preserveStartEnd');\n    } else {\n        candidates = getTicksEnd(sign, boundaries, getTickSize, ticks, minTickGap);\n    }\n    return candidates.filter((entry)=>entry.isShow);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/recharts/es6/cartesian/getTicks.js\n");

/***/ })

};
;