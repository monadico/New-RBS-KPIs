"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["vendors-node_modules_recharts_es6_a"],{

/***/ "(app-pages-browser)/./node_modules/recharts/es6/animation/Animate.js":
/*!********************************************************!*\
  !*** ./node_modules/recharts/es6/animation/Animate.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Animate: () => (/* binding */ Animate),\n/* harmony export */   AnimationManagerContext: () => (/* binding */ AnimationManagerContext)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var es_toolkit_compat_isEqual__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! es-toolkit/compat/isEqual */ \"(app-pages-browser)/./node_modules/es-toolkit/compat/isEqual.js\");\n/* harmony import */ var es_toolkit_compat_isEqual__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(es_toolkit_compat_isEqual__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _AnimationManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AnimationManager */ \"(app-pages-browser)/./node_modules/recharts/es6/animation/AnimationManager.js\");\n/* harmony import */ var _easing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./easing */ \"(app-pages-browser)/./node_modules/recharts/es6/animation/easing.js\");\n/* harmony import */ var _configUpdate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./configUpdate */ \"(app-pages-browser)/./node_modules/recharts/es6/animation/configUpdate.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util */ \"(app-pages-browser)/./node_modules/recharts/es6/animation/util.js\");\n/* harmony import */ var _timeoutController__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./timeoutController */ \"(app-pages-browser)/./node_modules/recharts/es6/animation/timeoutController.js\");\nvar _s = $RefreshSig$();\nvar _excluded = [\n    \"children\",\n    \"begin\",\n    \"duration\",\n    \"attributeName\",\n    \"easing\",\n    \"isActive\",\n    \"from\",\n    \"to\",\n    \"canBegin\",\n    \"onAnimationEnd\",\n    \"shouldReAnimate\",\n    \"onAnimationReStart\",\n    \"animationManager\"\n];\nfunction _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function(n) {\n        for(var e = 1; e < arguments.length; e++){\n            var t = arguments[e];\n            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n        }\n        return n;\n    }, _extends.apply(null, arguments);\n}\nfunction _objectWithoutProperties(e, t) {\n    if (null == e) return {};\n    var o, r, i = _objectWithoutPropertiesLoose(e, t);\n    if (Object.getOwnPropertySymbols) {\n        var n = Object.getOwnPropertySymbols(e);\n        for(r = 0; r < n.length; r++)o = n[r], -1 === t.indexOf(o) && ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n    }\n    return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n    if (null == r) return {};\n    var t = {};\n    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {\n        if (-1 !== e.indexOf(n)) continue;\n        t[n] = r[n];\n    }\n    return t;\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n\n\n\n\n\n\n\n\nfunction createDefaultAnimationManager() {\n    return (0,_AnimationManager__WEBPACK_IMPORTED_MODULE_1__.createAnimateManager)(new _timeoutController__WEBPACK_IMPORTED_MODULE_2__.RequestAnimationFrameTimeoutController());\n}\nclass AnimateImpl extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n    componentDidMount() {\n        var { isActive, canBegin } = this.props;\n        this.mounted = true;\n        if (!isActive || !canBegin) {\n            return;\n        }\n        this.runAnimation(this.props);\n    }\n    componentDidUpdate(prevProps) {\n        var { isActive, canBegin, attributeName, shouldReAnimate, to, from: currentFrom } = this.props;\n        var { style } = this.state;\n        if (!canBegin) {\n            return;\n        }\n        if (!isActive) {\n            var newState = {\n                style: attributeName ? {\n                    [attributeName]: to\n                } : to\n            };\n            if (this.state && style) {\n                if (attributeName && style[attributeName] !== to || !attributeName && style !== to) {\n                    this.setState(newState);\n                }\n            }\n            return;\n        }\n        if (es_toolkit_compat_isEqual__WEBPACK_IMPORTED_MODULE_3___default()(prevProps.to, to) && prevProps.canBegin && prevProps.isActive) {\n            return;\n        }\n        var isTriggered = !prevProps.canBegin || !prevProps.isActive;\n        this.manager.stop();\n        if (this.stopJSAnimation) {\n            this.stopJSAnimation();\n        }\n        var from = isTriggered || shouldReAnimate ? currentFrom : prevProps.to;\n        if (this.state && style) {\n            var _newState = {\n                style: attributeName ? {\n                    [attributeName]: from\n                } : from\n            };\n            if (attributeName && style[attributeName] !== from || !attributeName && style !== from) {\n                this.setState(_newState);\n            }\n        }\n        this.runAnimation(_objectSpread(_objectSpread({}, this.props), {}, {\n            from,\n            begin: 0\n        }));\n    }\n    componentWillUnmount() {\n        this.mounted = false;\n        var { onAnimationEnd } = this.props;\n        if (this.unSubscribe) {\n            this.unSubscribe();\n        }\n        this.manager.stop();\n        if (this.stopJSAnimation) {\n            this.stopJSAnimation();\n        }\n        if (onAnimationEnd) {\n            onAnimationEnd();\n        }\n    }\n    handleStyleChange(style) {\n        this.changeStyle(style);\n    }\n    changeStyle(style) {\n        if (this.mounted) {\n            this.setState({\n                style\n            });\n        }\n    }\n    runJSAnimation(props) {\n        var { from, to, duration, easing, begin, onAnimationEnd, onAnimationStart } = props;\n        var startAnimation = (0,_configUpdate__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(from, to, (0,_easing__WEBPACK_IMPORTED_MODULE_5__.configEasing)(easing), duration, this.changeStyle, this.manager.getTimeoutController());\n        var finalStartAnimation = ()=>{\n            this.stopJSAnimation = startAnimation();\n        };\n        this.manager.start([\n            onAnimationStart,\n            begin,\n            finalStartAnimation,\n            duration,\n            onAnimationEnd\n        ]);\n    }\n    runAnimation(props) {\n        var { begin, duration, attributeName, to: propsTo, easing, onAnimationStart, onAnimationEnd, children } = props;\n        this.unSubscribe = this.manager.subscribe(this.handleStyleChange);\n        if (typeof easing === 'function' || typeof children === 'function' || easing === 'spring') {\n            this.runJSAnimation(props);\n            return;\n        }\n        var to = attributeName ? {\n            [attributeName]: propsTo\n        } : propsTo;\n        var transition = (0,_util__WEBPACK_IMPORTED_MODULE_6__.getTransitionVal)(Object.keys(to), duration, easing);\n        this.manager.start([\n            onAnimationStart,\n            begin,\n            _objectSpread(_objectSpread({}, to), {}, {\n                transition\n            }),\n            duration,\n            onAnimationEnd\n        ]);\n    }\n    render() {\n        var _this$props = this.props, { children, begin, duration, attributeName, easing, isActive, from, to, canBegin, onAnimationEnd, shouldReAnimate, onAnimationReStart, animationManager } = _this$props, others = _objectWithoutProperties(_this$props, _excluded);\n        var count = react__WEBPACK_IMPORTED_MODULE_0__.Children.count(children);\n        var stateStyle = this.state.style;\n        if (typeof children === 'function') {\n            return children(stateStyle);\n        }\n        if (!isActive || count === 0 || duration <= 0) {\n            return children;\n        }\n        var cloneContainer = (container)=>{\n            var { style = {}, className } = container.props;\n            var res = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(container, _objectSpread(_objectSpread({}, others), {}, {\n                style: _objectSpread(_objectSpread({}, style), stateStyle),\n                className\n            }));\n            return res;\n        };\n        if (count === 1) {\n            // @ts-expect-error TODO - fix the type error\n            return cloneContainer(react__WEBPACK_IMPORTED_MODULE_0__.Children.only(children));\n        }\n        // @ts-expect-error TODO - fix the type error\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null, react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children, (child)=>cloneContainer(child)));\n    }\n    constructor(props, context){\n        super(props, context);\n        _defineProperty(this, \"mounted\", false);\n        _defineProperty(this, \"manager\", null);\n        _defineProperty(this, \"stopJSAnimation\", null);\n        _defineProperty(this, \"unSubscribe\", null);\n        var { isActive, attributeName, from, to, children, duration, animationManager } = this.props;\n        this.manager = animationManager;\n        this.handleStyleChange = this.handleStyleChange.bind(this);\n        this.changeStyle = this.changeStyle.bind(this);\n        if (!isActive || duration <= 0) {\n            this.state = {\n                style: {}\n            };\n            // if children is a function and animation is not active, set style to 'to'\n            if (typeof children === 'function') {\n                this.state = {\n                    style: to\n                };\n            }\n            return;\n        }\n        if (from) {\n            if (typeof children === 'function') {\n                this.state = {\n                    style: from\n                };\n                return;\n            }\n            this.state = {\n                style: attributeName ? {\n                    [attributeName]: from\n                } : from\n            };\n        } else {\n            this.state = {\n                style: {}\n            };\n        }\n    }\n}\n_defineProperty(AnimateImpl, \"displayName\", 'Animate');\n_defineProperty(AnimateImpl, \"defaultProps\", {\n    begin: 0,\n    duration: 1000,\n    attributeName: '',\n    easing: 'ease',\n    isActive: true,\n    canBegin: true,\n    onAnimationEnd: ()=>{},\n    onAnimationStart: ()=>{}\n});\nvar AnimationManagerContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nfunction Animate(props) {\n    _s();\n    var _ref, _props$animationManag;\n    var contextAnimationManager = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(AnimationManagerContext);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AnimateImpl, _extends({}, props, {\n        animationManager: (_ref = (_props$animationManag = props.animationManager) !== null && _props$animationManag !== void 0 ? _props$animationManag : contextAnimationManager) !== null && _ref !== void 0 ? _ref : createDefaultAnimationManager()\n    }));\n}\n_s(Animate, \"j8vGx08MQWMQFMYRRxQqHYr5haM=\");\n_c = Animate;\nvar _c;\n$RefreshReg$(_c, \"Animate\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/recharts/es6/animation/Animate.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/recharts/es6/animation/AnimationManager.js":
/*!*****************************************************************!*\
  !*** ./node_modules/recharts/es6/animation/AnimationManager.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAnimateManager: () => (/* binding */ createAnimateManager)\n/* harmony export */ });\n/**\n * Represents a single item in the ReactSmoothQueue.\n * The item can be:\n * - A number representing a delay in milliseconds.\n * - An object representing a style change\n * - A StartAnimationFunction that starts eased transition and calls different render\n *      because of course in Recharts we have to have three ways to do everything\n * - An arbitrary function to be executed\n */ function createAnimateManager(timeoutController) {\n    var currStyle = {};\n    var handleChange = ()=>null;\n    var shouldStop = false;\n    var cancelTimeout = null;\n    var setStyle = (_style)=>{\n        if (shouldStop) {\n            return;\n        }\n        if (Array.isArray(_style)) {\n            if (!_style.length) {\n                return;\n            }\n            var styles = _style;\n            var [curr, ...restStyles] = styles;\n            if (typeof curr === 'number') {\n                cancelTimeout = timeoutController.setTimeout(setStyle.bind(null, restStyles), curr);\n                return;\n            }\n            setStyle(curr);\n            cancelTimeout = timeoutController.setTimeout(setStyle.bind(null, restStyles));\n            return;\n        }\n        if (typeof _style === 'object') {\n            currStyle = _style;\n            handleChange(currStyle);\n        }\n        if (typeof _style === 'function') {\n            _style();\n        }\n    };\n    return {\n        stop: ()=>{\n            shouldStop = true;\n        },\n        start: (style)=>{\n            shouldStop = false;\n            if (cancelTimeout) {\n                cancelTimeout();\n                cancelTimeout = null;\n            }\n            setStyle(style);\n        },\n        subscribe: (_handleChange)=>{\n            handleChange = _handleChange;\n            return ()=>{\n                handleChange = ()=>null;\n            };\n        },\n        getTimeoutController: ()=>timeoutController\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWNoYXJ0cy9lczYvYW5pbWF0aW9uL0FuaW1hdGlvbk1hbmFnZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7OztDQVFDLEdBRU0sU0FBU0EscUJBQXFCQyxpQkFBaUI7SUFDcEQsSUFBSUMsWUFBWSxDQUFDO0lBQ2pCLElBQUlDLGVBQWUsSUFBTTtJQUN6QixJQUFJQyxhQUFhO0lBQ2pCLElBQUlDLGdCQUFnQjtJQUNwQixJQUFJQyxXQUFXQyxDQUFBQTtRQUNiLElBQUlILFlBQVk7WUFDZDtRQUNGO1FBQ0EsSUFBSUksTUFBTUMsT0FBTyxDQUFDRixTQUFTO1lBQ3pCLElBQUksQ0FBQ0EsT0FBT0csTUFBTSxFQUFFO2dCQUNsQjtZQUNGO1lBQ0EsSUFBSUMsU0FBU0o7WUFDYixJQUFJLENBQUNLLE1BQU0sR0FBR0MsV0FBVyxHQUFHRjtZQUM1QixJQUFJLE9BQU9DLFNBQVMsVUFBVTtnQkFDNUJQLGdCQUFnQkosa0JBQWtCYSxVQUFVLENBQUNSLFNBQVNTLElBQUksQ0FBQyxNQUFNRixhQUFhRDtnQkFDOUU7WUFDRjtZQUNBTixTQUFTTTtZQUNUUCxnQkFBZ0JKLGtCQUFrQmEsVUFBVSxDQUFDUixTQUFTUyxJQUFJLENBQUMsTUFBTUY7WUFDakU7UUFDRjtRQUNBLElBQUksT0FBT04sV0FBVyxVQUFVO1lBQzlCTCxZQUFZSztZQUNaSixhQUFhRDtRQUNmO1FBQ0EsSUFBSSxPQUFPSyxXQUFXLFlBQVk7WUFDaENBO1FBQ0Y7SUFDRjtJQUNBLE9BQU87UUFDTFMsTUFBTTtZQUNKWixhQUFhO1FBQ2Y7UUFDQWEsT0FBT0MsQ0FBQUE7WUFDTGQsYUFBYTtZQUNiLElBQUlDLGVBQWU7Z0JBQ2pCQTtnQkFDQUEsZ0JBQWdCO1lBQ2xCO1lBQ0FDLFNBQVNZO1FBQ1g7UUFDQUMsV0FBV0MsQ0FBQUE7WUFDVGpCLGVBQWVpQjtZQUNmLE9BQU87Z0JBQ0xqQixlQUFlLElBQU07WUFDdkI7UUFDRjtRQUNBa0Isc0JBQXNCLElBQU1wQjtJQUM5QjtBQUNGIiwic291cmNlcyI6WyIvcm9vdC9oeXBlcnN5bmMtY2xpZW50LXB5dGhvbi9mcm9udGVuZC1kZXBsb3ltZW50L25vZGVfbW9kdWxlcy9yZWNoYXJ0cy9lczYvYW5pbWF0aW9uL0FuaW1hdGlvbk1hbmFnZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXByZXNlbnRzIGEgc2luZ2xlIGl0ZW0gaW4gdGhlIFJlYWN0U21vb3RoUXVldWUuXG4gKiBUaGUgaXRlbSBjYW4gYmU6XG4gKiAtIEEgbnVtYmVyIHJlcHJlc2VudGluZyBhIGRlbGF5IGluIG1pbGxpc2Vjb25kcy5cbiAqIC0gQW4gb2JqZWN0IHJlcHJlc2VudGluZyBhIHN0eWxlIGNoYW5nZVxuICogLSBBIFN0YXJ0QW5pbWF0aW9uRnVuY3Rpb24gdGhhdCBzdGFydHMgZWFzZWQgdHJhbnNpdGlvbiBhbmQgY2FsbHMgZGlmZmVyZW50IHJlbmRlclxuICogICAgICBiZWNhdXNlIG9mIGNvdXJzZSBpbiBSZWNoYXJ0cyB3ZSBoYXZlIHRvIGhhdmUgdGhyZWUgd2F5cyB0byBkbyBldmVyeXRoaW5nXG4gKiAtIEFuIGFyYml0cmFyeSBmdW5jdGlvbiB0byBiZSBleGVjdXRlZFxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVBbmltYXRlTWFuYWdlcih0aW1lb3V0Q29udHJvbGxlcikge1xuICB2YXIgY3VyclN0eWxlID0ge307XG4gIHZhciBoYW5kbGVDaGFuZ2UgPSAoKSA9PiBudWxsO1xuICB2YXIgc2hvdWxkU3RvcCA9IGZhbHNlO1xuICB2YXIgY2FuY2VsVGltZW91dCA9IG51bGw7XG4gIHZhciBzZXRTdHlsZSA9IF9zdHlsZSA9PiB7XG4gICAgaWYgKHNob3VsZFN0b3ApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoX3N0eWxlKSkge1xuICAgICAgaWYgKCFfc3R5bGUubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHZhciBzdHlsZXMgPSBfc3R5bGU7XG4gICAgICB2YXIgW2N1cnIsIC4uLnJlc3RTdHlsZXNdID0gc3R5bGVzO1xuICAgICAgaWYgKHR5cGVvZiBjdXJyID09PSAnbnVtYmVyJykge1xuICAgICAgICBjYW5jZWxUaW1lb3V0ID0gdGltZW91dENvbnRyb2xsZXIuc2V0VGltZW91dChzZXRTdHlsZS5iaW5kKG51bGwsIHJlc3RTdHlsZXMpLCBjdXJyKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgc2V0U3R5bGUoY3Vycik7XG4gICAgICBjYW5jZWxUaW1lb3V0ID0gdGltZW91dENvbnRyb2xsZXIuc2V0VGltZW91dChzZXRTdHlsZS5iaW5kKG51bGwsIHJlc3RTdHlsZXMpKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBfc3R5bGUgPT09ICdvYmplY3QnKSB7XG4gICAgICBjdXJyU3R5bGUgPSBfc3R5bGU7XG4gICAgICBoYW5kbGVDaGFuZ2UoY3VyclN0eWxlKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBfc3R5bGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIF9zdHlsZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHtcbiAgICBzdG9wOiAoKSA9PiB7XG4gICAgICBzaG91bGRTdG9wID0gdHJ1ZTtcbiAgICB9LFxuICAgIHN0YXJ0OiBzdHlsZSA9PiB7XG4gICAgICBzaG91bGRTdG9wID0gZmFsc2U7XG4gICAgICBpZiAoY2FuY2VsVGltZW91dCkge1xuICAgICAgICBjYW5jZWxUaW1lb3V0KCk7XG4gICAgICAgIGNhbmNlbFRpbWVvdXQgPSBudWxsO1xuICAgICAgfVxuICAgICAgc2V0U3R5bGUoc3R5bGUpO1xuICAgIH0sXG4gICAgc3Vic2NyaWJlOiBfaGFuZGxlQ2hhbmdlID0+IHtcbiAgICAgIGhhbmRsZUNoYW5nZSA9IF9oYW5kbGVDaGFuZ2U7XG4gICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICBoYW5kbGVDaGFuZ2UgPSAoKSA9PiBudWxsO1xuICAgICAgfTtcbiAgICB9LFxuICAgIGdldFRpbWVvdXRDb250cm9sbGVyOiAoKSA9PiB0aW1lb3V0Q29udHJvbGxlclxuICB9O1xufSJdLCJuYW1lcyI6WyJjcmVhdGVBbmltYXRlTWFuYWdlciIsInRpbWVvdXRDb250cm9sbGVyIiwiY3VyclN0eWxlIiwiaGFuZGxlQ2hhbmdlIiwic2hvdWxkU3RvcCIsImNhbmNlbFRpbWVvdXQiLCJzZXRTdHlsZSIsIl9zdHlsZSIsIkFycmF5IiwiaXNBcnJheSIsImxlbmd0aCIsInN0eWxlcyIsImN1cnIiLCJyZXN0U3R5bGVzIiwic2V0VGltZW91dCIsImJpbmQiLCJzdG9wIiwic3RhcnQiLCJzdHlsZSIsInN1YnNjcmliZSIsIl9oYW5kbGVDaGFuZ2UiLCJnZXRUaW1lb3V0Q29udHJvbGxlciJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/recharts/es6/animation/AnimationManager.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/recharts/es6/animation/configUpdate.js":
/*!*************************************************************!*\
  !*** ./node_modules/recharts/es6/animation/configUpdate.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alpha: () => (/* binding */ alpha),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"(app-pages-browser)/./node_modules/recharts/es6/animation/util.js\");\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n\nvar alpha = (begin, end, k)=>begin + (end - begin) * k;\nvar needContinue = (_ref)=>{\n    var { from, to } = _ref;\n    return from !== to;\n};\n/*\n * @description: cal new from value and velocity in each stepper\n * @return: { [styleProperty]: { from, to, velocity } }\n */ var calStepperVals = (easing, preVals, steps)=>{\n    var nextStepVals = (0,_util__WEBPACK_IMPORTED_MODULE_0__.mapObject)((key, val)=>{\n        if (needContinue(val)) {\n            var [newX, newV] = easing(val.from, val.to, val.velocity);\n            return _objectSpread(_objectSpread({}, val), {}, {\n                from: newX,\n                velocity: newV\n            });\n        }\n        return val;\n    }, preVals);\n    if (steps < 1) {\n        return (0,_util__WEBPACK_IMPORTED_MODULE_0__.mapObject)((key, val)=>{\n            if (needContinue(val)) {\n                return _objectSpread(_objectSpread({}, val), {}, {\n                    velocity: alpha(val.velocity, nextStepVals[key].velocity, steps),\n                    from: alpha(val.from, nextStepVals[key].from, steps)\n                });\n            }\n            return val;\n        }, preVals);\n    }\n    return calStepperVals(easing, nextStepVals, steps - 1);\n};\nfunction createStepperUpdate(from, to, easing, interKeys, render, timeoutController) {\n    var preTime;\n    var stepperStyle = interKeys.reduce((res, key)=>_objectSpread(_objectSpread({}, res), {}, {\n            [key]: {\n                from: from[key],\n                velocity: 0,\n                to: to[key]\n            }\n        }), {});\n    var getCurrStyle = ()=>(0,_util__WEBPACK_IMPORTED_MODULE_0__.mapObject)((key, val)=>val.from, stepperStyle);\n    var shouldStopAnimation = ()=>!Object.values(stepperStyle).filter(needContinue).length;\n    var stopAnimation = null;\n    var stepperUpdate = (now)=>{\n        if (!preTime) {\n            preTime = now;\n        }\n        var deltaTime = now - preTime;\n        var steps = deltaTime / easing.dt;\n        stepperStyle = calStepperVals(easing, stepperStyle, steps);\n        // get union set and add compatible prefix\n        render(_objectSpread(_objectSpread(_objectSpread({}, from), to), getCurrStyle()));\n        preTime = now;\n        if (!shouldStopAnimation()) {\n            stopAnimation = timeoutController.setTimeout(stepperUpdate);\n        }\n    };\n    // return start animation method\n    return ()=>{\n        stopAnimation = timeoutController.setTimeout(stepperUpdate);\n        // return stop animation method\n        return ()=>{\n            stopAnimation();\n        };\n    };\n}\nfunction createTimingUpdate(from, to, easing, duration, interKeys, render, timeoutController) {\n    var stopAnimation = null;\n    var timingStyle = interKeys.reduce((res, key)=>_objectSpread(_objectSpread({}, res), {}, {\n            [key]: [\n                from[key],\n                to[key]\n            ]\n        }), {});\n    var beginTime;\n    var timingUpdate = (now)=>{\n        if (!beginTime) {\n            beginTime = now;\n        }\n        var t = (now - beginTime) / duration;\n        var currStyle = (0,_util__WEBPACK_IMPORTED_MODULE_0__.mapObject)((key, val)=>alpha(...val, easing(t)), timingStyle);\n        // get union set and add compatible prefix\n        render(_objectSpread(_objectSpread(_objectSpread({}, from), to), currStyle));\n        if (t < 1) {\n            stopAnimation = timeoutController.setTimeout(timingUpdate);\n        } else {\n            var finalStyle = (0,_util__WEBPACK_IMPORTED_MODULE_0__.mapObject)((key, val)=>alpha(...val, easing(1)), timingStyle);\n            render(_objectSpread(_objectSpread(_objectSpread({}, from), to), finalStyle));\n        }\n    };\n    // return start animation method\n    return ()=>{\n        stopAnimation = timeoutController.setTimeout(timingUpdate);\n        // return stop animation method\n        return ()=>{\n            stopAnimation();\n        };\n    };\n}\n// configure update function\n// eslint-disable-next-line import/no-default-export\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((from, to, easing, duration, render, timeoutController)=>{\n    var interKeys = (0,_util__WEBPACK_IMPORTED_MODULE_0__.getIntersectionKeys)(from, to);\n    return easing.isStepper === true ? createStepperUpdate(from, to, easing, interKeys, render, timeoutController) : createTimingUpdate(from, to, easing, duration, interKeys, render, timeoutController);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/recharts/es6/animation/configUpdate.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/recharts/es6/animation/easing.js":
/*!*******************************************************!*\
  !*** ./node_modules/recharts/es6/animation/easing.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACCURACY: () => (/* binding */ ACCURACY),\n/* harmony export */   configBezier: () => (/* binding */ configBezier),\n/* harmony export */   configEasing: () => (/* binding */ configEasing),\n/* harmony export */   configSpring: () => (/* binding */ configSpring)\n/* harmony export */ });\nvar ACCURACY = 1e-4;\nvar cubicBezierFactor = (c1, c2)=>[\n        0,\n        3 * c1,\n        3 * c2 - 6 * c1,\n        3 * c1 - 3 * c2 + 1\n    ];\nvar evaluatePolynomial = (params, t)=>params.map((param, i)=>param * t ** i).reduce((pre, curr)=>pre + curr);\nvar cubicBezier = (c1, c2)=>(t)=>{\n        var params = cubicBezierFactor(c1, c2);\n        return evaluatePolynomial(params, t);\n    };\nvar derivativeCubicBezier = (c1, c2)=>(t)=>{\n        var params = cubicBezierFactor(c1, c2);\n        var newParams = [\n            ...params.map((param, i)=>param * i).slice(1),\n            0\n        ];\n        return evaluatePolynomial(newParams, t);\n    };\n// calculate cubic-bezier using Newton's method\nvar configBezier = function configBezier() {\n    var x1, x2, y1, y2;\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    if (args.length === 1) {\n        switch(args[0]){\n            case 'linear':\n                [x1, y1, x2, y2] = [\n                    0.0,\n                    0.0,\n                    1.0,\n                    1.0\n                ];\n                break;\n            case 'ease':\n                [x1, y1, x2, y2] = [\n                    0.25,\n                    0.1,\n                    0.25,\n                    1.0\n                ];\n                break;\n            case 'ease-in':\n                [x1, y1, x2, y2] = [\n                    0.42,\n                    0.0,\n                    1.0,\n                    1.0\n                ];\n                break;\n            case 'ease-out':\n                [x1, y1, x2, y2] = [\n                    0.42,\n                    0.0,\n                    0.58,\n                    1.0\n                ];\n                break;\n            case 'ease-in-out':\n                [x1, y1, x2, y2] = [\n                    0.0,\n                    0.0,\n                    0.58,\n                    1.0\n                ];\n                break;\n            default:\n                {\n                    var easing = args[0].split('(');\n                    if (easing[0] === 'cubic-bezier' && easing[1].split(')')[0].split(',').length === 4) {\n                        [x1, y1, x2, y2] = easing[1].split(')')[0].split(',').map((x)=>parseFloat(x));\n                    }\n                }\n        }\n    } else if (args.length === 4) {\n        [x1, y1, x2, y2] = args;\n    }\n    var curveX = cubicBezier(x1, x2);\n    var curveY = cubicBezier(y1, y2);\n    var derCurveX = derivativeCubicBezier(x1, x2);\n    var rangeValue = (value)=>{\n        if (value > 1) {\n            return 1;\n        }\n        if (value < 0) {\n            return 0;\n        }\n        return value;\n    };\n    var bezier = (_t)=>{\n        var t = _t > 1 ? 1 : _t;\n        var x = t;\n        for(var i = 0; i < 8; ++i){\n            var evalT = curveX(x) - t;\n            var derVal = derCurveX(x);\n            if (Math.abs(evalT - t) < ACCURACY || derVal < ACCURACY) {\n                return curveY(x);\n            }\n            x = rangeValue(x - evalT / derVal);\n        }\n        return curveY(x);\n    };\n    bezier.isStepper = false;\n    return bezier;\n};\nvar configSpring = function configSpring() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var { stiff = 100, damping = 8, dt = 17 } = config;\n    var stepper = (currX, destX, currV)=>{\n        var FSpring = -(currX - destX) * stiff;\n        var FDamping = currV * damping;\n        var newV = currV + (FSpring - FDamping) * dt / 1000;\n        var newX = currV * dt / 1000 + currX;\n        if (Math.abs(newX - destX) < ACCURACY && Math.abs(newV) < ACCURACY) {\n            return [\n                destX,\n                0\n            ];\n        }\n        return [\n            newX,\n            newV\n        ];\n    };\n    stepper.isStepper = true;\n    stepper.dt = dt;\n    return stepper;\n};\nvar configEasing = (easing)=>{\n    if (typeof easing === 'string') {\n        switch(easing){\n            case 'ease':\n            case 'ease-in-out':\n            case 'ease-out':\n            case 'ease-in':\n            case 'linear':\n                return configBezier(easing);\n            case 'spring':\n                return configSpring();\n            default:\n                if (easing.split('(')[0] === 'cubic-bezier') {\n                    return configBezier(easing);\n                }\n        }\n    }\n    if (typeof easing === 'function') {\n        return easing;\n    }\n    return null;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/recharts/es6/animation/easing.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/recharts/es6/animation/timeoutController.js":
/*!******************************************************************!*\
  !*** ./node_modules/recharts/es6/animation/timeoutController.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestAnimationFrameTimeoutController: () => (/* binding */ RequestAnimationFrameTimeoutController)\n/* harmony export */ });\n/**\n * Callback type for the timeout function.\n * Receives current time in milliseconds as an argument.\n */ /**\n * A function that, when called, cancels the timeout.\n */ class RequestAnimationFrameTimeoutController {\n    setTimeout(callback) {\n        var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var startTime = performance.now();\n        var requestId = null;\n        var executeCallback = (now)=>{\n            if (now - startTime >= delay) {\n                callback(now);\n            // tests fail without the extra if, even when five lines below it's not needed\n            // TODO finish transition to the mocked timeout controller and then remove this condition\n            } else if (typeof requestAnimationFrame === 'function') {\n                requestId = requestAnimationFrame(executeCallback);\n            }\n        };\n        requestId = requestAnimationFrame(executeCallback);\n        return ()=>{\n            cancelAnimationFrame(requestId);\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWNoYXJ0cy9lczYvYW5pbWF0aW9uL3RpbWVvdXRDb250cm9sbGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7O0NBR0MsR0FFRDs7Q0FFQyxHQUVNLE1BQU1BO0lBQ1hDLFdBQVdDLFFBQVEsRUFBRTtRQUNuQixJQUFJQyxRQUFRQyxVQUFVQyxNQUFNLEdBQUcsS0FBS0QsU0FBUyxDQUFDLEVBQUUsS0FBS0UsWUFBWUYsU0FBUyxDQUFDLEVBQUUsR0FBRztRQUNoRixJQUFJRyxZQUFZQyxZQUFZQyxHQUFHO1FBQy9CLElBQUlDLFlBQVk7UUFDaEIsSUFBSUMsa0JBQWtCRixDQUFBQTtZQUNwQixJQUFJQSxNQUFNRixhQUFhSixPQUFPO2dCQUM1QkQsU0FBU087WUFDVCw4RUFBOEU7WUFDOUUseUZBQXlGO1lBQzNGLE9BQU8sSUFBSSxPQUFPRywwQkFBMEIsWUFBWTtnQkFDdERGLFlBQVlFLHNCQUFzQkQ7WUFDcEM7UUFDRjtRQUNBRCxZQUFZRSxzQkFBc0JEO1FBQ2xDLE9BQU87WUFDTEUscUJBQXFCSDtRQUN2QjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIi9yb290L2h5cGVyc3luYy1jbGllbnQtcHl0aG9uL2Zyb250ZW5kLWRlcGxveW1lbnQvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi9hbmltYXRpb24vdGltZW91dENvbnRyb2xsZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDYWxsYmFjayB0eXBlIGZvciB0aGUgdGltZW91dCBmdW5jdGlvbi5cbiAqIFJlY2VpdmVzIGN1cnJlbnQgdGltZSBpbiBtaWxsaXNlY29uZHMgYXMgYW4gYXJndW1lbnQuXG4gKi9cblxuLyoqXG4gKiBBIGZ1bmN0aW9uIHRoYXQsIHdoZW4gY2FsbGVkLCBjYW5jZWxzIHRoZSB0aW1lb3V0LlxuICovXG5cbmV4cG9ydCBjbGFzcyBSZXF1ZXN0QW5pbWF0aW9uRnJhbWVUaW1lb3V0Q29udHJvbGxlciB7XG4gIHNldFRpbWVvdXQoY2FsbGJhY2spIHtcbiAgICB2YXIgZGVsYXkgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IDA7XG4gICAgdmFyIHN0YXJ0VGltZSA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgIHZhciByZXF1ZXN0SWQgPSBudWxsO1xuICAgIHZhciBleGVjdXRlQ2FsbGJhY2sgPSBub3cgPT4ge1xuICAgICAgaWYgKG5vdyAtIHN0YXJ0VGltZSA+PSBkZWxheSkge1xuICAgICAgICBjYWxsYmFjayhub3cpO1xuICAgICAgICAvLyB0ZXN0cyBmYWlsIHdpdGhvdXQgdGhlIGV4dHJhIGlmLCBldmVuIHdoZW4gZml2ZSBsaW5lcyBiZWxvdyBpdCdzIG5vdCBuZWVkZWRcbiAgICAgICAgLy8gVE9ETyBmaW5pc2ggdHJhbnNpdGlvbiB0byB0aGUgbW9ja2VkIHRpbWVvdXQgY29udHJvbGxlciBhbmQgdGhlbiByZW1vdmUgdGhpcyBjb25kaXRpb25cbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHJlcXVlc3RBbmltYXRpb25GcmFtZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXF1ZXN0SWQgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZXhlY3V0ZUNhbGxiYWNrKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHJlcXVlc3RJZCA9IHJlcXVlc3RBbmltYXRpb25GcmFtZShleGVjdXRlQ2FsbGJhY2spO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBjYW5jZWxBbmltYXRpb25GcmFtZShyZXF1ZXN0SWQpO1xuICAgIH07XG4gIH1cbn0iXSwibmFtZXMiOlsiUmVxdWVzdEFuaW1hdGlvbkZyYW1lVGltZW91dENvbnRyb2xsZXIiLCJzZXRUaW1lb3V0IiwiY2FsbGJhY2siLCJkZWxheSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsInN0YXJ0VGltZSIsInBlcmZvcm1hbmNlIiwibm93IiwicmVxdWVzdElkIiwiZXhlY3V0ZUNhbGxiYWNrIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/recharts/es6/animation/timeoutController.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/recharts/es6/animation/util.js":
/*!*****************************************************!*\
  !*** ./node_modules/recharts/es6/animation/util.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDashCase: () => (/* binding */ getDashCase),\n/* harmony export */   getIntersectionKeys: () => (/* binding */ getIntersectionKeys),\n/* harmony export */   getTransitionVal: () => (/* binding */ getTransitionVal),\n/* harmony export */   mapObject: () => (/* binding */ mapObject)\n/* harmony export */ });\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n/*\n * @description: convert camel case to dash case\n * string => string\n */ var getDashCase = (name)=>name.replace(/([A-Z])/g, (v)=>\"-\".concat(v.toLowerCase()));\nvar getTransitionVal = (props, duration, easing)=>props.map((prop)=>\"\".concat(getDashCase(prop), \" \").concat(duration, \"ms \").concat(easing)).join(',');\n/**\n * Finds the intersection of keys between two objects\n * @param {object} preObj previous object\n * @param {object} nextObj next object\n * @returns an array of keys that exist in both objects\n */ var getIntersectionKeys = (preObj, nextObj)=>[\n        Object.keys(preObj),\n        Object.keys(nextObj)\n    ].reduce((a, b)=>a.filter((c)=>b.includes(c)));\n/**\n * Maps an object to another object\n * @param {function} fn function to map\n * @param {object} obj object to map\n * @returns mapped object\n */ var mapObject = (fn, obj)=>Object.keys(obj).reduce((res, key)=>_objectSpread(_objectSpread({}, res), {}, {\n            [key]: fn(key, obj[key])\n        }), {});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWNoYXJ0cy9lczYvYW5pbWF0aW9uL3V0aWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLFNBQVNBLFFBQVFDLENBQUMsRUFBRUMsQ0FBQztJQUFJLElBQUlDLElBQUlDLE9BQU9DLElBQUksQ0FBQ0o7SUFBSSxJQUFJRyxPQUFPRSxxQkFBcUIsRUFBRTtRQUFFLElBQUlDLElBQUlILE9BQU9FLHFCQUFxQixDQUFDTDtRQUFJQyxLQUFNSyxDQUFBQSxJQUFJQSxFQUFFQyxNQUFNLENBQUMsU0FBVU4sQ0FBQztZQUFJLE9BQU9FLE9BQU9LLHdCQUF3QixDQUFDUixHQUFHQyxHQUFHUSxVQUFVO1FBQUUsRUFBQyxHQUFJUCxFQUFFUSxJQUFJLENBQUNDLEtBQUssQ0FBQ1QsR0FBR0k7SUFBSTtJQUFFLE9BQU9KO0FBQUc7QUFDOVAsU0FBU1UsY0FBY1osQ0FBQztJQUFJLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJWSxVQUFVQyxNQUFNLEVBQUViLElBQUs7UUFBRSxJQUFJQyxJQUFJLFFBQVFXLFNBQVMsQ0FBQ1osRUFBRSxHQUFHWSxTQUFTLENBQUNaLEVBQUUsR0FBRyxDQUFDO1FBQUdBLElBQUksSUFBSUYsUUFBUUksT0FBT0QsSUFBSSxDQUFDLEdBQUdhLE9BQU8sQ0FBQyxTQUFVZCxDQUFDO1lBQUllLGdCQUFnQmhCLEdBQUdDLEdBQUdDLENBQUMsQ0FBQ0QsRUFBRTtRQUFHLEtBQUtFLE9BQU9jLHlCQUF5QixHQUFHZCxPQUFPZSxnQkFBZ0IsQ0FBQ2xCLEdBQUdHLE9BQU9jLHlCQUF5QixDQUFDZixNQUFNSCxRQUFRSSxPQUFPRCxJQUFJYSxPQUFPLENBQUMsU0FBVWQsQ0FBQztZQUFJRSxPQUFPZ0IsY0FBYyxDQUFDbkIsR0FBR0MsR0FBR0UsT0FBT0ssd0JBQXdCLENBQUNOLEdBQUdEO1FBQUs7SUFBSTtJQUFFLE9BQU9EO0FBQUc7QUFDdGIsU0FBU2dCLGdCQUFnQmhCLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDO0lBQUksT0FBTyxDQUFDRCxJQUFJbUIsZUFBZW5CLEVBQUMsS0FBTUQsSUFBSUcsT0FBT2dCLGNBQWMsQ0FBQ25CLEdBQUdDLEdBQUc7UUFBRW9CLE9BQU9uQjtRQUFHTyxZQUFZLENBQUM7UUFBR2EsY0FBYyxDQUFDO1FBQUdDLFVBQVUsQ0FBQztJQUFFLEtBQUt2QixDQUFDLENBQUNDLEVBQUUsR0FBR0MsR0FBR0Y7QUFBRztBQUNuTCxTQUFTb0IsZUFBZWxCLENBQUM7SUFBSSxJQUFJc0IsSUFBSUMsYUFBYXZCLEdBQUc7SUFBVyxPQUFPLFlBQVksT0FBT3NCLElBQUlBLElBQUlBLElBQUk7QUFBSTtBQUMxRyxTQUFTQyxhQUFhdkIsQ0FBQyxFQUFFRCxDQUFDO0lBQUksSUFBSSxZQUFZLE9BQU9DLEtBQUssQ0FBQ0EsR0FBRyxPQUFPQTtJQUFHLElBQUlGLElBQUlFLENBQUMsQ0FBQ3dCLE9BQU9DLFdBQVcsQ0FBQztJQUFFLElBQUksS0FBSyxNQUFNM0IsR0FBRztRQUFFLElBQUl3QixJQUFJeEIsRUFBRTRCLElBQUksQ0FBQzFCLEdBQUdELEtBQUs7UUFBWSxJQUFJLFlBQVksT0FBT3VCLEdBQUcsT0FBT0E7UUFBRyxNQUFNLElBQUlLLFVBQVU7SUFBaUQ7SUFBRSxPQUFPLENBQUMsYUFBYTVCLElBQUk2QixTQUFTQyxNQUFLLEVBQUc3QjtBQUFJO0FBQ3ZUOzs7Q0FHQyxHQUNNLElBQUk4QixjQUFjQyxDQUFBQSxPQUFRQSxLQUFLQyxPQUFPLENBQUMsWUFBWUMsQ0FBQUEsSUFBSyxJQUFJQyxNQUFNLENBQUNELEVBQUVFLFdBQVcsS0FBSztBQUNyRixJQUFJQyxtQkFBbUIsQ0FBQ0MsT0FBT0MsVUFBVUMsU0FBV0YsTUFBTUcsR0FBRyxDQUFDQyxDQUFBQSxPQUFRLEdBQUdQLE1BQU0sQ0FBQ0osWUFBWVcsT0FBTyxLQUFLUCxNQUFNLENBQUNJLFVBQVUsT0FBT0osTUFBTSxDQUFDSyxTQUFTRyxJQUFJLENBQUMsS0FBSztBQUVqSzs7Ozs7Q0FLQyxHQUNNLElBQUlDLHNCQUFzQixDQUFDQyxRQUFRQyxVQUFZO1FBQUM1QyxPQUFPQyxJQUFJLENBQUMwQztRQUFTM0MsT0FBT0MsSUFBSSxDQUFDMkM7S0FBUyxDQUFDQyxNQUFNLENBQUMsQ0FBQ0MsR0FBR0MsSUFBTUQsRUFBRTFDLE1BQU0sQ0FBQzRDLENBQUFBLElBQUtELEVBQUVFLFFBQVEsQ0FBQ0QsS0FBSztBQUVqSjs7Ozs7Q0FLQyxHQUNNLElBQUlFLFlBQVksQ0FBQ0MsSUFBSUMsTUFBUXBELE9BQU9DLElBQUksQ0FBQ21ELEtBQUtQLE1BQU0sQ0FBQyxDQUFDUSxLQUFLQyxNQUFRN0MsY0FBY0EsY0FBYyxDQUFDLEdBQUc0QyxNQUFNLENBQUMsR0FBRztZQUNsSCxDQUFDQyxJQUFJLEVBQUVILEdBQUdHLEtBQUtGLEdBQUcsQ0FBQ0UsSUFBSTtRQUN6QixJQUFJLENBQUMsR0FBRyIsInNvdXJjZXMiOlsiL3Jvb3QvaHlwZXJzeW5jLWNsaWVudC1weXRob24vZnJvbnRlbmQtZGVwbG95bWVudC9ub2RlX21vZHVsZXMvcmVjaGFydHMvZXM2L2FuaW1hdGlvbi91dGlsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIG93bktleXMoZSwgcikgeyB2YXIgdCA9IE9iamVjdC5rZXlzKGUpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgbyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7IHIgJiYgKG8gPSBvLmZpbHRlcihmdW5jdGlvbiAocikgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLCByKS5lbnVtZXJhYmxlOyB9KSksIHQucHVzaC5hcHBseSh0LCBvKTsgfSByZXR1cm4gdDsgfVxuZnVuY3Rpb24gX29iamVjdFNwcmVhZChlKSB7IGZvciAodmFyIHIgPSAxOyByIDwgYXJndW1lbnRzLmxlbmd0aDsgcisrKSB7IHZhciB0ID0gbnVsbCAhPSBhcmd1bWVudHNbcl0gPyBhcmd1bWVudHNbcl0gOiB7fTsgciAlIDIgPyBvd25LZXlzKE9iamVjdCh0KSwgITApLmZvckVhY2goZnVuY3Rpb24gKHIpIHsgX2RlZmluZVByb3BlcnR5KGUsIHIsIHRbcl0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnModCkpIDogb3duS2V5cyhPYmplY3QodCkpLmZvckVhY2goZnVuY3Rpb24gKHIpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIHIsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCwgcikpOyB9KTsgfSByZXR1cm4gZTsgfVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KGUsIHIsIHQpIHsgcmV0dXJuIChyID0gX3RvUHJvcGVydHlLZXkocikpIGluIGUgPyBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgciwgeyB2YWx1ZTogdCwgZW51bWVyYWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAsIHdyaXRhYmxlOiAhMCB9KSA6IGVbcl0gPSB0LCBlOyB9XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleSh0KSB7IHZhciBpID0gX3RvUHJpbWl0aXZlKHQsIFwic3RyaW5nXCIpOyByZXR1cm4gXCJzeW1ib2xcIiA9PSB0eXBlb2YgaSA/IGkgOiBpICsgXCJcIjsgfVxuZnVuY3Rpb24gX3RvUHJpbWl0aXZlKHQsIHIpIHsgaWYgKFwib2JqZWN0XCIgIT0gdHlwZW9mIHQgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gdHlwZW9mIGkpIHJldHVybiBpOyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7IH0gcmV0dXJuIChcInN0cmluZ1wiID09PSByID8gU3RyaW5nIDogTnVtYmVyKSh0KTsgfVxuLypcbiAqIEBkZXNjcmlwdGlvbjogY29udmVydCBjYW1lbCBjYXNlIHRvIGRhc2ggY2FzZVxuICogc3RyaW5nID0+IHN0cmluZ1xuICovXG5leHBvcnQgdmFyIGdldERhc2hDYXNlID0gbmFtZSA9PiBuYW1lLnJlcGxhY2UoLyhbQS1aXSkvZywgdiA9PiBcIi1cIi5jb25jYXQodi50b0xvd2VyQ2FzZSgpKSk7XG5leHBvcnQgdmFyIGdldFRyYW5zaXRpb25WYWwgPSAocHJvcHMsIGR1cmF0aW9uLCBlYXNpbmcpID0+IHByb3BzLm1hcChwcm9wID0+IFwiXCIuY29uY2F0KGdldERhc2hDYXNlKHByb3ApLCBcIiBcIikuY29uY2F0KGR1cmF0aW9uLCBcIm1zIFwiKS5jb25jYXQoZWFzaW5nKSkuam9pbignLCcpO1xuXG4vKipcbiAqIEZpbmRzIHRoZSBpbnRlcnNlY3Rpb24gb2Yga2V5cyBiZXR3ZWVuIHR3byBvYmplY3RzXG4gKiBAcGFyYW0ge29iamVjdH0gcHJlT2JqIHByZXZpb3VzIG9iamVjdFxuICogQHBhcmFtIHtvYmplY3R9IG5leHRPYmogbmV4dCBvYmplY3RcbiAqIEByZXR1cm5zIGFuIGFycmF5IG9mIGtleXMgdGhhdCBleGlzdCBpbiBib3RoIG9iamVjdHNcbiAqL1xuZXhwb3J0IHZhciBnZXRJbnRlcnNlY3Rpb25LZXlzID0gKHByZU9iaiwgbmV4dE9iaikgPT4gW09iamVjdC5rZXlzKHByZU9iaiksIE9iamVjdC5rZXlzKG5leHRPYmopXS5yZWR1Y2UoKGEsIGIpID0+IGEuZmlsdGVyKGMgPT4gYi5pbmNsdWRlcyhjKSkpO1xuXG4vKipcbiAqIE1hcHMgYW4gb2JqZWN0IHRvIGFub3RoZXIgb2JqZWN0XG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBmbiBmdW5jdGlvbiB0byBtYXBcbiAqIEBwYXJhbSB7b2JqZWN0fSBvYmogb2JqZWN0IHRvIG1hcFxuICogQHJldHVybnMgbWFwcGVkIG9iamVjdFxuICovXG5leHBvcnQgdmFyIG1hcE9iamVjdCA9IChmbiwgb2JqKSA9PiBPYmplY3Qua2V5cyhvYmopLnJlZHVjZSgocmVzLCBrZXkpID0+IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgcmVzKSwge30sIHtcbiAgW2tleV06IGZuKGtleSwgb2JqW2tleV0pXG59KSwge30pOyJdLCJuYW1lcyI6WyJvd25LZXlzIiwiZSIsInIiLCJ0IiwiT2JqZWN0Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsIm8iLCJmaWx0ZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwicHVzaCIsImFwcGx5IiwiX29iamVjdFNwcmVhZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsImZvckVhY2giLCJfZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsImRlZmluZVByb3BlcnR5IiwiX3RvUHJvcGVydHlLZXkiLCJ2YWx1ZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiaSIsIl90b1ByaW1pdGl2ZSIsIlN5bWJvbCIsInRvUHJpbWl0aXZlIiwiY2FsbCIsIlR5cGVFcnJvciIsIlN0cmluZyIsIk51bWJlciIsImdldERhc2hDYXNlIiwibmFtZSIsInJlcGxhY2UiLCJ2IiwiY29uY2F0IiwidG9Mb3dlckNhc2UiLCJnZXRUcmFuc2l0aW9uVmFsIiwicHJvcHMiLCJkdXJhdGlvbiIsImVhc2luZyIsIm1hcCIsInByb3AiLCJqb2luIiwiZ2V0SW50ZXJzZWN0aW9uS2V5cyIsInByZU9iaiIsIm5leHRPYmoiLCJyZWR1Y2UiLCJhIiwiYiIsImMiLCJpbmNsdWRlcyIsIm1hcE9iamVjdCIsImZuIiwib2JqIiwicmVzIiwia2V5Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/recharts/es6/animation/util.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/recharts/es6/cartesian/Area.js":
/*!*****************************************************!*\
  !*** ./node_modules/recharts/es6/cartesian/Area.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Area: () => (/* binding */ Area),\n/* harmony export */   computeArea: () => (/* binding */ computeArea),\n/* harmony export */   getBaseValue: () => (/* binding */ getBaseValue)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _shape_Curve__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shape/Curve */ \"(app-pages-browser)/./node_modules/recharts/es6/shape/Curve.js\");\n/* harmony import */ var _shape_Dot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shape/Dot */ \"(app-pages-browser)/./node_modules/recharts/es6/shape/Dot.js\");\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../container/Layer */ \"(app-pages-browser)/./node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _component_LabelList__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../component/LabelList */ \"(app-pages-browser)/./node_modules/recharts/es6/component/LabelList.js\");\n/* harmony import */ var _util_Global__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../util/Global */ \"(app-pages-browser)/./node_modules/recharts/es6/util/Global.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util/DataUtils */ \"(app-pages-browser)/./node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ChartUtils */ \"(app-pages-browser)/./node_modules/recharts/es6/util/ChartUtils.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/ReactUtils */ \"(app-pages-browser)/./node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _component_ActivePoints__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../component/ActivePoints */ \"(app-pages-browser)/./node_modules/recharts/es6/component/ActivePoints.js\");\n/* harmony import */ var _state_SetTooltipEntrySettings__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../state/SetTooltipEntrySettings */ \"(app-pages-browser)/./node_modules/recharts/es6/state/SetTooltipEntrySettings.js\");\n/* harmony import */ var _context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../context/CartesianGraphicalItemContext */ \"(app-pages-browser)/./node_modules/recharts/es6/context/CartesianGraphicalItemContext.js\");\n/* harmony import */ var _GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./GraphicalItemClipPath */ \"(app-pages-browser)/./node_modules/recharts/es6/cartesian/GraphicalItemClipPath.js\");\n/* harmony import */ var _state_selectors_areaSelectors__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../state/selectors/areaSelectors */ \"(app-pages-browser)/./node_modules/recharts/es6/state/selectors/areaSelectors.js\");\n/* harmony import */ var _context_PanoramaContext__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../context/PanoramaContext */ \"(app-pages-browser)/./node_modules/recharts/es6/context/PanoramaContext.js\");\n/* harmony import */ var _context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../context/chartLayoutContext */ \"(app-pages-browser)/./node_modules/recharts/es6/context/chartLayoutContext.js\");\n/* harmony import */ var _state_selectors_selectors__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../state/selectors/selectors */ \"(app-pages-browser)/./node_modules/recharts/es6/state/selectors/selectors.js\");\n/* harmony import */ var _state_SetLegendPayload__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../state/SetLegendPayload */ \"(app-pages-browser)/./node_modules/recharts/es6/state/SetLegendPayload.js\");\n/* harmony import */ var _state_hooks__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../state/hooks */ \"(app-pages-browser)/./node_modules/recharts/es6/state/hooks.js\");\n/* harmony import */ var _util_useAnimationId__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../util/useAnimationId */ \"(app-pages-browser)/./node_modules/recharts/es6/util/useAnimationId.js\");\n/* harmony import */ var _util_resolveDefaultProps__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../util/resolveDefaultProps */ \"(app-pages-browser)/./node_modules/recharts/es6/util/resolveDefaultProps.js\");\n/* harmony import */ var _util_isWellBehavedNumber__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/isWellBehavedNumber */ \"(app-pages-browser)/./node_modules/recharts/es6/util/isWellBehavedNumber.js\");\n/* harmony import */ var _animation_Animate__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../animation/Animate */ \"(app-pages-browser)/./node_modules/recharts/es6/animation/Animate.js\");\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../hooks */ \"(app-pages-browser)/./node_modules/recharts/es6/hooks.js\");\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\nvar _excluded = [\n    \"layout\",\n    \"type\",\n    \"stroke\",\n    \"connectNulls\",\n    \"isRange\"\n], _excluded2 = [\n    \"activeDot\",\n    \"animationBegin\",\n    \"animationDuration\",\n    \"animationEasing\",\n    \"connectNulls\",\n    \"dot\",\n    \"fill\",\n    \"fillOpacity\",\n    \"hide\",\n    \"isAnimationActive\",\n    \"legendType\",\n    \"stroke\",\n    \"xAxisId\",\n    \"yAxisId\"\n];\nfunction _objectWithoutProperties(e, t) {\n    if (null == e) return {};\n    var o, r, i = _objectWithoutPropertiesLoose(e, t);\n    if (Object.getOwnPropertySymbols) {\n        var n = Object.getOwnPropertySymbols(e);\n        for(r = 0; r < n.length; r++)o = n[r], -1 === t.indexOf(o) && ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n    }\n    return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n    if (null == r) return {};\n    var t = {};\n    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {\n        if (-1 !== e.indexOf(n)) continue;\n        t[n] = r[n];\n    }\n    return t;\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function(n) {\n        for(var e = 1; e < arguments.length; e++){\n            var t = arguments[e];\n            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n        }\n        return n;\n    }, _extends.apply(null, arguments);\n}\n// eslint-disable-next-line max-classes-per-file\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Internal props, combination of external props + defaultProps + private Recharts state\n */ /**\n * External props, intended for end users to fill in\n */ /**\n * Because of naming conflict, we are forced to ignore certain (valid) SVG attributes.\n */ function getLegendItemColor(stroke, fill) {\n    return stroke && stroke !== 'none' ? stroke : fill;\n}\nvar computeLegendPayloadFromAreaData = (props)=>{\n    var { dataKey, name, stroke, fill, legendType, hide } = props;\n    return [\n        {\n            inactive: hide,\n            dataKey,\n            type: legendType,\n            color: getLegendItemColor(stroke, fill),\n            value: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getTooltipNameProp)(name, dataKey),\n            payload: props\n        }\n    ];\n};\nfunction getTooltipEntrySettings(props) {\n    var { dataKey, data, stroke, strokeWidth, fill, name, hide, unit } = props;\n    return {\n        dataDefinedOnItem: data,\n        positions: undefined,\n        settings: {\n            stroke,\n            strokeWidth,\n            fill,\n            dataKey,\n            nameKey: undefined,\n            name: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getTooltipNameProp)(name, dataKey),\n            hide,\n            type: props.tooltipType,\n            color: getLegendItemColor(stroke, fill),\n            unit\n        }\n    };\n}\nvar renderDotItem = (option, props)=>{\n    var dotItem;\n    if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(option)) {\n        dotItem = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(option, props);\n    } else if (typeof option === 'function') {\n        dotItem = option(props);\n    } else {\n        var className = (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)('recharts-area-dot', typeof option !== 'boolean' ? option.className : '');\n        dotItem = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_shape_Dot__WEBPACK_IMPORTED_MODULE_3__.Dot, _extends({}, props, {\n            className: className\n        }));\n    }\n    return dotItem;\n};\nfunction shouldRenderDots(points, dot) {\n    if (points == null) {\n        return false;\n    }\n    if (dot) {\n        return true;\n    }\n    return points.length === 1;\n}\nfunction Dots(_ref) {\n    var { clipPathId, points, props } = _ref;\n    var { needClip, dot, dataKey } = props;\n    if (!shouldRenderDots(points, dot)) {\n        return null;\n    }\n    var clipDot = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.isClipDot)(dot);\n    var areaProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(props, false);\n    var customDotProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(dot, true);\n    var dots = points.map((entry, i)=>{\n        var dotProps = _objectSpread(_objectSpread(_objectSpread({\n            key: \"dot-\".concat(i),\n            r: 3\n        }, areaProps), customDotProps), {}, {\n            index: i,\n            cx: entry.x,\n            cy: entry.y,\n            dataKey,\n            value: entry.value,\n            payload: entry.payload,\n            points\n        });\n        return renderDotItem(dot, dotProps);\n    });\n    var dotsProps = {\n        clipPath: needClip ? \"url(#clipPath-\".concat(clipDot ? '' : 'dots-').concat(clipPathId, \")\") : undefined\n    };\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_5__.Layer, _extends({\n        className: \"recharts-area-dots\"\n    }, dotsProps), dots);\n}\n_c = Dots;\nfunction StaticArea(_ref2) {\n    var { points, baseLine, needClip, clipPathId, props, showLabels } = _ref2;\n    var { layout, type, stroke, connectNulls, isRange } = props, others = _objectWithoutProperties(props, _excluded);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (points === null || points === void 0 ? void 0 : points.length) > 1 && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_5__.Layer, {\n        clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : undefined\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_shape_Curve__WEBPACK_IMPORTED_MODULE_6__.Curve, _extends({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(others, true), {\n        points: points,\n        connectNulls: connectNulls,\n        type: type,\n        baseLine: baseLine,\n        layout: layout,\n        stroke: \"none\",\n        className: \"recharts-area-area\"\n    })), stroke !== 'none' && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_shape_Curve__WEBPACK_IMPORTED_MODULE_6__.Curve, _extends({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(props, false), {\n        className: \"recharts-area-curve\",\n        layout: layout,\n        type: type,\n        connectNulls: connectNulls,\n        fill: \"none\",\n        points: points\n    })), stroke !== 'none' && isRange && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_shape_Curve__WEBPACK_IMPORTED_MODULE_6__.Curve, _extends({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(props, false), {\n        className: \"recharts-area-curve\",\n        layout: layout,\n        type: type,\n        connectNulls: connectNulls,\n        fill: \"none\",\n        points: baseLine\n    }))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Dots, {\n        points: points,\n        props: props,\n        clipPathId: clipPathId\n    }), showLabels && _component_LabelList__WEBPACK_IMPORTED_MODULE_7__.LabelList.renderCallByParent(props, points));\n}\n_c1 = StaticArea;\nfunction VerticalRect(_ref3) {\n    var { alpha, baseLine, points, strokeWidth } = _ref3;\n    var startY = points[0].y;\n    var endY = points[points.length - 1].y;\n    if (!(0,_util_isWellBehavedNumber__WEBPACK_IMPORTED_MODULE_8__.isWellBehavedNumber)(startY) || !(0,_util_isWellBehavedNumber__WEBPACK_IMPORTED_MODULE_8__.isWellBehavedNumber)(endY)) {\n        return null;\n    }\n    var height = alpha * Math.abs(startY - endY);\n    var maxX = Math.max(...points.map((entry)=>entry.x || 0));\n    if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNumber)(baseLine)) {\n        maxX = Math.max(baseLine, maxX);\n    } else if (baseLine && Array.isArray(baseLine) && baseLine.length) {\n        maxX = Math.max(...baseLine.map((entry)=>entry.x || 0), maxX);\n    }\n    if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNumber)(maxX)) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", {\n            x: 0,\n            y: startY < endY ? startY : startY - height,\n            width: maxX + (strokeWidth ? parseInt(\"\".concat(strokeWidth), 10) : 1),\n            height: Math.floor(height)\n        });\n    }\n    return null;\n}\n_c2 = VerticalRect;\nfunction HorizontalRect(_ref4) {\n    var { alpha, baseLine, points, strokeWidth } = _ref4;\n    var startX = points[0].x;\n    var endX = points[points.length - 1].x;\n    if (!(0,_util_isWellBehavedNumber__WEBPACK_IMPORTED_MODULE_8__.isWellBehavedNumber)(startX) || !(0,_util_isWellBehavedNumber__WEBPACK_IMPORTED_MODULE_8__.isWellBehavedNumber)(endX)) {\n        return null;\n    }\n    var width = alpha * Math.abs(startX - endX);\n    var maxY = Math.max(...points.map((entry)=>entry.y || 0));\n    if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNumber)(baseLine)) {\n        maxY = Math.max(baseLine, maxY);\n    } else if (baseLine && Array.isArray(baseLine) && baseLine.length) {\n        maxY = Math.max(...baseLine.map((entry)=>entry.y || 0), maxY);\n    }\n    if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNumber)(maxY)) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", {\n            x: startX < endX ? startX : startX - width,\n            y: 0,\n            width: width,\n            height: Math.floor(maxY + (strokeWidth ? parseInt(\"\".concat(strokeWidth), 10) : 1))\n        });\n    }\n    return null;\n}\n_c3 = HorizontalRect;\nfunction ClipRect(_ref5) {\n    var { alpha, layout, points, baseLine, strokeWidth } = _ref5;\n    if (layout === 'vertical') {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(VerticalRect, {\n            alpha: alpha,\n            points: points,\n            baseLine: baseLine,\n            strokeWidth: strokeWidth\n        });\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(HorizontalRect, {\n        alpha: alpha,\n        points: points,\n        baseLine: baseLine,\n        strokeWidth: strokeWidth\n    });\n}\n_c4 = ClipRect;\nfunction AreaWithAnimation(_ref6) {\n    _s();\n    var { needClip, clipPathId, props, previousPointsRef, previousBaselineRef } = _ref6;\n    var { points, baseLine, isAnimationActive, animationBegin, animationDuration, animationEasing, onAnimationStart, onAnimationEnd } = props;\n    var animationId = (0,_util_useAnimationId__WEBPACK_IMPORTED_MODULE_10__.useAnimationId)(props, 'recharts-area-');\n    var [isAnimating, setIsAnimating] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    var handleAnimationEnd = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"AreaWithAnimation.useCallback[handleAnimationEnd]\": ()=>{\n            if (typeof onAnimationEnd === 'function') {\n                onAnimationEnd();\n            }\n            setIsAnimating(false);\n        }\n    }[\"AreaWithAnimation.useCallback[handleAnimationEnd]\"], [\n        onAnimationEnd\n    ]);\n    var handleAnimationStart = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"AreaWithAnimation.useCallback[handleAnimationStart]\": ()=>{\n            if (typeof onAnimationStart === 'function') {\n                onAnimationStart();\n            }\n            setIsAnimating(true);\n        }\n    }[\"AreaWithAnimation.useCallback[handleAnimationStart]\"], [\n        onAnimationStart\n    ]);\n    var prevPoints = previousPointsRef.current;\n    var prevBaseLine = previousBaselineRef.current;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_animation_Animate__WEBPACK_IMPORTED_MODULE_11__.Animate, {\n        begin: animationBegin,\n        duration: animationDuration,\n        isActive: isAnimationActive,\n        easing: animationEasing,\n        from: {\n            t: 0\n        },\n        to: {\n            t: 1\n        },\n        onAnimationEnd: handleAnimationEnd,\n        onAnimationStart: handleAnimationStart,\n        key: animationId\n    }, (_ref7)=>{\n        var { t } = _ref7;\n        if (prevPoints) {\n            var prevPointsDiffFactor = prevPoints.length / points.length;\n            var stepPoints = /*\n       * Here it is important that at the very end of the animation, on the last frame,\n       * we render the original points without any interpolation.\n       * This is needed because the code above is checking for reference equality to decide if the animation should run\n       * and if we create a new array instance (even if the numbers were the same)\n       * then we would break animations.\n       */ t === 1 ? points : points.map((entry, index)=>{\n                var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n                if (prevPoints[prevPointIndex]) {\n                    var prev = prevPoints[prevPointIndex];\n                    return _objectSpread(_objectSpread({}, entry), {}, {\n                        x: (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.interpolate)(prev.x, entry.x, t),\n                        y: (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.interpolate)(prev.y, entry.y, t)\n                    });\n                }\n                return entry;\n            });\n            var stepBaseLine;\n            if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNumber)(baseLine)) {\n                stepBaseLine = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.interpolate)(prevBaseLine, baseLine, t);\n            } else if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNullish)(baseLine) || (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNan)(baseLine)) {\n                stepBaseLine = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.interpolate)(prevBaseLine, 0, t);\n            } else {\n                stepBaseLine = baseLine.map((entry, index)=>{\n                    var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n                    if (Array.isArray(prevBaseLine) && prevBaseLine[prevPointIndex]) {\n                        var prev = prevBaseLine[prevPointIndex];\n                        return _objectSpread(_objectSpread({}, entry), {}, {\n                            x: (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.interpolate)(prev.x, entry.x, t),\n                            y: (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.interpolate)(prev.y, entry.y, t)\n                        });\n                    }\n                    return entry;\n                });\n            }\n            if (t > 0) {\n                /*\n         * We need to keep the refs in the parent component because we need to remember the last shape of the animation\n         * even if AreaWithAnimation is unmounted as that happens when changing props.\n         *\n         * And we need to update the refs here because here is where the interpolation is computed.\n         * Eslint doesn't like changing function arguments, but we need it so here is an eslint-disable.\n         */ // eslint-disable-next-line no-param-reassign\n                previousPointsRef.current = stepPoints;\n                // eslint-disable-next-line no-param-reassign\n                previousBaselineRef.current = stepBaseLine;\n            }\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(StaticArea, {\n                points: stepPoints,\n                baseLine: stepBaseLine,\n                needClip: needClip,\n                clipPathId: clipPathId,\n                props: props,\n                showLabels: !isAnimating\n            });\n        }\n        if (t > 0) {\n            // eslint-disable-next-line no-param-reassign\n            previousPointsRef.current = points;\n            // eslint-disable-next-line no-param-reassign\n            previousBaselineRef.current = baseLine;\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_5__.Layer, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"defs\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"clipPath\", {\n            id: \"animationClipPath-\".concat(clipPathId)\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ClipRect, {\n            alpha: t,\n            points: points,\n            baseLine: baseLine,\n            layout: props.layout,\n            strokeWidth: props.strokeWidth\n        }))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_5__.Layer, {\n            clipPath: \"url(#animationClipPath-\".concat(clipPathId, \")\")\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(StaticArea, {\n            points: points,\n            baseLine: baseLine,\n            needClip: needClip,\n            clipPathId: clipPathId,\n            props: props,\n            showLabels: true\n        })));\n    });\n}\n_s(AreaWithAnimation, \"Z2eaDaqwC6LQIioSPkSaxG2AJKo=\", false, function() {\n    return [\n        _util_useAnimationId__WEBPACK_IMPORTED_MODULE_10__.useAnimationId\n    ];\n});\n_c5 = AreaWithAnimation;\n/*\n * This components decides if the area should be animated or not.\n * It also holds the state of the animation.\n */ function RenderArea(_ref8) {\n    _s1();\n    var { needClip, clipPathId, props } = _ref8;\n    var { points, baseLine, isAnimationActive } = props;\n    /*\n   * These two must be refs, not state!\n   * Because we want to store the most recent shape of the animation in case we have to interrupt the animation;\n   * that happens when user initiates another animation before the current one finishes.\n   *\n   * If this was a useState, then every step in the animation would trigger a re-render.\n   * So, useRef it is.\n   */ var previousPointsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var previousBaselineRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    var prevPoints = previousPointsRef.current;\n    var prevBaseLine = previousBaselineRef.current;\n    if (isAnimationActive && /*\n   * Here it's important that we unmount of AreaWithAnimation in case points are undefined\n   * - this will make sure to interrupt the animation if it's running.\n   * We still get to keep the last shape of the animation in the refs above.\n   */ points && points.length && (prevPoints !== points || prevBaseLine !== baseLine)) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AreaWithAnimation, {\n            needClip: needClip,\n            clipPathId: clipPathId,\n            props: props,\n            previousPointsRef: previousPointsRef,\n            previousBaselineRef: previousBaselineRef\n        });\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(StaticArea, {\n        points: points,\n        baseLine: baseLine,\n        needClip: needClip,\n        clipPathId: clipPathId,\n        props: props,\n        showLabels: true\n    });\n}\n_s1(RenderArea, \"ORvHbSkzSIYzLgIf6OxHDt8TTuo=\");\n_c6 = RenderArea;\nclass AreaWithState extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n    render() {\n        var _filterProps;\n        var { hide, dot, points, className, top, left, needClip, xAxisId, yAxisId, width, height, id, baseLine } = this.props;\n        if (hide) {\n            return null;\n        }\n        var layerClass = (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)('recharts-area', className);\n        var clipPathId = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNullish)(id) ? this.id : id;\n        var { r = 3, strokeWidth = 2 } = (_filterProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(dot, false)) !== null && _filterProps !== void 0 ? _filterProps : {\n            r: 3,\n            strokeWidth: 2\n        };\n        var clipDot = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.isClipDot)(dot);\n        var dotSize = r * 2 + strokeWidth;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_5__.Layer, {\n            className: layerClass\n        }, needClip && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"defs\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_12__.GraphicalItemClipPath, {\n            clipPathId: clipPathId,\n            xAxisId: xAxisId,\n            yAxisId: yAxisId\n        }), !clipDot && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"clipPath\", {\n            id: \"clipPath-dots-\".concat(clipPathId)\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", {\n            x: left - dotSize / 2,\n            y: top - dotSize / 2,\n            width: width + dotSize,\n            height: height + dotSize\n        }))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RenderArea, {\n            needClip: needClip,\n            clipPathId: clipPathId,\n            props: this.props\n        })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_component_ActivePoints__WEBPACK_IMPORTED_MODULE_13__.ActivePoints, {\n            points: points,\n            mainColor: getLegendItemColor(this.props.stroke, this.props.fill),\n            itemDataKey: this.props.dataKey,\n            activeDot: this.props.activeDot\n        }), this.props.isRange && Array.isArray(baseLine) && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_component_ActivePoints__WEBPACK_IMPORTED_MODULE_13__.ActivePoints, {\n            points: baseLine,\n            mainColor: getLegendItemColor(this.props.stroke, this.props.fill),\n            itemDataKey: this.props.dataKey,\n            activeDot: this.props.activeDot\n        }));\n    }\n    constructor(){\n        super(...arguments);\n        _defineProperty(this, \"id\", (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.uniqueId)('recharts-area-'));\n    }\n}\nvar defaultAreaProps = {\n    activeDot: true,\n    animationBegin: 0,\n    animationDuration: 1500,\n    animationEasing: 'ease',\n    connectNulls: false,\n    dot: false,\n    fill: '#3182bd',\n    fillOpacity: 0.6,\n    hide: false,\n    isAnimationActive: !_util_Global__WEBPACK_IMPORTED_MODULE_14__.Global.isSsr,\n    legendType: 'line',\n    stroke: '#3182bd',\n    xAxisId: 0,\n    yAxisId: 0\n};\nfunction AreaImpl(props) {\n    _s2();\n    var _useAppSelector;\n    var _resolveDefaultProps = (0,_util_resolveDefaultProps__WEBPACK_IMPORTED_MODULE_15__.resolveDefaultProps)(props, defaultAreaProps), { activeDot, animationBegin, animationDuration, animationEasing, connectNulls, dot, fill, fillOpacity, hide, isAnimationActive, legendType, stroke, xAxisId, yAxisId } = _resolveDefaultProps, everythingElse = _objectWithoutProperties(_resolveDefaultProps, _excluded2);\n    var layout = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_16__.useChartLayout)();\n    var chartName = (0,_state_selectors_selectors__WEBPACK_IMPORTED_MODULE_17__.useChartName)();\n    var { needClip } = (0,_GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_12__.useNeedsClip)(xAxisId, yAxisId);\n    var isPanorama = (0,_context_PanoramaContext__WEBPACK_IMPORTED_MODULE_18__.useIsPanorama)();\n    var areaSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"AreaImpl.useMemo[areaSettings]\": ()=>({\n                baseValue: props.baseValue,\n                stackId: props.stackId,\n                connectNulls,\n                data: props.data,\n                dataKey: props.dataKey\n            })\n    }[\"AreaImpl.useMemo[areaSettings]\"], [\n        props.baseValue,\n        props.stackId,\n        connectNulls,\n        props.data,\n        props.dataKey\n    ]);\n    var { points, isRange, baseLine } = (_useAppSelector = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_19__.useAppSelector)({\n        \"AreaImpl.useAppSelector\": (state)=>(0,_state_selectors_areaSelectors__WEBPACK_IMPORTED_MODULE_20__.selectArea)(state, xAxisId, yAxisId, isPanorama, areaSettings)\n    }[\"AreaImpl.useAppSelector\"])) !== null && _useAppSelector !== void 0 ? _useAppSelector : {};\n    var { height, width, x: left, y: top } = (0,_hooks__WEBPACK_IMPORTED_MODULE_21__.usePlotArea)();\n    if (layout !== 'horizontal' && layout !== 'vertical') {\n        // Can't render Area in an unsupported layout\n        return null;\n    }\n    if (chartName !== 'AreaChart' && chartName !== 'ComposedChart') {\n        // There is nothing stopping us from rendering Area in other charts, except for historical reasons. Do we want to allow that?\n        return null;\n    }\n    /*\n   * It is important to NOT have this condition here,\n   * because we need the Animate inside to receive an empty state\n   * so that it can properly reset its internal state and start a new animation.\n   */ // if (!points || !points.length) {\n    //   return null;\n    // }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AreaWithState, _extends({}, everythingElse, {\n        activeDot: activeDot,\n        animationBegin: animationBegin,\n        animationDuration: animationDuration,\n        animationEasing: animationEasing,\n        baseLine: baseLine,\n        connectNulls: connectNulls,\n        dot: dot,\n        fill: fill,\n        fillOpacity: fillOpacity,\n        height: height,\n        hide: hide,\n        layout: layout,\n        isAnimationActive: isAnimationActive,\n        isRange: isRange,\n        legendType: legendType,\n        needClip: needClip,\n        points: points,\n        stroke: stroke,\n        width: width,\n        left: left,\n        top: top,\n        xAxisId: xAxisId,\n        yAxisId: yAxisId\n    }));\n}\n_s2(AreaImpl, \"f14j48qx7ux+dNIY6G9WKq7gErk=\", false, function() {\n    return [\n        _context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_16__.useChartLayout,\n        _state_selectors_selectors__WEBPACK_IMPORTED_MODULE_17__.useChartName,\n        _GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_12__.useNeedsClip,\n        _context_PanoramaContext__WEBPACK_IMPORTED_MODULE_18__.useIsPanorama,\n        _state_hooks__WEBPACK_IMPORTED_MODULE_19__.useAppSelector,\n        _hooks__WEBPACK_IMPORTED_MODULE_21__.usePlotArea\n    ];\n});\n_c7 = AreaImpl;\nvar getBaseValue = (layout, chartBaseValue, itemBaseValue, xAxis, yAxis)=>{\n    // The baseValue can be defined both on the AreaChart, and on the Area.\n    // The value for the item takes precedence.\n    var baseValue = itemBaseValue !== null && itemBaseValue !== void 0 ? itemBaseValue : chartBaseValue;\n    if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNumber)(baseValue)) {\n        return baseValue;\n    }\n    var numericAxis = layout === 'horizontal' ? yAxis : xAxis;\n    // @ts-expect-error d3scale .domain() returns unknown, Math.max expects number\n    var domain = numericAxis.scale.domain();\n    if (numericAxis.type === 'number') {\n        var domainMax = Math.max(domain[0], domain[1]);\n        var domainMin = Math.min(domain[0], domain[1]);\n        if (baseValue === 'dataMin') {\n            return domainMin;\n        }\n        if (baseValue === 'dataMax') {\n            return domainMax;\n        }\n        return domainMax < 0 ? domainMax : Math.max(Math.min(domain[0], domain[1]), 0);\n    }\n    if (baseValue === 'dataMin') {\n        return domain[0];\n    }\n    if (baseValue === 'dataMax') {\n        return domain[1];\n    }\n    return domain[0];\n};\nfunction computeArea(_ref9) {\n    var { areaSettings: { connectNulls, baseValue: itemBaseValue, dataKey }, stackedData, layout, chartBaseValue, xAxis, yAxis, displayedData, dataStartIndex, xAxisTicks, yAxisTicks, bandSize } = _ref9;\n    var hasStack = stackedData && stackedData.length;\n    var baseValue = getBaseValue(layout, chartBaseValue, itemBaseValue, xAxis, yAxis);\n    var isHorizontalLayout = layout === 'horizontal';\n    var isRange = false;\n    var points = displayedData.map((entry, index)=>{\n        var value;\n        if (hasStack) {\n            value = stackedData[dataStartIndex + index];\n        } else {\n            value = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getValueByDataKey)(entry, dataKey);\n            if (!Array.isArray(value)) {\n                value = [\n                    baseValue,\n                    value\n                ];\n            } else {\n                isRange = true;\n            }\n        }\n        var isBreakPoint = value[1] == null || hasStack && !connectNulls && (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getValueByDataKey)(entry, dataKey) == null;\n        if (isHorizontalLayout) {\n            return {\n                // @ts-expect-error getCateCoordinateOfLine expects chart data to be an object, we allow unknown\n                x: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getCateCoordinateOfLine)({\n                    axis: xAxis,\n                    ticks: xAxisTicks,\n                    bandSize,\n                    entry,\n                    index\n                }),\n                y: isBreakPoint ? null : yAxis.scale(value[1]),\n                value,\n                payload: entry\n            };\n        }\n        return {\n            x: isBreakPoint ? null : xAxis.scale(value[1]),\n            // @ts-expect-error getCateCoordinateOfLine expects chart data to be an object, we allow unknown\n            y: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getCateCoordinateOfLine)({\n                axis: yAxis,\n                ticks: yAxisTicks,\n                bandSize,\n                entry,\n                index\n            }),\n            value,\n            payload: entry\n        };\n    });\n    var baseLine;\n    if (hasStack || isRange) {\n        baseLine = points.map((entry)=>{\n            var x = Array.isArray(entry.value) ? entry.value[0] : null;\n            if (isHorizontalLayout) {\n                return {\n                    x: entry.x,\n                    y: x != null && entry.y != null ? yAxis.scale(x) : null\n                };\n            }\n            return {\n                x: x != null ? xAxis.scale(x) : null,\n                y: entry.y\n            };\n        });\n    } else {\n        baseLine = isHorizontalLayout ? yAxis.scale(baseValue) : xAxis.scale(baseValue);\n    }\n    return {\n        points,\n        baseLine,\n        isRange\n    };\n}\nclass Area extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n    render() {\n        // Report all props to Redux store first, before calling any hooks, to avoid circular dependencies.\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_22__.CartesianGraphicalItemContext, {\n            type: \"area\",\n            data: this.props.data,\n            dataKey: this.props.dataKey,\n            xAxisId: this.props.xAxisId,\n            yAxisId: this.props.yAxisId,\n            zAxisId: 0,\n            stackId: this.props.stackId,\n            hide: this.props.hide,\n            barSize: undefined\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_state_SetLegendPayload__WEBPACK_IMPORTED_MODULE_23__.SetLegendPayload, {\n            legendPayload: computeLegendPayloadFromAreaData(this.props)\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_state_SetTooltipEntrySettings__WEBPACK_IMPORTED_MODULE_24__.SetTooltipEntrySettings, {\n            fn: getTooltipEntrySettings,\n            args: this.props\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AreaImpl, this.props));\n    }\n}\n_defineProperty(Area, \"displayName\", 'Area');\n_defineProperty(Area, \"defaultProps\", defaultAreaProps);\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Dots\");\n$RefreshReg$(_c1, \"StaticArea\");\n$RefreshReg$(_c2, \"VerticalRect\");\n$RefreshReg$(_c3, \"HorizontalRect\");\n$RefreshReg$(_c4, \"ClipRect\");\n$RefreshReg$(_c5, \"AreaWithAnimation\");\n$RefreshReg$(_c6, \"RenderArea\");\n$RefreshReg$(_c7, \"AreaImpl\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/recharts/es6/cartesian/Area.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/recharts/es6/cartesian/Bar.js":
/*!****************************************************!*\
  !*** ./node_modules/recharts/es6/cartesian/Bar.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bar: () => (/* binding */ Bar),\n/* harmony export */   computeBarRectangles: () => (/* binding */ computeBarRectangles)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../container/Layer */ \"(app-pages-browser)/./node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _ErrorBar__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./ErrorBar */ \"(app-pages-browser)/./node_modules/recharts/es6/cartesian/ErrorBar.js\");\n/* harmony import */ var _component_Cell__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../component/Cell */ \"(app-pages-browser)/./node_modules/recharts/es6/component/Cell.js\");\n/* harmony import */ var _component_LabelList__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../component/LabelList */ \"(app-pages-browser)/./node_modules/recharts/es6/component/LabelList.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../util/DataUtils */ \"(app-pages-browser)/./node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/ReactUtils */ \"(app-pages-browser)/./node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _util_Global__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../util/Global */ \"(app-pages-browser)/./node_modules/recharts/es6/util/Global.js\");\n/* harmony import */ var _util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ChartUtils */ \"(app-pages-browser)/./node_modules/recharts/es6/util/ChartUtils.js\");\n/* harmony import */ var _util_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/types */ \"(app-pages-browser)/./node_modules/recharts/es6/util/types.js\");\n/* harmony import */ var _util_BarUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/BarUtils */ \"(app-pages-browser)/./node_modules/recharts/es6/util/BarUtils.js\");\n/* harmony import */ var _context_tooltipContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../context/tooltipContext */ \"(app-pages-browser)/./node_modules/recharts/es6/context/tooltipContext.js\");\n/* harmony import */ var _state_SetTooltipEntrySettings__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../state/SetTooltipEntrySettings */ \"(app-pages-browser)/./node_modules/recharts/es6/state/SetTooltipEntrySettings.js\");\n/* harmony import */ var _state_ReportBar__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../state/ReportBar */ \"(app-pages-browser)/./node_modules/recharts/es6/state/ReportBar.js\");\n/* harmony import */ var _context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../context/CartesianGraphicalItemContext */ \"(app-pages-browser)/./node_modules/recharts/es6/context/CartesianGraphicalItemContext.js\");\n/* harmony import */ var _GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./GraphicalItemClipPath */ \"(app-pages-browser)/./node_modules/recharts/es6/cartesian/GraphicalItemClipPath.js\");\n/* harmony import */ var _context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../context/chartLayoutContext */ \"(app-pages-browser)/./node_modules/recharts/es6/context/chartLayoutContext.js\");\n/* harmony import */ var _state_selectors_barSelectors__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../state/selectors/barSelectors */ \"(app-pages-browser)/./node_modules/recharts/es6/state/selectors/barSelectors.js\");\n/* harmony import */ var _state_hooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../state/hooks */ \"(app-pages-browser)/./node_modules/recharts/es6/state/hooks.js\");\n/* harmony import */ var _context_PanoramaContext__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../context/PanoramaContext */ \"(app-pages-browser)/./node_modules/recharts/es6/context/PanoramaContext.js\");\n/* harmony import */ var _state_selectors_tooltipSelectors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../state/selectors/tooltipSelectors */ \"(app-pages-browser)/./node_modules/recharts/es6/state/selectors/tooltipSelectors.js\");\n/* harmony import */ var _state_SetLegendPayload__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../state/SetLegendPayload */ \"(app-pages-browser)/./node_modules/recharts/es6/state/SetLegendPayload.js\");\n/* harmony import */ var _util_useAnimationId__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../util/useAnimationId */ \"(app-pages-browser)/./node_modules/recharts/es6/util/useAnimationId.js\");\n/* harmony import */ var _util_resolveDefaultProps__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../util/resolveDefaultProps */ \"(app-pages-browser)/./node_modules/recharts/es6/util/resolveDefaultProps.js\");\n/* harmony import */ var _animation_Animate__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../animation/Animate */ \"(app-pages-browser)/./node_modules/recharts/es6/animation/Animate.js\");\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$();\nvar _excluded = [\n    \"onMouseEnter\",\n    \"onMouseLeave\",\n    \"onClick\"\n], _excluded2 = [\n    \"value\",\n    \"background\",\n    \"tooltipPosition\"\n], _excluded3 = [\n    \"onMouseEnter\",\n    \"onClick\",\n    \"onMouseLeave\"\n];\nfunction _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function(n) {\n        for(var e = 1; e < arguments.length; e++){\n            var t = arguments[e];\n            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n        }\n        return n;\n    }, _extends.apply(null, arguments);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _objectWithoutProperties(e, t) {\n    if (null == e) return {};\n    var o, r, i = _objectWithoutPropertiesLoose(e, t);\n    if (Object.getOwnPropertySymbols) {\n        var n = Object.getOwnPropertySymbols(e);\n        for(r = 0; r < n.length; r++)o = n[r], -1 === t.indexOf(o) && ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n    }\n    return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n    if (null == r) return {};\n    var t = {};\n    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {\n        if (-1 !== e.indexOf(n)) continue;\n        t[n] = r[n];\n    }\n    return t;\n}\n/**\n * @fileOverview Render a group of bar\n */ // eslint-disable-next-line max-classes-per-file\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar computeLegendPayloadFromBarData = (props)=>{\n    var { dataKey, name, fill, legendType, hide } = props;\n    return [\n        {\n            inactive: hide,\n            dataKey,\n            type: legendType,\n            color: fill,\n            value: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getTooltipNameProp)(name, dataKey),\n            payload: props\n        }\n    ];\n};\nfunction getTooltipEntrySettings(props) {\n    var { dataKey, stroke, strokeWidth, fill, name, hide, unit } = props;\n    return {\n        dataDefinedOnItem: undefined,\n        positions: undefined,\n        settings: {\n            stroke,\n            strokeWidth,\n            fill,\n            dataKey,\n            nameKey: undefined,\n            name: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getTooltipNameProp)(name, dataKey),\n            hide,\n            type: props.tooltipType,\n            color: props.fill,\n            unit\n        }\n    };\n}\nfunction BarBackground(props) {\n    _s();\n    var activeIndex = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_3__.useAppSelector)(_state_selectors_tooltipSelectors__WEBPACK_IMPORTED_MODULE_4__.selectActiveTooltipIndex);\n    var { data, dataKey, background: backgroundFromProps, allOtherBarProps } = props;\n    var { onMouseEnter: onMouseEnterFromProps, onMouseLeave: onMouseLeaveFromProps, onClick: onItemClickFromProps } = allOtherBarProps, restOfAllOtherProps = _objectWithoutProperties(allOtherBarProps, _excluded);\n    var onMouseEnterFromContext = (0,_context_tooltipContext__WEBPACK_IMPORTED_MODULE_5__.useMouseEnterItemDispatch)(onMouseEnterFromProps, dataKey);\n    var onMouseLeaveFromContext = (0,_context_tooltipContext__WEBPACK_IMPORTED_MODULE_5__.useMouseLeaveItemDispatch)(onMouseLeaveFromProps);\n    var onClickFromContext = (0,_context_tooltipContext__WEBPACK_IMPORTED_MODULE_5__.useMouseClickItemDispatch)(onItemClickFromProps, dataKey);\n    if (!backgroundFromProps || data == null) {\n        return null;\n    }\n    var backgroundProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__.filterProps)(backgroundFromProps, false);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, data.map((entry, i)=>{\n        var { value, background: backgroundFromDataEntry, tooltipPosition } = entry, rest = _objectWithoutProperties(entry, _excluded2);\n        if (!backgroundFromDataEntry) {\n            return null;\n        }\n        // @ts-expect-error BarRectangleItem type definition says it's missing properties, but I can see them present in debugger!\n        var onMouseEnter = onMouseEnterFromContext(entry, i);\n        // @ts-expect-error BarRectangleItem type definition says it's missing properties, but I can see them present in debugger!\n        var onMouseLeave = onMouseLeaveFromContext(entry, i);\n        // @ts-expect-error BarRectangleItem type definition says it's missing properties, but I can see them present in debugger!\n        var onClick = onClickFromContext(entry, i);\n        var barRectangleProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n            option: backgroundFromProps,\n            isActive: String(i) === activeIndex\n        }, rest), {}, {\n            // @ts-expect-error BarRectangle props do not accept `fill` property.\n            fill: '#eee'\n        }, backgroundFromDataEntry), backgroundProps), (0,_util_types__WEBPACK_IMPORTED_MODULE_7__.adaptEventsOfChild)(restOfAllOtherProps, entry, i)), {}, {\n            onMouseEnter,\n            onMouseLeave,\n            onClick,\n            dataKey,\n            index: i,\n            className: 'recharts-bar-background-rectangle'\n        });\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_util_BarUtils__WEBPACK_IMPORTED_MODULE_8__.BarRectangle, _extends({\n            key: \"background-bar-\".concat(i)\n        }, barRectangleProps));\n    }));\n}\n_s(BarBackground, \"g9RH8imFzACN+WMyD2JcGE+eTBg=\", false, function() {\n    return [\n        _state_hooks__WEBPACK_IMPORTED_MODULE_3__.useAppSelector,\n        _context_tooltipContext__WEBPACK_IMPORTED_MODULE_5__.useMouseEnterItemDispatch,\n        _context_tooltipContext__WEBPACK_IMPORTED_MODULE_5__.useMouseLeaveItemDispatch,\n        _context_tooltipContext__WEBPACK_IMPORTED_MODULE_5__.useMouseClickItemDispatch\n    ];\n});\n_c = BarBackground;\nfunction BarRectangles(_ref) {\n    _s1();\n    var { data, props, showLabels } = _ref;\n    var baseProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__.filterProps)(props, false);\n    var { shape, dataKey, activeBar } = props;\n    var activeIndex = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_3__.useAppSelector)(_state_selectors_tooltipSelectors__WEBPACK_IMPORTED_MODULE_4__.selectActiveTooltipIndex);\n    var activeDataKey = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_3__.useAppSelector)(_state_selectors_tooltipSelectors__WEBPACK_IMPORTED_MODULE_4__.selectActiveTooltipDataKey);\n    var { onMouseEnter: onMouseEnterFromProps, onClick: onItemClickFromProps, onMouseLeave: onMouseLeaveFromProps } = props, restOfAllOtherProps = _objectWithoutProperties(props, _excluded3);\n    var onMouseEnterFromContext = (0,_context_tooltipContext__WEBPACK_IMPORTED_MODULE_5__.useMouseEnterItemDispatch)(onMouseEnterFromProps, dataKey);\n    var onMouseLeaveFromContext = (0,_context_tooltipContext__WEBPACK_IMPORTED_MODULE_5__.useMouseLeaveItemDispatch)(onMouseLeaveFromProps);\n    var onClickFromContext = (0,_context_tooltipContext__WEBPACK_IMPORTED_MODULE_5__.useMouseClickItemDispatch)(onItemClickFromProps, dataKey);\n    if (!data) {\n        return null;\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, data.map((entry, i)=>{\n        /*\n     * Bars support stacking, meaning that there can be multiple bars at the same x value.\n     * With Tooltip shared=false we only want to highlight the currently active Bar, not all.\n     *\n     * Also, if the tooltip is shared, we want to highlight all bars at the same x value\n     * regardless of the dataKey.\n     *\n     * With shared Tooltip, the activeDataKey is undefined.\n     */ var isActive = activeBar && String(i) === activeIndex && (activeDataKey == null || dataKey === activeDataKey);\n        var option = isActive ? activeBar : shape;\n        var barRectangleProps = _objectSpread(_objectSpread(_objectSpread({}, baseProps), entry), {}, {\n            isActive,\n            option,\n            index: i,\n            dataKey\n        });\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_9__.Layer, _extends({\n            className: \"recharts-bar-rectangle\"\n        }, (0,_util_types__WEBPACK_IMPORTED_MODULE_7__.adaptEventsOfChild)(restOfAllOtherProps, entry, i), {\n            // @ts-expect-error BarRectangleItem type definition says it's missing properties, but I can see them present in debugger!\n            onMouseEnter: onMouseEnterFromContext(entry, i),\n            onMouseLeave: onMouseLeaveFromContext(entry, i),\n            onClick: onClickFromContext(entry, i),\n            key: \"rectangle-\".concat(entry === null || entry === void 0 ? void 0 : entry.x, \"-\").concat(entry === null || entry === void 0 ? void 0 : entry.y, \"-\").concat(entry === null || entry === void 0 ? void 0 : entry.value, \"-\").concat(i)\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_util_BarUtils__WEBPACK_IMPORTED_MODULE_8__.BarRectangle, barRectangleProps));\n    }), showLabels && _component_LabelList__WEBPACK_IMPORTED_MODULE_10__.LabelList.renderCallByParent(props, data));\n}\n_s1(BarRectangles, \"qXqigu2g+K8CGDOBb+u3OPgVMBk=\", false, function() {\n    return [\n        _state_hooks__WEBPACK_IMPORTED_MODULE_3__.useAppSelector,\n        _state_hooks__WEBPACK_IMPORTED_MODULE_3__.useAppSelector,\n        _context_tooltipContext__WEBPACK_IMPORTED_MODULE_5__.useMouseEnterItemDispatch,\n        _context_tooltipContext__WEBPACK_IMPORTED_MODULE_5__.useMouseLeaveItemDispatch,\n        _context_tooltipContext__WEBPACK_IMPORTED_MODULE_5__.useMouseClickItemDispatch\n    ];\n});\n_c1 = BarRectangles;\nfunction RectanglesWithAnimation(_ref2) {\n    _s2();\n    var { props, previousRectanglesRef } = _ref2;\n    var { data, layout, isAnimationActive, animationBegin, animationDuration, animationEasing, onAnimationEnd, onAnimationStart } = props;\n    var prevData = previousRectanglesRef.current;\n    var animationId = (0,_util_useAnimationId__WEBPACK_IMPORTED_MODULE_11__.useAnimationId)(props, 'recharts-bar-');\n    var [isAnimating, setIsAnimating] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    var handleAnimationEnd = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"RectanglesWithAnimation.useCallback[handleAnimationEnd]\": ()=>{\n            if (typeof onAnimationEnd === 'function') {\n                onAnimationEnd();\n            }\n            setIsAnimating(false);\n        }\n    }[\"RectanglesWithAnimation.useCallback[handleAnimationEnd]\"], [\n        onAnimationEnd\n    ]);\n    var handleAnimationStart = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"RectanglesWithAnimation.useCallback[handleAnimationStart]\": ()=>{\n            if (typeof onAnimationStart === 'function') {\n                onAnimationStart();\n            }\n            setIsAnimating(true);\n        }\n    }[\"RectanglesWithAnimation.useCallback[handleAnimationStart]\"], [\n        onAnimationStart\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_animation_Animate__WEBPACK_IMPORTED_MODULE_12__.Animate, {\n        begin: animationBegin,\n        duration: animationDuration,\n        isActive: isAnimationActive,\n        easing: animationEasing,\n        from: {\n            t: 0\n        },\n        to: {\n            t: 1\n        },\n        onAnimationEnd: handleAnimationEnd,\n        onAnimationStart: handleAnimationStart,\n        key: animationId\n    }, (_ref3)=>{\n        var { t } = _ref3;\n        var stepData = t === 1 ? data : data.map((entry, index)=>{\n            var prev = prevData && prevData[index];\n            if (prev) {\n                var interpolatorX = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.interpolateNumber)(prev.x, entry.x);\n                var interpolatorY = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.interpolateNumber)(prev.y, entry.y);\n                var interpolatorWidth = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.interpolateNumber)(prev.width, entry.width);\n                var interpolatorHeight = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.interpolateNumber)(prev.height, entry.height);\n                return _objectSpread(_objectSpread({}, entry), {}, {\n                    x: interpolatorX(t),\n                    y: interpolatorY(t),\n                    width: interpolatorWidth(t),\n                    height: interpolatorHeight(t)\n                });\n            }\n            if (layout === 'horizontal') {\n                var _interpolatorHeight = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.interpolateNumber)(0, entry.height);\n                var h = _interpolatorHeight(t);\n                return _objectSpread(_objectSpread({}, entry), {}, {\n                    y: entry.y + entry.height - h,\n                    height: h\n                });\n            }\n            var interpolator = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.interpolateNumber)(0, entry.width);\n            var w = interpolator(t);\n            return _objectSpread(_objectSpread({}, entry), {}, {\n                width: w\n            });\n        });\n        if (t > 0) {\n            // eslint-disable-next-line no-param-reassign\n            previousRectanglesRef.current = stepData;\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_9__.Layer, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(BarRectangles, {\n            props: props,\n            data: stepData,\n            showLabels: !isAnimating\n        }));\n    });\n}\n_s2(RectanglesWithAnimation, \"EtRJCq2zeTX8fq48M6piIni2l4w=\", false, function() {\n    return [\n        _util_useAnimationId__WEBPACK_IMPORTED_MODULE_11__.useAnimationId\n    ];\n});\n_c2 = RectanglesWithAnimation;\nfunction RenderRectangles(props) {\n    _s3();\n    var { data, isAnimationActive } = props;\n    var previousRectanglesRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    if (isAnimationActive && data && data.length && (previousRectanglesRef.current == null || previousRectanglesRef.current !== data)) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RectanglesWithAnimation, {\n            previousRectanglesRef: previousRectanglesRef,\n            props: props\n        });\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(BarRectangles, {\n        props: props,\n        data: data,\n        showLabels: true\n    });\n}\n_s3(RenderRectangles, \"XgujZyqqYy98XM92q05YUxI+rmw=\");\n_c3 = RenderRectangles;\nvar defaultMinPointSize = 0;\nvar errorBarDataPointFormatter = (dataPoint, dataKey)=>{\n    /**\n   * if the value coming from `selectBarRectangles` is an array then this is a stacked bar chart.\n   * arr[1] represents end value of the bar since the data is in the form of [startValue, endValue].\n   * */ var value = Array.isArray(dataPoint.value) ? dataPoint.value[1] : dataPoint.value;\n    return {\n        x: dataPoint.x,\n        y: dataPoint.y,\n        value,\n        // @ts-expect-error getValueByDataKey does not validate the output type\n        errorVal: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getValueByDataKey)(dataPoint, dataKey)\n    };\n};\nclass BarWithState extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n    render() {\n        var { hide, data, dataKey, className, xAxisId, yAxisId, needClip, background, id, layout } = this.props;\n        if (hide) {\n            return null;\n        }\n        var layerClass = (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)('recharts-bar', className);\n        var clipPathId = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.isNullish)(id) ? this.id : id;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_9__.Layer, {\n            className: layerClass\n        }, needClip && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"defs\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_14__.GraphicalItemClipPath, {\n            clipPathId: clipPathId,\n            xAxisId: xAxisId,\n            yAxisId: yAxisId\n        })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_9__.Layer, {\n            className: \"recharts-bar-rectangles\",\n            clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : null\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(BarBackground, {\n            data: data,\n            dataKey: dataKey,\n            background: background,\n            allOtherBarProps: this.props\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RenderRectangles, this.props)), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ErrorBar__WEBPACK_IMPORTED_MODULE_15__.SetErrorBarPreferredDirection, {\n            direction: layout === 'horizontal' ? 'y' : 'x'\n        }, this.props.children));\n    }\n    constructor(){\n        super(...arguments);\n        _defineProperty(this, \"id\", (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.uniqueId)('recharts-bar-'));\n    }\n}\nvar defaultBarProps = {\n    activeBar: false,\n    animationBegin: 0,\n    animationDuration: 400,\n    animationEasing: 'ease',\n    hide: false,\n    isAnimationActive: !_util_Global__WEBPACK_IMPORTED_MODULE_16__.Global.isSsr,\n    legendType: 'rect',\n    minPointSize: defaultMinPointSize,\n    xAxisId: 0,\n    yAxisId: 0\n};\nfunction BarImpl(props) {\n    _s4();\n    var { xAxisId, yAxisId, hide, legendType, minPointSize, activeBar, animationBegin, animationDuration, animationEasing, isAnimationActive } = (0,_util_resolveDefaultProps__WEBPACK_IMPORTED_MODULE_17__.resolveDefaultProps)(props, defaultBarProps);\n    var { needClip } = (0,_GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_14__.useNeedsClip)(xAxisId, yAxisId);\n    var layout = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_18__.useChartLayout)();\n    var isPanorama = (0,_context_PanoramaContext__WEBPACK_IMPORTED_MODULE_19__.useIsPanorama)();\n    var barSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"BarImpl.useMemo[barSettings]\": ()=>({\n                barSize: props.barSize,\n                data: undefined,\n                dataKey: props.dataKey,\n                maxBarSize: props.maxBarSize,\n                minPointSize,\n                stackId: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getNormalizedStackId)(props.stackId)\n            })\n    }[\"BarImpl.useMemo[barSettings]\"], [\n        props.barSize,\n        props.dataKey,\n        props.maxBarSize,\n        minPointSize,\n        props.stackId\n    ]);\n    var cells = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__.findAllByType)(props.children, _component_Cell__WEBPACK_IMPORTED_MODULE_20__.Cell);\n    var rects = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_3__.useAppSelector)({\n        \"BarImpl.useAppSelector[rects]\": (state)=>(0,_state_selectors_barSelectors__WEBPACK_IMPORTED_MODULE_21__.selectBarRectangles)(state, xAxisId, yAxisId, isPanorama, barSettings, cells)\n    }[\"BarImpl.useAppSelector[rects]\"]);\n    if (layout !== 'vertical' && layout !== 'horizontal') {\n        return null;\n    }\n    var errorBarOffset;\n    var firstDataPoint = rects === null || rects === void 0 ? void 0 : rects[0];\n    if (firstDataPoint == null || firstDataPoint.height == null || firstDataPoint.width == null) {\n        errorBarOffset = 0;\n    } else {\n        errorBarOffset = layout === 'vertical' ? firstDataPoint.height / 2 : firstDataPoint.width / 2;\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_22__.SetErrorBarContext, {\n        xAxisId: xAxisId,\n        yAxisId: yAxisId,\n        data: rects,\n        dataPointFormatter: errorBarDataPointFormatter,\n        errorBarOffset: errorBarOffset\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(BarWithState, _extends({}, props, {\n        layout: layout,\n        needClip: needClip,\n        data: rects,\n        xAxisId: xAxisId,\n        yAxisId: yAxisId,\n        hide: hide,\n        legendType: legendType,\n        minPointSize: minPointSize,\n        activeBar: activeBar,\n        animationBegin: animationBegin,\n        animationDuration: animationDuration,\n        animationEasing: animationEasing,\n        isAnimationActive: isAnimationActive\n    })));\n}\n_s4(BarImpl, \"dt/bWxNVS4RvdkWSDvjmxeLU2Vg=\", false, function() {\n    return [\n        _GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_14__.useNeedsClip,\n        _context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_18__.useChartLayout,\n        _context_PanoramaContext__WEBPACK_IMPORTED_MODULE_19__.useIsPanorama,\n        _state_hooks__WEBPACK_IMPORTED_MODULE_3__.useAppSelector\n    ];\n});\n_c4 = BarImpl;\nfunction computeBarRectangles(_ref4) {\n    var { layout, barSettings: { dataKey, minPointSize: minPointSizeProp }, pos, bandSize, xAxis, yAxis, xAxisTicks, yAxisTicks, stackedData, displayedData, offset, cells } = _ref4;\n    var numericAxis = layout === 'horizontal' ? yAxis : xAxis;\n    // @ts-expect-error this assumes that the domain is always numeric, but doesn't check for it\n    var stackedDomain = stackedData ? numericAxis.scale.domain() : null;\n    var baseValue = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getBaseValueOfBar)({\n        numericAxis\n    });\n    return displayedData.map((entry, index)=>{\n        var value, x, y, width, height, background;\n        if (stackedData) {\n            // we don't need to use dataStartIndex here, because stackedData is already sliced from the selector\n            value = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.truncateByDomain)(stackedData[index], stackedDomain);\n        } else {\n            value = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getValueByDataKey)(entry, dataKey);\n            if (!Array.isArray(value)) {\n                value = [\n                    baseValue,\n                    value\n                ];\n            }\n        }\n        var minPointSize = (0,_util_BarUtils__WEBPACK_IMPORTED_MODULE_8__.minPointSizeCallback)(minPointSizeProp, defaultMinPointSize)(value[1], index);\n        if (layout === 'horizontal') {\n            var _ref5;\n            var [baseValueScale, currentValueScale] = [\n                yAxis.scale(value[0]),\n                yAxis.scale(value[1])\n            ];\n            x = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getCateCoordinateOfBar)({\n                axis: xAxis,\n                ticks: xAxisTicks,\n                bandSize,\n                offset: pos.offset,\n                entry,\n                index\n            });\n            y = (_ref5 = currentValueScale !== null && currentValueScale !== void 0 ? currentValueScale : baseValueScale) !== null && _ref5 !== void 0 ? _ref5 : undefined;\n            width = pos.size;\n            var computedHeight = baseValueScale - currentValueScale;\n            height = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.isNan)(computedHeight) ? 0 : computedHeight;\n            background = {\n                x,\n                y: offset.top,\n                width,\n                height: offset.height\n            };\n            if (Math.abs(minPointSize) > 0 && Math.abs(height) < Math.abs(minPointSize)) {\n                var delta = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.mathSign)(height || minPointSize) * (Math.abs(minPointSize) - Math.abs(height));\n                y -= delta;\n                height += delta;\n            }\n        } else {\n            var [_baseValueScale, _currentValueScale] = [\n                xAxis.scale(value[0]),\n                xAxis.scale(value[1])\n            ];\n            x = _baseValueScale;\n            y = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getCateCoordinateOfBar)({\n                axis: yAxis,\n                ticks: yAxisTicks,\n                bandSize,\n                offset: pos.offset,\n                entry,\n                index\n            });\n            width = _currentValueScale - _baseValueScale;\n            height = pos.size;\n            background = {\n                x: offset.left,\n                y,\n                width: offset.width,\n                height\n            };\n            if (Math.abs(minPointSize) > 0 && Math.abs(width) < Math.abs(minPointSize)) {\n                var _delta = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_13__.mathSign)(width || minPointSize) * (Math.abs(minPointSize) - Math.abs(width));\n                width += _delta;\n            }\n        }\n        var barRectangleItem = _objectSpread(_objectSpread({}, entry), {}, {\n            x,\n            y,\n            width,\n            height,\n            value: stackedData ? value : value[1],\n            payload: entry,\n            background,\n            tooltipPosition: {\n                x: x + width / 2,\n                y: y + height / 2\n            }\n        }, cells && cells[index] && cells[index].props);\n        return barRectangleItem;\n    });\n}\nclass Bar extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n    render() {\n        // Report all props to Redux store first, before calling any hooks, to avoid circular dependencies.\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_22__.CartesianGraphicalItemContext, {\n            type: \"bar\",\n            data: null,\n            xAxisId: this.props.xAxisId,\n            yAxisId: this.props.yAxisId,\n            zAxisId: 0,\n            dataKey: this.props.dataKey,\n            stackId: this.props.stackId,\n            hide: this.props.hide,\n            barSize: this.props.barSize\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_state_ReportBar__WEBPACK_IMPORTED_MODULE_23__.ReportBar, null), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_state_SetLegendPayload__WEBPACK_IMPORTED_MODULE_24__.SetLegendPayload, {\n            legendPayload: computeLegendPayloadFromBarData(this.props)\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_state_SetTooltipEntrySettings__WEBPACK_IMPORTED_MODULE_25__.SetTooltipEntrySettings, {\n            fn: getTooltipEntrySettings,\n            args: this.props\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(BarImpl, this.props));\n    }\n}\n_defineProperty(Bar, \"displayName\", 'Bar');\n_defineProperty(Bar, \"defaultProps\", defaultBarProps);\nvar _c, _c1, _c2, _c3, _c4;\n$RefreshReg$(_c, \"BarBackground\");\n$RefreshReg$(_c1, \"BarRectangles\");\n$RefreshReg$(_c2, \"RectanglesWithAnimation\");\n$RefreshReg$(_c3, \"RenderRectangles\");\n$RefreshReg$(_c4, \"BarImpl\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/recharts/es6/cartesian/Bar.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/recharts/es6/cartesian/CartesianAxis.js":
/*!**************************************************************!*\
  !*** ./node_modules/recharts/es6/cartesian/CartesianAxis.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CartesianAxis: () => (/* binding */ CartesianAxis)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var es_toolkit_compat_get__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! es-toolkit/compat/get */ \"(app-pages-browser)/./node_modules/es-toolkit/compat/get.js\");\n/* harmony import */ var es_toolkit_compat_get__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(es_toolkit_compat_get__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _util_ShallowEqual__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ShallowEqual */ \"(app-pages-browser)/./node_modules/recharts/es6/util/ShallowEqual.js\");\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../container/Layer */ \"(app-pages-browser)/./node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _component_Text__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../component/Text */ \"(app-pages-browser)/./node_modules/recharts/es6/component/Text.js\");\n/* harmony import */ var _component_Label__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../component/Label */ \"(app-pages-browser)/./node_modules/recharts/es6/component/Label.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/DataUtils */ \"(app-pages-browser)/./node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util/types */ \"(app-pages-browser)/./node_modules/recharts/es6/util/types.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/ReactUtils */ \"(app-pages-browser)/./node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _getTicks__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./getTicks */ \"(app-pages-browser)/./node_modules/recharts/es6/cartesian/getTicks.js\");\nvar _excluded = [\n    \"viewBox\"\n], _excluded2 = [\n    \"viewBox\"\n];\nfunction _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function(n) {\n        for(var e = 1; e < arguments.length; e++){\n            var t = arguments[e];\n            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n        }\n        return n;\n    }, _extends.apply(null, arguments);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _objectWithoutProperties(e, t) {\n    if (null == e) return {};\n    var o, r, i = _objectWithoutPropertiesLoose(e, t);\n    if (Object.getOwnPropertySymbols) {\n        var n = Object.getOwnPropertySymbols(e);\n        for(r = 0; r < n.length; r++)o = n[r], -1 === t.indexOf(o) && ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n    }\n    return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n    if (null == r) return {};\n    var t = {};\n    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {\n        if (-1 !== e.indexOf(n)) continue;\n        t[n] = r[n];\n    }\n    return t;\n}\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n/**\n * @fileOverview Cartesian Axis\n */ \n\n\n\n\n\n\n\n\n\n\n\n/** The orientation of the axis in correspondence to the chart */ /** A unit to be appended to a value */ /** The formatter function of tick */ /*\n * `viewBox` and `scale` are SVG attributes.\n * Recharts however - unfortunately - has its own attributes named `viewBox` and `scale`\n * that are completely different data shape and different purpose.\n */ class CartesianAxis extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n    shouldComponentUpdate(_ref, nextState) {\n        var { viewBox } = _ref, restProps = _objectWithoutProperties(_ref, _excluded);\n        // props.viewBox is sometimes generated every time -\n        // check that specially as object equality is likely to fail\n        var _this$props = this.props, { viewBox: viewBoxOld } = _this$props, restPropsOld = _objectWithoutProperties(_this$props, _excluded2);\n        return !(0,_util_ShallowEqual__WEBPACK_IMPORTED_MODULE_2__.shallowEqual)(viewBox, viewBoxOld) || !(0,_util_ShallowEqual__WEBPACK_IMPORTED_MODULE_2__.shallowEqual)(restProps, restPropsOld) || !(0,_util_ShallowEqual__WEBPACK_IMPORTED_MODULE_2__.shallowEqual)(nextState, this.state);\n    }\n    /**\n   * Calculate the coordinates of endpoints in ticks\n   * @param  data The data of a simple tick\n   * @return (x1, y1): The coordinate of endpoint close to tick text\n   *  (x2, y2): The coordinate of endpoint close to axis\n   */ getTickLineCoord(data) {\n        var { x, y, width, height, orientation, tickSize, mirror, tickMargin } = this.props;\n        var x1, x2, y1, y2, tx, ty;\n        var sign = mirror ? -1 : 1;\n        var finalTickSize = data.tickSize || tickSize;\n        var tickCoord = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_3__.isNumber)(data.tickCoord) ? data.tickCoord : data.coordinate;\n        switch(orientation){\n            case 'top':\n                x1 = x2 = data.coordinate;\n                y2 = y + +!mirror * height;\n                y1 = y2 - sign * finalTickSize;\n                ty = y1 - sign * tickMargin;\n                tx = tickCoord;\n                break;\n            case 'left':\n                y1 = y2 = data.coordinate;\n                x2 = x + +!mirror * width;\n                x1 = x2 - sign * finalTickSize;\n                tx = x1 - sign * tickMargin;\n                ty = tickCoord;\n                break;\n            case 'right':\n                y1 = y2 = data.coordinate;\n                x2 = x + +mirror * width;\n                x1 = x2 + sign * finalTickSize;\n                tx = x1 + sign * tickMargin;\n                ty = tickCoord;\n                break;\n            default:\n                x1 = x2 = data.coordinate;\n                y2 = y + +mirror * height;\n                y1 = y2 + sign * finalTickSize;\n                ty = y1 + sign * tickMargin;\n                tx = tickCoord;\n                break;\n        }\n        return {\n            line: {\n                x1,\n                y1,\n                x2,\n                y2\n            },\n            tick: {\n                x: tx,\n                y: ty\n            }\n        };\n    }\n    getTickTextAnchor() {\n        var { orientation, mirror } = this.props;\n        var textAnchor;\n        switch(orientation){\n            case 'left':\n                textAnchor = mirror ? 'start' : 'end';\n                break;\n            case 'right':\n                textAnchor = mirror ? 'end' : 'start';\n                break;\n            default:\n                textAnchor = 'middle';\n                break;\n        }\n        return textAnchor;\n    }\n    getTickVerticalAnchor() {\n        var { orientation, mirror } = this.props;\n        switch(orientation){\n            case 'left':\n            case 'right':\n                return 'middle';\n            case 'top':\n                return mirror ? 'start' : 'end';\n            default:\n                return mirror ? 'end' : 'start';\n        }\n    }\n    renderAxisLine() {\n        var { x, y, width, height, orientation, mirror, axisLine } = this.props;\n        var props = _objectSpread(_objectSpread(_objectSpread({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(this.props, false)), (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(axisLine, false)), {}, {\n            fill: 'none'\n        });\n        if (orientation === 'top' || orientation === 'bottom') {\n            var needHeight = +(orientation === 'top' && !mirror || orientation === 'bottom' && mirror);\n            props = _objectSpread(_objectSpread({}, props), {}, {\n                x1: x,\n                y1: y + needHeight * height,\n                x2: x + width,\n                y2: y + needHeight * height\n            });\n        } else {\n            var needWidth = +(orientation === 'left' && !mirror || orientation === 'right' && mirror);\n            props = _objectSpread(_objectSpread({}, props), {}, {\n                x1: x + needWidth * width,\n                y1: y,\n                x2: x + needWidth * width,\n                y2: y + height\n            });\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"line\", _extends({}, props, {\n            className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)('recharts-cartesian-axis-line', es_toolkit_compat_get__WEBPACK_IMPORTED_MODULE_5___default()(axisLine, 'className'))\n        }));\n    }\n    static renderTickItem(option, props, value) {\n        var tickItem;\n        var combinedClassName = (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)(props.className, 'recharts-cartesian-axis-tick-value');\n        if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(option)) {\n            tickItem = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(option, _objectSpread(_objectSpread({}, props), {}, {\n                className: combinedClassName\n            }));\n        } else if (typeof option === 'function') {\n            tickItem = option(_objectSpread(_objectSpread({}, props), {}, {\n                className: combinedClassName\n            }));\n        } else {\n            var className = 'recharts-cartesian-axis-tick-value';\n            if (typeof option !== 'boolean') {\n                className = (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)(className, option.className);\n            }\n            tickItem = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_component_Text__WEBPACK_IMPORTED_MODULE_6__.Text, _extends({}, props, {\n                className: className\n            }), value);\n        }\n        return tickItem;\n    }\n    /**\n   * render the ticks\n   * @param {string} fontSize Fontsize to consider for tick spacing\n   * @param {string} letterSpacing Letter spacing to consider for tick spacing\n   * @param {Array} ticks The ticks to actually render (overrides what was passed in props)\n   * @return {ReactElement | null} renderedTicks\n   */ renderTicks(fontSize, letterSpacing) {\n        var ticks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n        var { tickLine, stroke, tick, tickFormatter, unit } = this.props;\n        // @ts-expect-error some properties are optional in props but required in getTicks\n        var finalTicks = (0,_getTicks__WEBPACK_IMPORTED_MODULE_7__.getTicks)(_objectSpread(_objectSpread({}, this.props), {}, {\n            ticks\n        }), fontSize, letterSpacing);\n        var textAnchor = this.getTickTextAnchor();\n        var verticalAnchor = this.getTickVerticalAnchor();\n        var axisProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(this.props, false);\n        var customTickProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(tick, false);\n        var tickLineProps = _objectSpread(_objectSpread({}, axisProps), {}, {\n            fill: 'none'\n        }, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(tickLine, false));\n        var items = finalTicks.map((entry, i)=>{\n            var { line: lineCoord, tick: tickCoord } = this.getTickLineCoord(entry);\n            var tickProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n                textAnchor,\n                verticalAnchor\n            }, axisProps), {}, {\n                stroke: 'none',\n                fill: stroke\n            }, customTickProps), tickCoord), {}, {\n                index: i,\n                payload: entry,\n                visibleTicksCount: finalTicks.length,\n                tickFormatter\n            });\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_8__.Layer, _extends({\n                className: \"recharts-cartesian-axis-tick\",\n                key: \"tick-\".concat(entry.value, \"-\").concat(entry.coordinate, \"-\").concat(entry.tickCoord)\n            }, (0,_util_types__WEBPACK_IMPORTED_MODULE_9__.adaptEventsOfChild)(this.props, entry, i)), tickLine && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"line\", _extends({}, tickLineProps, lineCoord, {\n                className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)('recharts-cartesian-axis-tick-line', es_toolkit_compat_get__WEBPACK_IMPORTED_MODULE_5___default()(tickLine, 'className'))\n            })), tick && CartesianAxis.renderTickItem(tick, tickProps, \"\".concat(typeof tickFormatter === 'function' ? tickFormatter(entry.value, i) : entry.value).concat(unit || '')));\n        });\n        return items.length > 0 ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n            className: \"recharts-cartesian-axis-ticks\"\n        }, items) : null;\n    }\n    render() {\n        var { axisLine, width, height, className, hide } = this.props;\n        if (hide) {\n            return null;\n        }\n        var { ticks } = this.props;\n        /*\n     * This is different condition from what validateWidthHeight is doing;\n     * the CartesianAxis does allow width or height to be undefined.\n     */ if (width != null && width <= 0 || height != null && height <= 0) {\n            return null;\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_8__.Layer, {\n            className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)('recharts-cartesian-axis', className),\n            ref: (_ref2)=>{\n                if (_ref2) {\n                    var tickNodes = _ref2.getElementsByClassName('recharts-cartesian-axis-tick-value');\n                    this.tickRefs.current = Array.from(tickNodes);\n                    var tick = tickNodes[0];\n                    if (tick) {\n                        var calculatedFontSize = window.getComputedStyle(tick).fontSize;\n                        var calculatedLetterSpacing = window.getComputedStyle(tick).letterSpacing;\n                        if (calculatedFontSize !== this.state.fontSize || calculatedLetterSpacing !== this.state.letterSpacing) {\n                            this.setState({\n                                fontSize: window.getComputedStyle(tick).fontSize,\n                                letterSpacing: window.getComputedStyle(tick).letterSpacing\n                            });\n                        }\n                    }\n                }\n            }\n        }, axisLine && this.renderAxisLine(), this.renderTicks(this.state.fontSize, this.state.letterSpacing, ticks), _component_Label__WEBPACK_IMPORTED_MODULE_10__.Label.renderCallByParent(this.props));\n    }\n    constructor(props){\n        super(props);\n        this.tickRefs = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createRef();\n        this.tickRefs.current = [];\n        this.state = {\n            fontSize: '',\n            letterSpacing: ''\n        };\n    }\n}\n_defineProperty(CartesianAxis, \"displayName\", 'CartesianAxis');\n_defineProperty(CartesianAxis, \"defaultProps\", {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    viewBox: {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n    },\n    // The orientation of axis\n    orientation: 'bottom',\n    // The ticks\n    ticks: [],\n    stroke: '#666',\n    tickLine: true,\n    axisLine: true,\n    tick: true,\n    mirror: false,\n    minTickGap: 5,\n    // The width or height of tick\n    tickSize: 6,\n    tickMargin: 2,\n    interval: 'preserveEnd'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/recharts/es6/cartesian/CartesianAxis.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/recharts/es6/cartesian/ErrorBar.js":
/*!*********************************************************!*\
  !*** ./node_modules/recharts/es6/cartesian/ErrorBar.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ErrorBar: () => (/* binding */ ErrorBar),\n/* harmony export */   SetErrorBarPreferredDirection: () => (/* binding */ SetErrorBarPreferredDirection)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../container/Layer */ \"(app-pages-browser)/./node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/ReactUtils */ \"(app-pages-browser)/./node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/CartesianGraphicalItemContext */ \"(app-pages-browser)/./node_modules/recharts/es6/context/CartesianGraphicalItemContext.js\");\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hooks */ \"(app-pages-browser)/./node_modules/recharts/es6/hooks.js\");\n/* harmony import */ var _util_resolveDefaultProps__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/resolveDefaultProps */ \"(app-pages-browser)/./node_modules/recharts/es6/util/resolveDefaultProps.js\");\n/* harmony import */ var _animation_Animate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../animation/Animate */ \"(app-pages-browser)/./node_modules/recharts/es6/animation/Animate.js\");\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\nvar _excluded = [\n    \"direction\",\n    \"width\",\n    \"dataKey\",\n    \"isAnimationActive\",\n    \"animationBegin\",\n    \"animationDuration\",\n    \"animationEasing\"\n];\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function(n) {\n        for(var e = 1; e < arguments.length; e++){\n            var t = arguments[e];\n            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n        }\n        return n;\n    }, _extends.apply(null, arguments);\n}\nfunction _objectWithoutProperties(e, t) {\n    if (null == e) return {};\n    var o, r, i = _objectWithoutPropertiesLoose(e, t);\n    if (Object.getOwnPropertySymbols) {\n        var n = Object.getOwnPropertySymbols(e);\n        for(r = 0; r < n.length; r++)o = n[r], -1 === t.indexOf(o) && ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n    }\n    return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n    if (null == r) return {};\n    var t = {};\n    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {\n        if (-1 !== e.indexOf(n)) continue;\n        t[n] = r[n];\n    }\n    return t;\n}\n/**\n * @fileOverview Render a group of error bar\n */ \n\n\n\n\n\n\n\n/**\n * So usually the direction is decided by the chart layout.\n * Horizontal layout means error bars are vertical means direction=y\n * Vertical layout means error bars are horizontal means direction=x\n *\n * Except! In Scatter chart, error bars can go both ways.\n *\n * So this property is only ever used in Scatter chart, and ignored elsewhere.\n */ /**\n * External ErrorBar props, visible for users of the library\n */ /**\n * Props after defaults, and required props have been applied.\n */ function ErrorBarImpl(props) {\n    _s();\n    var { direction, width, dataKey, isAnimationActive, animationBegin, animationDuration, animationEasing } = props, others = _objectWithoutProperties(props, _excluded);\n    var svgProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_1__.filterProps)(others, false);\n    var { data, dataPointFormatter, xAxisId, yAxisId, errorBarOffset: offset } = (0,_context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_2__.useErrorBarContext)();\n    var xAxis = (0,_hooks__WEBPACK_IMPORTED_MODULE_3__.useXAxis)(xAxisId);\n    var yAxis = (0,_hooks__WEBPACK_IMPORTED_MODULE_3__.useYAxis)(yAxisId);\n    if ((xAxis === null || xAxis === void 0 ? void 0 : xAxis.scale) == null || (yAxis === null || yAxis === void 0 ? void 0 : yAxis.scale) == null || data == null) {\n        return null;\n    }\n    // ErrorBar requires type number XAxis, why?\n    if (direction === 'x' && xAxis.type !== 'number') {\n        return null;\n    }\n    var errorBars = data.map((entry)=>{\n        var { x, y, value, errorVal } = dataPointFormatter(entry, dataKey, direction);\n        if (!errorVal) {\n            return null;\n        }\n        var lineCoordinates = [];\n        var lowBound, highBound;\n        if (Array.isArray(errorVal)) {\n            [lowBound, highBound] = errorVal;\n        } else {\n            lowBound = highBound = errorVal;\n        }\n        if (direction === 'x') {\n            // error bar for horizontal charts, the y is fixed, x is a range value\n            var { scale } = xAxis;\n            var yMid = y + offset;\n            var yMin = yMid + width;\n            var yMax = yMid - width;\n            var xMin = scale(value - lowBound);\n            var xMax = scale(value + highBound);\n            // the right line of |--|\n            lineCoordinates.push({\n                x1: xMax,\n                y1: yMin,\n                x2: xMax,\n                y2: yMax\n            });\n            // the middle line of |--|\n            lineCoordinates.push({\n                x1: xMin,\n                y1: yMid,\n                x2: xMax,\n                y2: yMid\n            });\n            // the left line of |--|\n            lineCoordinates.push({\n                x1: xMin,\n                y1: yMin,\n                x2: xMin,\n                y2: yMax\n            });\n        } else if (direction === 'y') {\n            // error bar for horizontal charts, the x is fixed, y is a range value\n            var { scale: _scale } = yAxis;\n            var xMid = x + offset;\n            var _xMin = xMid - width;\n            var _xMax = xMid + width;\n            var _yMin = _scale(value - lowBound);\n            var _yMax = _scale(value + highBound);\n            // the top line\n            lineCoordinates.push({\n                x1: _xMin,\n                y1: _yMax,\n                x2: _xMax,\n                y2: _yMax\n            });\n            // the middle line\n            lineCoordinates.push({\n                x1: xMid,\n                y1: _yMin,\n                x2: xMid,\n                y2: _yMax\n            });\n            // the bottom line\n            lineCoordinates.push({\n                x1: _xMin,\n                y1: _yMin,\n                x2: _xMax,\n                y2: _yMin\n            });\n        }\n        var transformOrigin = \"\".concat(x + offset, \"px \").concat(y + offset, \"px\");\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_4__.Layer, _extends({\n            className: \"recharts-errorBar\",\n            key: \"bar-\".concat(lineCoordinates.map((c)=>\"\".concat(c.x1, \"-\").concat(c.x2, \"-\").concat(c.y1, \"-\").concat(c.y2)))\n        }, svgProps), lineCoordinates.map((coordinates)=>{\n            var lineStyle = isAnimationActive ? {\n                transformOrigin: \"\".concat(coordinates.x1 - 5, \"px\")\n            } : undefined;\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_animation_Animate__WEBPACK_IMPORTED_MODULE_5__.Animate, {\n                from: {\n                    transform: 'scaleY(0)',\n                    transformOrigin\n                },\n                to: {\n                    transform: 'scaleY(1)',\n                    transformOrigin\n                },\n                begin: animationBegin,\n                easing: animationEasing,\n                isActive: isAnimationActive,\n                duration: animationDuration,\n                key: \"line-\".concat(coordinates.x1, \"-\").concat(coordinates.x2, \"-\").concat(coordinates.y1, \"-\").concat(coordinates.y2),\n                style: {\n                    transformOrigin\n                }\n            }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"line\", _extends({}, coordinates, {\n                style: lineStyle\n            })));\n        }));\n    });\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_4__.Layer, {\n        className: \"recharts-errorBars\"\n    }, errorBars);\n}\n_s(ErrorBarImpl, \"Sb+xcAnZJns9+GxJOM9IyXGTcrA=\", false, function() {\n    return [\n        _context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_2__.useErrorBarContext,\n        _hooks__WEBPACK_IMPORTED_MODULE_3__.useXAxis,\n        _hooks__WEBPACK_IMPORTED_MODULE_3__.useYAxis\n    ];\n});\n_c = ErrorBarImpl;\nvar ErrorBarPreferredDirection = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\nfunction useErrorBarDirection(directionFromProps) {\n    _s1();\n    var preferredDirection = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ErrorBarPreferredDirection);\n    if (directionFromProps != null) {\n        return directionFromProps;\n    }\n    if (preferredDirection != null) {\n        return preferredDirection;\n    }\n    return 'x';\n}\n_s1(useErrorBarDirection, \"O53bhh3r5KrzNYywhTkN8mKfTN0=\");\nfunction SetErrorBarPreferredDirection(_ref) {\n    var { direction, children } = _ref;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorBarPreferredDirection.Provider, {\n        value: direction\n    }, children);\n}\n_c1 = SetErrorBarPreferredDirection;\nvar errorBarDefaultProps = {\n    stroke: 'black',\n    strokeWidth: 1.5,\n    width: 5,\n    offset: 0,\n    isAnimationActive: true,\n    animationBegin: 0,\n    animationDuration: 400,\n    animationEasing: 'ease-in-out'\n};\nfunction ErrorBarInternal(props) {\n    _s2();\n    var realDirection = useErrorBarDirection(props.direction);\n    var { width, isAnimationActive, animationBegin, animationDuration, animationEasing } = (0,_util_resolveDefaultProps__WEBPACK_IMPORTED_MODULE_6__.resolveDefaultProps)(props, errorBarDefaultProps);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_2__.ReportErrorBarSettings, {\n        dataKey: props.dataKey,\n        direction: realDirection\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorBarImpl, _extends({}, props, {\n        direction: realDirection,\n        width: width,\n        isAnimationActive: isAnimationActive,\n        animationBegin: animationBegin,\n        animationDuration: animationDuration,\n        animationEasing: animationEasing\n    })));\n}\n_s2(ErrorBarInternal, \"iGntWD5fn74zxfsjCPw6UybAZgc=\", false, function() {\n    return [\n        useErrorBarDirection\n    ];\n});\n_c2 = ErrorBarInternal;\n// eslint-disable-next-line react/prefer-stateless-function\nclass ErrorBar extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n    render() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorBarInternal, this.props);\n    }\n}\n_defineProperty(ErrorBar, \"defaultProps\", errorBarDefaultProps);\n_defineProperty(ErrorBar, \"displayName\", 'ErrorBar');\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"ErrorBarImpl\");\n$RefreshReg$(_c1, \"SetErrorBarPreferredDirection\");\n$RefreshReg$(_c2, \"ErrorBarInternal\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWNoYXJ0cy9lczYvY2FydGVzaWFuL0Vycm9yQmFyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsWUFBWTtJQUFDO0lBQWE7SUFBUztJQUFXO0lBQXFCO0lBQWtCO0lBQXFCO0NBQWtCO0FBQ2hJLFNBQVNDLGdCQUFnQkMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUM7SUFBSSxPQUFPLENBQUNELElBQUlFLGVBQWVGLEVBQUMsS0FBTUQsSUFBSUksT0FBT0MsY0FBYyxDQUFDTCxHQUFHQyxHQUFHO1FBQUVLLE9BQU9KO1FBQUdLLFlBQVksQ0FBQztRQUFHQyxjQUFjLENBQUM7UUFBR0MsVUFBVSxDQUFDO0lBQUUsS0FBS1QsQ0FBQyxDQUFDQyxFQUFFLEdBQUdDLEdBQUdGO0FBQUc7QUFDbkwsU0FBU0csZUFBZUQsQ0FBQztJQUFJLElBQUlRLElBQUlDLGFBQWFULEdBQUc7SUFBVyxPQUFPLFlBQVksT0FBT1EsSUFBSUEsSUFBSUEsSUFBSTtBQUFJO0FBQzFHLFNBQVNDLGFBQWFULENBQUMsRUFBRUQsQ0FBQztJQUFJLElBQUksWUFBWSxPQUFPQyxLQUFLLENBQUNBLEdBQUcsT0FBT0E7SUFBRyxJQUFJRixJQUFJRSxDQUFDLENBQUNVLE9BQU9DLFdBQVcsQ0FBQztJQUFFLElBQUksS0FBSyxNQUFNYixHQUFHO1FBQUUsSUFBSVUsSUFBSVYsRUFBRWMsSUFBSSxDQUFDWixHQUFHRCxLQUFLO1FBQVksSUFBSSxZQUFZLE9BQU9TLEdBQUcsT0FBT0E7UUFBRyxNQUFNLElBQUlLLFVBQVU7SUFBaUQ7SUFBRSxPQUFPLENBQUMsYUFBYWQsSUFBSWUsU0FBU0MsTUFBSyxFQUFHZjtBQUFJO0FBQ3ZULFNBQVNnQjtJQUFhLE9BQU9BLFdBQVdkLE9BQU9lLE1BQU0sR0FBR2YsT0FBT2UsTUFBTSxDQUFDQyxJQUFJLEtBQUssU0FBVUMsQ0FBQztRQUFJLElBQUssSUFBSXJCLElBQUksR0FBR0EsSUFBSXNCLFVBQVVDLE1BQU0sRUFBRXZCLElBQUs7WUFBRSxJQUFJRSxJQUFJb0IsU0FBUyxDQUFDdEIsRUFBRTtZQUFFLElBQUssSUFBSUMsS0FBS0MsRUFBRyxDQUFDLENBQUMsR0FBR3NCLGNBQWMsQ0FBQ1YsSUFBSSxDQUFDWixHQUFHRCxNQUFPb0IsQ0FBQUEsQ0FBQyxDQUFDcEIsRUFBRSxHQUFHQyxDQUFDLENBQUNELEVBQUU7UUFBRztRQUFFLE9BQU9vQjtJQUFHLEdBQUdILFNBQVNPLEtBQUssQ0FBQyxNQUFNSDtBQUFZO0FBQ25SLFNBQVNJLHlCQUF5QjFCLENBQUMsRUFBRUUsQ0FBQztJQUFJLElBQUksUUFBUUYsR0FBRyxPQUFPLENBQUM7SUFBRyxJQUFJMkIsR0FBRzFCLEdBQUdTLElBQUlrQiw4QkFBOEI1QixHQUFHRTtJQUFJLElBQUlFLE9BQU95QixxQkFBcUIsRUFBRTtRQUFFLElBQUlSLElBQUlqQixPQUFPeUIscUJBQXFCLENBQUM3QjtRQUFJLElBQUtDLElBQUksR0FBR0EsSUFBSW9CLEVBQUVFLE1BQU0sRUFBRXRCLElBQUswQixJQUFJTixDQUFDLENBQUNwQixFQUFFLEVBQUUsQ0FBQyxNQUFNQyxFQUFFNEIsT0FBTyxDQUFDSCxNQUFNLEVBQUMsR0FBRUksb0JBQW9CLENBQUNqQixJQUFJLENBQUNkLEdBQUcyQixNQUFPakIsQ0FBQUEsQ0FBQyxDQUFDaUIsRUFBRSxHQUFHM0IsQ0FBQyxDQUFDMkIsRUFBRTtJQUFHO0lBQUUsT0FBT2pCO0FBQUc7QUFDclUsU0FBU2tCLDhCQUE4QjNCLENBQUMsRUFBRUQsQ0FBQztJQUFJLElBQUksUUFBUUMsR0FBRyxPQUFPLENBQUM7SUFBRyxJQUFJQyxJQUFJLENBQUM7SUFBRyxJQUFLLElBQUltQixLQUFLcEIsRUFBRyxJQUFJLEVBQUMsR0FBRXVCLGNBQWMsQ0FBQ1YsSUFBSSxDQUFDYixHQUFHb0IsSUFBSTtRQUFFLElBQUksQ0FBQyxNQUFNckIsRUFBRThCLE9BQU8sQ0FBQ1QsSUFBSTtRQUFVbkIsQ0FBQyxDQUFDbUIsRUFBRSxHQUFHcEIsQ0FBQyxDQUFDb0IsRUFBRTtJQUFFO0lBQUUsT0FBT25CO0FBQUc7QUFDdE07O0NBRUMsR0FDOEI7QUFDOEI7QUFDbEI7QUFDTTtBQUNxRDtBQUN4RDtBQUNvQjtBQUNuQjtBQUUvQzs7Ozs7Ozs7Q0FRQyxHQUVEOztDQUVDLEdBRUQ7O0NBRUMsR0FFRCxTQUFTMEMsYUFBYUMsS0FBSzs7SUFDekIsSUFBSSxFQUNBQyxTQUFTLEVBQ1RDLEtBQUssRUFDTEMsT0FBTyxFQUNQQyxpQkFBaUIsRUFDakJDLGNBQWMsRUFDZEMsaUJBQWlCLEVBQ2pCQyxlQUFlLEVBQ2hCLEdBQUdQLE9BQ0pRLFNBQVMzQix5QkFBeUJtQixPQUFPL0M7SUFDM0MsSUFBSXdELFdBQVdqQiw2REFBV0EsQ0FBQ2dCLFFBQVE7SUFDbkMsSUFBSSxFQUNGRSxJQUFJLEVBQ0pDLGtCQUFrQixFQUNsQkMsT0FBTyxFQUNQQyxPQUFPLEVBQ1BDLGdCQUFnQkMsTUFBTSxFQUN2QixHQUFHckIsMEZBQWtCQTtJQUN0QixJQUFJc0IsUUFBUXJCLGdEQUFRQSxDQUFDaUI7SUFDckIsSUFBSUssUUFBUXJCLGdEQUFRQSxDQUFDaUI7SUFDckIsSUFBSSxDQUFDRyxVQUFVLFFBQVFBLFVBQVUsS0FBSyxJQUFJLEtBQUssSUFBSUEsTUFBTUUsS0FBSyxLQUFLLFFBQVEsQ0FBQ0QsVUFBVSxRQUFRQSxVQUFVLEtBQUssSUFBSSxLQUFLLElBQUlBLE1BQU1DLEtBQUssS0FBSyxRQUFRUixRQUFRLE1BQU07UUFDOUosT0FBTztJQUNUO0lBRUEsNENBQTRDO0lBQzVDLElBQUlULGNBQWMsT0FBT2UsTUFBTUcsSUFBSSxLQUFLLFVBQVU7UUFDaEQsT0FBTztJQUNUO0lBQ0EsSUFBSUMsWUFBWVYsS0FBS1csR0FBRyxDQUFDQyxDQUFBQTtRQUN2QixJQUFJLEVBQ0ZDLENBQUMsRUFDREMsQ0FBQyxFQUNEL0QsS0FBSyxFQUNMZ0UsUUFBUSxFQUNULEdBQUdkLG1CQUFtQlcsT0FBT25CLFNBQVNGO1FBQ3ZDLElBQUksQ0FBQ3dCLFVBQVU7WUFDYixPQUFPO1FBQ1Q7UUFDQSxJQUFJQyxrQkFBa0IsRUFBRTtRQUN4QixJQUFJQyxVQUFVQztRQUNkLElBQUlDLE1BQU1DLE9BQU8sQ0FBQ0wsV0FBVztZQUMzQixDQUFDRSxVQUFVQyxVQUFVLEdBQUdIO1FBQzFCLE9BQU87WUFDTEUsV0FBV0MsWUFBWUg7UUFDekI7UUFDQSxJQUFJeEIsY0FBYyxLQUFLO1lBQ3JCLHNFQUFzRTtZQUN0RSxJQUFJLEVBQ0ZpQixLQUFLLEVBQ04sR0FBR0Y7WUFDSixJQUFJZSxPQUFPUCxJQUFJVDtZQUNmLElBQUlpQixPQUFPRCxPQUFPN0I7WUFDbEIsSUFBSStCLE9BQU9GLE9BQU83QjtZQUNsQixJQUFJZ0MsT0FBT2hCLE1BQU16RCxRQUFRa0U7WUFDekIsSUFBSVEsT0FBT2pCLE1BQU16RCxRQUFRbUU7WUFFekIseUJBQXlCO1lBQ3pCRixnQkFBZ0JVLElBQUksQ0FBQztnQkFDbkJDLElBQUlGO2dCQUNKRyxJQUFJTjtnQkFDSk8sSUFBSUo7Z0JBQ0pLLElBQUlQO1lBQ047WUFDQSwwQkFBMEI7WUFDMUJQLGdCQUFnQlUsSUFBSSxDQUFDO2dCQUNuQkMsSUFBSUg7Z0JBQ0pJLElBQUlQO2dCQUNKUSxJQUFJSjtnQkFDSkssSUFBSVQ7WUFDTjtZQUNBLHdCQUF3QjtZQUN4QkwsZ0JBQWdCVSxJQUFJLENBQUM7Z0JBQ25CQyxJQUFJSDtnQkFDSkksSUFBSU47Z0JBQ0pPLElBQUlMO2dCQUNKTSxJQUFJUDtZQUNOO1FBQ0YsT0FBTyxJQUFJaEMsY0FBYyxLQUFLO1lBQzVCLHNFQUFzRTtZQUN0RSxJQUFJLEVBQ0ZpQixPQUFPdUIsTUFBTSxFQUNkLEdBQUd4QjtZQUNKLElBQUl5QixPQUFPbkIsSUFBSVI7WUFDZixJQUFJNEIsUUFBUUQsT0FBT3hDO1lBQ25CLElBQUkwQyxRQUFRRixPQUFPeEM7WUFDbkIsSUFBSTJDLFFBQVFKLE9BQU9oRixRQUFRa0U7WUFDM0IsSUFBSW1CLFFBQVFMLE9BQU9oRixRQUFRbUU7WUFFM0IsZUFBZTtZQUNmRixnQkFBZ0JVLElBQUksQ0FBQztnQkFDbkJDLElBQUlNO2dCQUNKTCxJQUFJUTtnQkFDSlAsSUFBSUs7Z0JBQ0pKLElBQUlNO1lBQ047WUFDQSxrQkFBa0I7WUFDbEJwQixnQkFBZ0JVLElBQUksQ0FBQztnQkFDbkJDLElBQUlLO2dCQUNKSixJQUFJTztnQkFDSk4sSUFBSUc7Z0JBQ0pGLElBQUlNO1lBQ047WUFDQSxrQkFBa0I7WUFDbEJwQixnQkFBZ0JVLElBQUksQ0FBQztnQkFDbkJDLElBQUlNO2dCQUNKTCxJQUFJTztnQkFDSk4sSUFBSUs7Z0JBQ0pKLElBQUlLO1lBQ047UUFDRjtRQUNBLElBQUlFLGtCQUFrQixHQUFHQyxNQUFNLENBQUN6QixJQUFJUixRQUFRLE9BQU9pQyxNQUFNLENBQUN4QixJQUFJVCxRQUFRO1FBQ3RFLE9BQU8sV0FBVyxHQUFFNUIsZ0RBQW1CLENBQUNJLG1EQUFLQSxFQUFFbEIsU0FBUztZQUN0RDZFLFdBQVc7WUFDWEMsS0FBSyxPQUFPSCxNQUFNLENBQUN0QixnQkFBZ0JMLEdBQUcsQ0FBQytCLENBQUFBLElBQUssR0FBR0osTUFBTSxDQUFDSSxFQUFFZixFQUFFLEVBQUUsS0FBS1csTUFBTSxDQUFDSSxFQUFFYixFQUFFLEVBQUUsS0FBS1MsTUFBTSxDQUFDSSxFQUFFZCxFQUFFLEVBQUUsS0FBS1UsTUFBTSxDQUFDSSxFQUFFWixFQUFFO1FBQ2xILEdBQUcvQixXQUFXaUIsZ0JBQWdCTCxHQUFHLENBQUNnQyxDQUFBQTtZQUNoQyxJQUFJQyxZQUFZbEQsb0JBQW9CO2dCQUNsQzJDLGlCQUFpQixHQUFHQyxNQUFNLENBQUNLLFlBQVloQixFQUFFLEdBQUcsR0FBRztZQUNqRCxJQUFJa0I7WUFDSixPQUFPLFdBQVcsR0FBRXBFLGdEQUFtQixDQUFDVyx1REFBT0EsRUFBRTtnQkFDL0MwRCxNQUFNO29CQUNKQyxXQUFXO29CQUNYVjtnQkFDRjtnQkFDQVcsSUFBSTtvQkFDRkQsV0FBVztvQkFDWFY7Z0JBQ0Y7Z0JBQ0FZLE9BQU90RDtnQkFDUHVELFFBQVFyRDtnQkFDUnNELFVBQVV6RDtnQkFDVjBELFVBQVV4RDtnQkFDVjZDLEtBQUssUUFBUUgsTUFBTSxDQUFDSyxZQUFZaEIsRUFBRSxFQUFFLEtBQUtXLE1BQU0sQ0FBQ0ssWUFBWWQsRUFBRSxFQUFFLEtBQUtTLE1BQU0sQ0FBQ0ssWUFBWWYsRUFBRSxFQUFFLEtBQUtVLE1BQU0sQ0FBQ0ssWUFBWWIsRUFBRTtnQkFHdEh1QixPQUFPO29CQUNMaEI7Z0JBQ0Y7WUFDRixHQUFHLFdBQVcsR0FBRTVELGdEQUFtQixDQUFDLFFBQVFkLFNBQVMsQ0FBQyxHQUFHZ0YsYUFBYTtnQkFDcEVVLE9BQU9UO1lBQ1Q7UUFDRjtJQUNGO0lBQ0EsT0FBTyxXQUFXLEdBQUVuRSxnREFBbUIsQ0FBQ0ksbURBQUtBLEVBQUU7UUFDN0MyRCxXQUFXO0lBQ2IsR0FBRzlCO0FBQ0w7R0FsSlNyQjs7UUFrQkhMLHNGQUFrQkE7UUFDVkMsNENBQVFBO1FBQ1JDLDRDQUFRQTs7O0tBcEJiRztBQW1KVCxJQUFJaUUsNkJBQTZCLFdBQVcsR0FBRTNFLG9EQUFhQSxDQUFDa0U7QUFDNUQsU0FBU1UscUJBQXFCQyxrQkFBa0I7O0lBQzlDLElBQUlDLHFCQUFxQjdFLGlEQUFVQSxDQUFDMEU7SUFDcEMsSUFBSUUsc0JBQXNCLE1BQU07UUFDOUIsT0FBT0E7SUFDVDtJQUNBLElBQUlDLHNCQUFzQixNQUFNO1FBQzlCLE9BQU9BO0lBQ1Q7SUFDQSxPQUFPO0FBQ1Q7SUFUU0Y7QUFVRixTQUFTRyw4QkFBOEJDLElBQUk7SUFDaEQsSUFBSSxFQUNGcEUsU0FBUyxFQUNUcUUsUUFBUSxFQUNULEdBQUdEO0lBQ0osT0FBTyxXQUFXLEdBQUVsRixnREFBbUIsQ0FBQzZFLDJCQUEyQk8sUUFBUSxFQUFFO1FBQzNFOUcsT0FBT3dDO0lBQ1QsR0FBR3FFO0FBQ0w7TUFSZ0JGO0FBU2hCLElBQUlJLHVCQUF1QjtJQUN6QkMsUUFBUTtJQUNSQyxhQUFhO0lBQ2J4RSxPQUFPO0lBQ1BhLFFBQVE7SUFDUlgsbUJBQW1CO0lBQ25CQyxnQkFBZ0I7SUFDaEJDLG1CQUFtQjtJQUNuQkMsaUJBQWlCO0FBQ25CO0FBQ0EsU0FBU29FLGlCQUFpQjNFLEtBQUs7O0lBQzdCLElBQUk0RSxnQkFBZ0JYLHFCQUFxQmpFLE1BQU1DLFNBQVM7SUFDeEQsSUFBSSxFQUNGQyxLQUFLLEVBQ0xFLGlCQUFpQixFQUNqQkMsY0FBYyxFQUNkQyxpQkFBaUIsRUFDakJDLGVBQWUsRUFDaEIsR0FBR1YsOEVBQW1CQSxDQUFDRyxPQUFPd0U7SUFDL0IsT0FBTyxXQUFXLEdBQUVyRixnREFBbUIsQ0FBQ0EsMkNBQWMsRUFBRSxNQUFNLFdBQVcsR0FBRUEsZ0RBQW1CLENBQUNNLDBGQUFzQkEsRUFBRTtRQUNySFUsU0FBU0gsTUFBTUcsT0FBTztRQUN0QkYsV0FBVzJFO0lBQ2IsSUFBSSxXQUFXLEdBQUV6RixnREFBbUIsQ0FBQ1ksY0FBYzFCLFNBQVMsQ0FBQyxHQUFHMkIsT0FBTztRQUNyRUMsV0FBVzJFO1FBQ1gxRSxPQUFPQTtRQUNQRSxtQkFBbUJBO1FBQ25CQyxnQkFBZ0JBO1FBQ2hCQyxtQkFBbUJBO1FBQ25CQyxpQkFBaUJBO0lBQ25CO0FBQ0Y7SUFwQlNvRTs7UUFDYVY7OztNQURiVTtBQXNCVCwyREFBMkQ7QUFDcEQsTUFBTUcsaUJBQWlCMUYsNENBQVNBO0lBQ3JDMkYsU0FBUztRQUNQLE9BQU8sV0FBVyxHQUFFNUYsZ0RBQW1CLENBQUN3RixrQkFBa0IsSUFBSSxDQUFDM0UsS0FBSztJQUN0RTtBQUNGO0FBQ0E5QyxnQkFBZ0I0SCxVQUFVLGdCQUFnQk47QUFDMUN0SCxnQkFBZ0I0SCxVQUFVLGVBQWUiLCJzb3VyY2VzIjpbIi9yb290L2h5cGVyc3luYy1jbGllbnQtcHl0aG9uL2Zyb250ZW5kLWRlcGxveW1lbnQvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi9jYXJ0ZXNpYW4vRXJyb3JCYXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9leGNsdWRlZCA9IFtcImRpcmVjdGlvblwiLCBcIndpZHRoXCIsIFwiZGF0YUtleVwiLCBcImlzQW5pbWF0aW9uQWN0aXZlXCIsIFwiYW5pbWF0aW9uQmVnaW5cIiwgXCJhbmltYXRpb25EdXJhdGlvblwiLCBcImFuaW1hdGlvbkVhc2luZ1wiXTtcbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShlLCByLCB0KSB7IHJldHVybiAociA9IF90b1Byb3BlcnR5S2V5KHIpKSBpbiBlID8gT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIHIsIHsgdmFsdWU6IHQsIGVudW1lcmFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwLCB3cml0YWJsZTogITAgfSkgOiBlW3JdID0gdCwgZTsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkodCkgeyB2YXIgaSA9IF90b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTsgcmV0dXJuIFwic3ltYm9sXCIgPT0gdHlwZW9mIGkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IHR5cGVvZiB0IHx8ICF0KSByZXR1cm4gdDsgdmFyIGUgPSB0W1N5bWJvbC50b1ByaW1pdGl2ZV07IGlmICh2b2lkIDAgIT09IGUpIHsgdmFyIGkgPSBlLmNhbGwodCwgciB8fCBcImRlZmF1bHRcIik7IGlmIChcIm9iamVjdFwiICE9IHR5cGVvZiBpKSByZXR1cm4gaTsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpOyB9IHJldHVybiAoXCJzdHJpbmdcIiA9PT0gciA/IFN0cmluZyA6IE51bWJlcikodCk7IH1cbmZ1bmN0aW9uIF9leHRlbmRzKCkgeyByZXR1cm4gX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduID8gT2JqZWN0LmFzc2lnbi5iaW5kKCkgOiBmdW5jdGlvbiAobikgeyBmb3IgKHZhciBlID0gMTsgZSA8IGFyZ3VtZW50cy5sZW5ndGg7IGUrKykgeyB2YXIgdCA9IGFyZ3VtZW50c1tlXTsgZm9yICh2YXIgciBpbiB0KSAoe30pLmhhc093blByb3BlcnR5LmNhbGwodCwgcikgJiYgKG5bcl0gPSB0W3JdKTsgfSByZXR1cm4gbjsgfSwgX2V4dGVuZHMuYXBwbHkobnVsbCwgYXJndW1lbnRzKTsgfVxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKGUsIHQpIHsgaWYgKG51bGwgPT0gZSkgcmV0dXJuIHt9OyB2YXIgbywgciwgaSA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKGUsIHQpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgbiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7IGZvciAociA9IDA7IHIgPCBuLmxlbmd0aDsgcisrKSBvID0gbltyXSwgLTEgPT09IHQuaW5kZXhPZihvKSAmJiB7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKGUsIG8pICYmIChpW29dID0gZVtvXSk7IH0gcmV0dXJuIGk7IH1cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHIsIGUpIHsgaWYgKG51bGwgPT0gcikgcmV0dXJuIHt9OyB2YXIgdCA9IHt9OyBmb3IgKHZhciBuIGluIHIpIGlmICh7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHIsIG4pKSB7IGlmICgtMSAhPT0gZS5pbmRleE9mKG4pKSBjb250aW51ZTsgdFtuXSA9IHJbbl07IH0gcmV0dXJuIHQ7IH1cbi8qKlxuICogQGZpbGVPdmVydmlldyBSZW5kZXIgYSBncm91cCBvZiBlcnJvciBiYXJcbiAqL1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgTGF5ZXIgfSBmcm9tICcuLi9jb250YWluZXIvTGF5ZXInO1xuaW1wb3J0IHsgZmlsdGVyUHJvcHMgfSBmcm9tICcuLi91dGlsL1JlYWN0VXRpbHMnO1xuaW1wb3J0IHsgUmVwb3J0RXJyb3JCYXJTZXR0aW5ncywgdXNlRXJyb3JCYXJDb250ZXh0IH0gZnJvbSAnLi4vY29udGV4dC9DYXJ0ZXNpYW5HcmFwaGljYWxJdGVtQ29udGV4dCc7XG5pbXBvcnQgeyB1c2VYQXhpcywgdXNlWUF4aXMgfSBmcm9tICcuLi9ob29rcyc7XG5pbXBvcnQgeyByZXNvbHZlRGVmYXVsdFByb3BzIH0gZnJvbSAnLi4vdXRpbC9yZXNvbHZlRGVmYXVsdFByb3BzJztcbmltcG9ydCB7IEFuaW1hdGUgfSBmcm9tICcuLi9hbmltYXRpb24vQW5pbWF0ZSc7XG5cbi8qKlxuICogU28gdXN1YWxseSB0aGUgZGlyZWN0aW9uIGlzIGRlY2lkZWQgYnkgdGhlIGNoYXJ0IGxheW91dC5cbiAqIEhvcml6b250YWwgbGF5b3V0IG1lYW5zIGVycm9yIGJhcnMgYXJlIHZlcnRpY2FsIG1lYW5zIGRpcmVjdGlvbj15XG4gKiBWZXJ0aWNhbCBsYXlvdXQgbWVhbnMgZXJyb3IgYmFycyBhcmUgaG9yaXpvbnRhbCBtZWFucyBkaXJlY3Rpb249eFxuICpcbiAqIEV4Y2VwdCEgSW4gU2NhdHRlciBjaGFydCwgZXJyb3IgYmFycyBjYW4gZ28gYm90aCB3YXlzLlxuICpcbiAqIFNvIHRoaXMgcHJvcGVydHkgaXMgb25seSBldmVyIHVzZWQgaW4gU2NhdHRlciBjaGFydCwgYW5kIGlnbm9yZWQgZWxzZXdoZXJlLlxuICovXG5cbi8qKlxuICogRXh0ZXJuYWwgRXJyb3JCYXIgcHJvcHMsIHZpc2libGUgZm9yIHVzZXJzIG9mIHRoZSBsaWJyYXJ5XG4gKi9cblxuLyoqXG4gKiBQcm9wcyBhZnRlciBkZWZhdWx0cywgYW5kIHJlcXVpcmVkIHByb3BzIGhhdmUgYmVlbiBhcHBsaWVkLlxuICovXG5cbmZ1bmN0aW9uIEVycm9yQmFySW1wbChwcm9wcykge1xuICB2YXIge1xuICAgICAgZGlyZWN0aW9uLFxuICAgICAgd2lkdGgsXG4gICAgICBkYXRhS2V5LFxuICAgICAgaXNBbmltYXRpb25BY3RpdmUsXG4gICAgICBhbmltYXRpb25CZWdpbixcbiAgICAgIGFuaW1hdGlvbkR1cmF0aW9uLFxuICAgICAgYW5pbWF0aW9uRWFzaW5nXG4gICAgfSA9IHByb3BzLFxuICAgIG90aGVycyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhwcm9wcywgX2V4Y2x1ZGVkKTtcbiAgdmFyIHN2Z1Byb3BzID0gZmlsdGVyUHJvcHMob3RoZXJzLCBmYWxzZSk7XG4gIHZhciB7XG4gICAgZGF0YSxcbiAgICBkYXRhUG9pbnRGb3JtYXR0ZXIsXG4gICAgeEF4aXNJZCxcbiAgICB5QXhpc0lkLFxuICAgIGVycm9yQmFyT2Zmc2V0OiBvZmZzZXRcbiAgfSA9IHVzZUVycm9yQmFyQ29udGV4dCgpO1xuICB2YXIgeEF4aXMgPSB1c2VYQXhpcyh4QXhpc0lkKTtcbiAgdmFyIHlBeGlzID0gdXNlWUF4aXMoeUF4aXNJZCk7XG4gIGlmICgoeEF4aXMgPT09IG51bGwgfHwgeEF4aXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHhBeGlzLnNjYWxlKSA9PSBudWxsIHx8ICh5QXhpcyA9PT0gbnVsbCB8fCB5QXhpcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogeUF4aXMuc2NhbGUpID09IG51bGwgfHwgZGF0YSA9PSBudWxsKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICAvLyBFcnJvckJhciByZXF1aXJlcyB0eXBlIG51bWJlciBYQXhpcywgd2h5P1xuICBpZiAoZGlyZWN0aW9uID09PSAneCcgJiYgeEF4aXMudHlwZSAhPT0gJ251bWJlcicpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICB2YXIgZXJyb3JCYXJzID0gZGF0YS5tYXAoZW50cnkgPT4ge1xuICAgIHZhciB7XG4gICAgICB4LFxuICAgICAgeSxcbiAgICAgIHZhbHVlLFxuICAgICAgZXJyb3JWYWxcbiAgICB9ID0gZGF0YVBvaW50Rm9ybWF0dGVyKGVudHJ5LCBkYXRhS2V5LCBkaXJlY3Rpb24pO1xuICAgIGlmICghZXJyb3JWYWwpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICB2YXIgbGluZUNvb3JkaW5hdGVzID0gW107XG4gICAgdmFyIGxvd0JvdW5kLCBoaWdoQm91bmQ7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZXJyb3JWYWwpKSB7XG4gICAgICBbbG93Qm91bmQsIGhpZ2hCb3VuZF0gPSBlcnJvclZhbDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG93Qm91bmQgPSBoaWdoQm91bmQgPSBlcnJvclZhbDtcbiAgICB9XG4gICAgaWYgKGRpcmVjdGlvbiA9PT0gJ3gnKSB7XG4gICAgICAvLyBlcnJvciBiYXIgZm9yIGhvcml6b250YWwgY2hhcnRzLCB0aGUgeSBpcyBmaXhlZCwgeCBpcyBhIHJhbmdlIHZhbHVlXG4gICAgICB2YXIge1xuICAgICAgICBzY2FsZVxuICAgICAgfSA9IHhBeGlzO1xuICAgICAgdmFyIHlNaWQgPSB5ICsgb2Zmc2V0O1xuICAgICAgdmFyIHlNaW4gPSB5TWlkICsgd2lkdGg7XG4gICAgICB2YXIgeU1heCA9IHlNaWQgLSB3aWR0aDtcbiAgICAgIHZhciB4TWluID0gc2NhbGUodmFsdWUgLSBsb3dCb3VuZCk7XG4gICAgICB2YXIgeE1heCA9IHNjYWxlKHZhbHVlICsgaGlnaEJvdW5kKTtcblxuICAgICAgLy8gdGhlIHJpZ2h0IGxpbmUgb2YgfC0tfFxuICAgICAgbGluZUNvb3JkaW5hdGVzLnB1c2goe1xuICAgICAgICB4MTogeE1heCxcbiAgICAgICAgeTE6IHlNaW4sXG4gICAgICAgIHgyOiB4TWF4LFxuICAgICAgICB5MjogeU1heFxuICAgICAgfSk7XG4gICAgICAvLyB0aGUgbWlkZGxlIGxpbmUgb2YgfC0tfFxuICAgICAgbGluZUNvb3JkaW5hdGVzLnB1c2goe1xuICAgICAgICB4MTogeE1pbixcbiAgICAgICAgeTE6IHlNaWQsXG4gICAgICAgIHgyOiB4TWF4LFxuICAgICAgICB5MjogeU1pZFxuICAgICAgfSk7XG4gICAgICAvLyB0aGUgbGVmdCBsaW5lIG9mIHwtLXxcbiAgICAgIGxpbmVDb29yZGluYXRlcy5wdXNoKHtcbiAgICAgICAgeDE6IHhNaW4sXG4gICAgICAgIHkxOiB5TWluLFxuICAgICAgICB4MjogeE1pbixcbiAgICAgICAgeTI6IHlNYXhcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uID09PSAneScpIHtcbiAgICAgIC8vIGVycm9yIGJhciBmb3IgaG9yaXpvbnRhbCBjaGFydHMsIHRoZSB4IGlzIGZpeGVkLCB5IGlzIGEgcmFuZ2UgdmFsdWVcbiAgICAgIHZhciB7XG4gICAgICAgIHNjYWxlOiBfc2NhbGVcbiAgICAgIH0gPSB5QXhpcztcbiAgICAgIHZhciB4TWlkID0geCArIG9mZnNldDtcbiAgICAgIHZhciBfeE1pbiA9IHhNaWQgLSB3aWR0aDtcbiAgICAgIHZhciBfeE1heCA9IHhNaWQgKyB3aWR0aDtcbiAgICAgIHZhciBfeU1pbiA9IF9zY2FsZSh2YWx1ZSAtIGxvd0JvdW5kKTtcbiAgICAgIHZhciBfeU1heCA9IF9zY2FsZSh2YWx1ZSArIGhpZ2hCb3VuZCk7XG5cbiAgICAgIC8vIHRoZSB0b3AgbGluZVxuICAgICAgbGluZUNvb3JkaW5hdGVzLnB1c2goe1xuICAgICAgICB4MTogX3hNaW4sXG4gICAgICAgIHkxOiBfeU1heCxcbiAgICAgICAgeDI6IF94TWF4LFxuICAgICAgICB5MjogX3lNYXhcbiAgICAgIH0pO1xuICAgICAgLy8gdGhlIG1pZGRsZSBsaW5lXG4gICAgICBsaW5lQ29vcmRpbmF0ZXMucHVzaCh7XG4gICAgICAgIHgxOiB4TWlkLFxuICAgICAgICB5MTogX3lNaW4sXG4gICAgICAgIHgyOiB4TWlkLFxuICAgICAgICB5MjogX3lNYXhcbiAgICAgIH0pO1xuICAgICAgLy8gdGhlIGJvdHRvbSBsaW5lXG4gICAgICBsaW5lQ29vcmRpbmF0ZXMucHVzaCh7XG4gICAgICAgIHgxOiBfeE1pbixcbiAgICAgICAgeTE6IF95TWluLFxuICAgICAgICB4MjogX3hNYXgsXG4gICAgICAgIHkyOiBfeU1pblxuICAgICAgfSk7XG4gICAgfVxuICAgIHZhciB0cmFuc2Zvcm1PcmlnaW4gPSBcIlwiLmNvbmNhdCh4ICsgb2Zmc2V0LCBcInB4IFwiKS5jb25jYXQoeSArIG9mZnNldCwgXCJweFwiKTtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoTGF5ZXIsIF9leHRlbmRzKHtcbiAgICAgIGNsYXNzTmFtZTogXCJyZWNoYXJ0cy1lcnJvckJhclwiLFxuICAgICAga2V5OiBcImJhci1cIi5jb25jYXQobGluZUNvb3JkaW5hdGVzLm1hcChjID0+IFwiXCIuY29uY2F0KGMueDEsIFwiLVwiKS5jb25jYXQoYy54MiwgXCItXCIpLmNvbmNhdChjLnkxLCBcIi1cIikuY29uY2F0KGMueTIpKSlcbiAgICB9LCBzdmdQcm9wcyksIGxpbmVDb29yZGluYXRlcy5tYXAoY29vcmRpbmF0ZXMgPT4ge1xuICAgICAgdmFyIGxpbmVTdHlsZSA9IGlzQW5pbWF0aW9uQWN0aXZlID8ge1xuICAgICAgICB0cmFuc2Zvcm1PcmlnaW46IFwiXCIuY29uY2F0KGNvb3JkaW5hdGVzLngxIC0gNSwgXCJweFwiKVxuICAgICAgfSA6IHVuZGVmaW5lZDtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChBbmltYXRlLCB7XG4gICAgICAgIGZyb206IHtcbiAgICAgICAgICB0cmFuc2Zvcm06ICdzY2FsZVkoMCknLFxuICAgICAgICAgIHRyYW5zZm9ybU9yaWdpblxuICAgICAgICB9LFxuICAgICAgICB0bzoge1xuICAgICAgICAgIHRyYW5zZm9ybTogJ3NjYWxlWSgxKScsXG4gICAgICAgICAgdHJhbnNmb3JtT3JpZ2luXG4gICAgICAgIH0sXG4gICAgICAgIGJlZ2luOiBhbmltYXRpb25CZWdpbixcbiAgICAgICAgZWFzaW5nOiBhbmltYXRpb25FYXNpbmcsXG4gICAgICAgIGlzQWN0aXZlOiBpc0FuaW1hdGlvbkFjdGl2ZSxcbiAgICAgICAgZHVyYXRpb246IGFuaW1hdGlvbkR1cmF0aW9uLFxuICAgICAgICBrZXk6IFwibGluZS1cIi5jb25jYXQoY29vcmRpbmF0ZXMueDEsIFwiLVwiKS5jb25jYXQoY29vcmRpbmF0ZXMueDIsIFwiLVwiKS5jb25jYXQoY29vcmRpbmF0ZXMueTEsIFwiLVwiKS5jb25jYXQoY29vcmRpbmF0ZXMueTIpXG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgVE9ETyAtIGZpeCB0aGUgdHlwZSBlcnJvclxuICAgICAgICAsXG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgdHJhbnNmb3JtT3JpZ2luXG4gICAgICAgIH1cbiAgICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwibGluZVwiLCBfZXh0ZW5kcyh7fSwgY29vcmRpbmF0ZXMsIHtcbiAgICAgICAgc3R5bGU6IGxpbmVTdHlsZVxuICAgICAgfSkpKTtcbiAgICB9KSk7XG4gIH0pO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoTGF5ZXIsIHtcbiAgICBjbGFzc05hbWU6IFwicmVjaGFydHMtZXJyb3JCYXJzXCJcbiAgfSwgZXJyb3JCYXJzKTtcbn1cbnZhciBFcnJvckJhclByZWZlcnJlZERpcmVjdGlvbiA9IC8qI19fUFVSRV9fKi9jcmVhdGVDb250ZXh0KHVuZGVmaW5lZCk7XG5mdW5jdGlvbiB1c2VFcnJvckJhckRpcmVjdGlvbihkaXJlY3Rpb25Gcm9tUHJvcHMpIHtcbiAgdmFyIHByZWZlcnJlZERpcmVjdGlvbiA9IHVzZUNvbnRleHQoRXJyb3JCYXJQcmVmZXJyZWREaXJlY3Rpb24pO1xuICBpZiAoZGlyZWN0aW9uRnJvbVByb3BzICE9IG51bGwpIHtcbiAgICByZXR1cm4gZGlyZWN0aW9uRnJvbVByb3BzO1xuICB9XG4gIGlmIChwcmVmZXJyZWREaXJlY3Rpb24gIT0gbnVsbCkge1xuICAgIHJldHVybiBwcmVmZXJyZWREaXJlY3Rpb247XG4gIH1cbiAgcmV0dXJuICd4Jztcbn1cbmV4cG9ydCBmdW5jdGlvbiBTZXRFcnJvckJhclByZWZlcnJlZERpcmVjdGlvbihfcmVmKSB7XG4gIHZhciB7XG4gICAgZGlyZWN0aW9uLFxuICAgIGNoaWxkcmVuXG4gIH0gPSBfcmVmO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXJyb3JCYXJQcmVmZXJyZWREaXJlY3Rpb24uUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogZGlyZWN0aW9uXG4gIH0sIGNoaWxkcmVuKTtcbn1cbnZhciBlcnJvckJhckRlZmF1bHRQcm9wcyA9IHtcbiAgc3Ryb2tlOiAnYmxhY2snLFxuICBzdHJva2VXaWR0aDogMS41LFxuICB3aWR0aDogNSxcbiAgb2Zmc2V0OiAwLFxuICBpc0FuaW1hdGlvbkFjdGl2ZTogdHJ1ZSxcbiAgYW5pbWF0aW9uQmVnaW46IDAsXG4gIGFuaW1hdGlvbkR1cmF0aW9uOiA0MDAsXG4gIGFuaW1hdGlvbkVhc2luZzogJ2Vhc2UtaW4tb3V0J1xufTtcbmZ1bmN0aW9uIEVycm9yQmFySW50ZXJuYWwocHJvcHMpIHtcbiAgdmFyIHJlYWxEaXJlY3Rpb24gPSB1c2VFcnJvckJhckRpcmVjdGlvbihwcm9wcy5kaXJlY3Rpb24pO1xuICB2YXIge1xuICAgIHdpZHRoLFxuICAgIGlzQW5pbWF0aW9uQWN0aXZlLFxuICAgIGFuaW1hdGlvbkJlZ2luLFxuICAgIGFuaW1hdGlvbkR1cmF0aW9uLFxuICAgIGFuaW1hdGlvbkVhc2luZ1xuICB9ID0gcmVzb2x2ZURlZmF1bHRQcm9wcyhwcm9wcywgZXJyb3JCYXJEZWZhdWx0UHJvcHMpO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlcG9ydEVycm9yQmFyU2V0dGluZ3MsIHtcbiAgICBkYXRhS2V5OiBwcm9wcy5kYXRhS2V5LFxuICAgIGRpcmVjdGlvbjogcmVhbERpcmVjdGlvblxuICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRXJyb3JCYXJJbXBsLCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICBkaXJlY3Rpb246IHJlYWxEaXJlY3Rpb24sXG4gICAgd2lkdGg6IHdpZHRoLFxuICAgIGlzQW5pbWF0aW9uQWN0aXZlOiBpc0FuaW1hdGlvbkFjdGl2ZSxcbiAgICBhbmltYXRpb25CZWdpbjogYW5pbWF0aW9uQmVnaW4sXG4gICAgYW5pbWF0aW9uRHVyYXRpb246IGFuaW1hdGlvbkR1cmF0aW9uLFxuICAgIGFuaW1hdGlvbkVhc2luZzogYW5pbWF0aW9uRWFzaW5nXG4gIH0pKSk7XG59XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9wcmVmZXItc3RhdGVsZXNzLWZ1bmN0aW9uXG5leHBvcnQgY2xhc3MgRXJyb3JCYXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEVycm9yQmFySW50ZXJuYWwsIHRoaXMucHJvcHMpO1xuICB9XG59XG5fZGVmaW5lUHJvcGVydHkoRXJyb3JCYXIsIFwiZGVmYXVsdFByb3BzXCIsIGVycm9yQmFyRGVmYXVsdFByb3BzKTtcbl9kZWZpbmVQcm9wZXJ0eShFcnJvckJhciwgXCJkaXNwbGF5TmFtZVwiLCAnRXJyb3JCYXInKTsiXSwibmFtZXMiOlsiX2V4Y2x1ZGVkIiwiX2RlZmluZVByb3BlcnR5IiwiZSIsInIiLCJ0IiwiX3RvUHJvcGVydHlLZXkiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiaSIsIl90b1ByaW1pdGl2ZSIsIlN5bWJvbCIsInRvUHJpbWl0aXZlIiwiY2FsbCIsIlR5cGVFcnJvciIsIlN0cmluZyIsIk51bWJlciIsIl9leHRlbmRzIiwiYXNzaWduIiwiYmluZCIsIm4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJoYXNPd25Qcm9wZXJ0eSIsImFwcGx5IiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwibyIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiaW5kZXhPZiIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiUmVhY3QiLCJDb21wb25lbnQiLCJjcmVhdGVDb250ZXh0IiwidXNlQ29udGV4dCIsIkxheWVyIiwiZmlsdGVyUHJvcHMiLCJSZXBvcnRFcnJvckJhclNldHRpbmdzIiwidXNlRXJyb3JCYXJDb250ZXh0IiwidXNlWEF4aXMiLCJ1c2VZQXhpcyIsInJlc29sdmVEZWZhdWx0UHJvcHMiLCJBbmltYXRlIiwiRXJyb3JCYXJJbXBsIiwicHJvcHMiLCJkaXJlY3Rpb24iLCJ3aWR0aCIsImRhdGFLZXkiLCJpc0FuaW1hdGlvbkFjdGl2ZSIsImFuaW1hdGlvbkJlZ2luIiwiYW5pbWF0aW9uRHVyYXRpb24iLCJhbmltYXRpb25FYXNpbmciLCJvdGhlcnMiLCJzdmdQcm9wcyIsImRhdGEiLCJkYXRhUG9pbnRGb3JtYXR0ZXIiLCJ4QXhpc0lkIiwieUF4aXNJZCIsImVycm9yQmFyT2Zmc2V0Iiwib2Zmc2V0IiwieEF4aXMiLCJ5QXhpcyIsInNjYWxlIiwidHlwZSIsImVycm9yQmFycyIsIm1hcCIsImVudHJ5IiwieCIsInkiLCJlcnJvclZhbCIsImxpbmVDb29yZGluYXRlcyIsImxvd0JvdW5kIiwiaGlnaEJvdW5kIiwiQXJyYXkiLCJpc0FycmF5IiwieU1pZCIsInlNaW4iLCJ5TWF4IiwieE1pbiIsInhNYXgiLCJwdXNoIiwieDEiLCJ5MSIsIngyIiwieTIiLCJfc2NhbGUiLCJ4TWlkIiwiX3hNaW4iLCJfeE1heCIsIl95TWluIiwiX3lNYXgiLCJ0cmFuc2Zvcm1PcmlnaW4iLCJjb25jYXQiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwia2V5IiwiYyIsImNvb3JkaW5hdGVzIiwibGluZVN0eWxlIiwidW5kZWZpbmVkIiwiZnJvbSIsInRyYW5zZm9ybSIsInRvIiwiYmVnaW4iLCJlYXNpbmciLCJpc0FjdGl2ZSIsImR1cmF0aW9uIiwic3R5bGUiLCJFcnJvckJhclByZWZlcnJlZERpcmVjdGlvbiIsInVzZUVycm9yQmFyRGlyZWN0aW9uIiwiZGlyZWN0aW9uRnJvbVByb3BzIiwicHJlZmVycmVkRGlyZWN0aW9uIiwiU2V0RXJyb3JCYXJQcmVmZXJyZWREaXJlY3Rpb24iLCJfcmVmIiwiY2hpbGRyZW4iLCJQcm92aWRlciIsImVycm9yQmFyRGVmYXVsdFByb3BzIiwic3Ryb2tlIiwic3Ryb2tlV2lkdGgiLCJFcnJvckJhckludGVybmFsIiwicmVhbERpcmVjdGlvbiIsIkZyYWdtZW50IiwiRXJyb3JCYXIiLCJyZW5kZXIiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/recharts/es6/cartesian/ErrorBar.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/recharts/es6/cartesian/GraphicalItemClipPath.js":
/*!**********************************************************************!*\
  !*** ./node_modules/recharts/es6/cartesian/GraphicalItemClipPath.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GraphicalItemClipPath: () => (/* binding */ GraphicalItemClipPath),\n/* harmony export */   useNeedsClip: () => (/* binding */ useNeedsClip)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _state_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../state/hooks */ \"(app-pages-browser)/./node_modules/recharts/es6/state/hooks.js\");\n/* harmony import */ var _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../state/selectors/axisSelectors */ \"(app-pages-browser)/./node_modules/recharts/es6/state/selectors/axisSelectors.js\");\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hooks */ \"(app-pages-browser)/./node_modules/recharts/es6/hooks.js\");\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\nfunction useNeedsClip(xAxisId, yAxisId) {\n    _s();\n    var _xAxis$allowDataOverf, _yAxis$allowDataOverf;\n    var xAxis = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_1__.useAppSelector)({\n        \"useNeedsClip.useAppSelector[xAxis]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_2__.selectXAxisSettings)(state, xAxisId)\n    }[\"useNeedsClip.useAppSelector[xAxis]\"]);\n    var yAxis = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_1__.useAppSelector)({\n        \"useNeedsClip.useAppSelector[yAxis]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_2__.selectYAxisSettings)(state, yAxisId)\n    }[\"useNeedsClip.useAppSelector[yAxis]\"]);\n    var needClipX = (_xAxis$allowDataOverf = xAxis === null || xAxis === void 0 ? void 0 : xAxis.allowDataOverflow) !== null && _xAxis$allowDataOverf !== void 0 ? _xAxis$allowDataOverf : _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_2__.implicitXAxis.allowDataOverflow;\n    var needClipY = (_yAxis$allowDataOverf = yAxis === null || yAxis === void 0 ? void 0 : yAxis.allowDataOverflow) !== null && _yAxis$allowDataOverf !== void 0 ? _yAxis$allowDataOverf : _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_2__.implicitYAxis.allowDataOverflow;\n    var needClip = needClipX || needClipY;\n    return {\n        needClip,\n        needClipX,\n        needClipY\n    };\n}\n_s(useNeedsClip, \"Ftk1liLGBXcsiATi2uyz2xV1JMI=\", false, function() {\n    return [\n        _state_hooks__WEBPACK_IMPORTED_MODULE_1__.useAppSelector,\n        _state_hooks__WEBPACK_IMPORTED_MODULE_1__.useAppSelector\n    ];\n});\nfunction GraphicalItemClipPath(_ref) {\n    _s1();\n    var { xAxisId, yAxisId, clipPathId } = _ref;\n    var plotArea = (0,_hooks__WEBPACK_IMPORTED_MODULE_3__.usePlotArea)();\n    var { needClipX, needClipY, needClip } = useNeedsClip(xAxisId, yAxisId);\n    if (!needClip) {\n        return null;\n    }\n    var { x, y, width, height } = plotArea;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"clipPath\", {\n        id: \"clipPath-\".concat(clipPathId)\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", {\n        x: needClipX ? x : x - width / 2,\n        y: needClipY ? y : y - height / 2,\n        width: needClipX ? width : width * 2,\n        height: needClipY ? height : height * 2\n    }));\n}\n_s1(GraphicalItemClipPath, \"ZmvMHXKOZ7MTFePNAgV4xuBHG2Q=\", false, function() {\n    return [\n        _hooks__WEBPACK_IMPORTED_MODULE_3__.usePlotArea,\n        useNeedsClip\n    ];\n});\n_c = GraphicalItemClipPath;\nvar _c;\n$RefreshReg$(_c, \"GraphicalItemClipPath\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWNoYXJ0cy9lczYvY2FydGVzaWFuL0dyYXBoaWNhbEl0ZW1DbGlwUGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUErQjtBQUNpQjtBQUMwRTtBQUNuRjtBQUNoQyxTQUFTTyxhQUFhQyxPQUFPLEVBQUVDLE9BQU87O0lBQzNDLElBQUlDLHVCQUF1QkM7SUFDM0IsSUFBSUMsUUFBUVgsNERBQWNBOzhDQUFDWSxDQUFBQSxRQUFTVCxtRkFBbUJBLENBQUNTLE9BQU9MOztJQUMvRCxJQUFJTSxRQUFRYiw0REFBY0E7OENBQUNZLENBQUFBLFFBQVNSLG1GQUFtQkEsQ0FBQ1EsT0FBT0o7O0lBQy9ELElBQUlNLFlBQVksQ0FBQ0wsd0JBQXdCRSxVQUFVLFFBQVFBLFVBQVUsS0FBSyxJQUFJLEtBQUssSUFBSUEsTUFBTUksaUJBQWlCLE1BQU0sUUFBUU4sMEJBQTBCLEtBQUssSUFBSUEsd0JBQXdCUix5RUFBYUEsQ0FBQ2MsaUJBQWlCO0lBQ3ROLElBQUlDLFlBQVksQ0FBQ04sd0JBQXdCRyxVQUFVLFFBQVFBLFVBQVUsS0FBSyxJQUFJLEtBQUssSUFBSUEsTUFBTUUsaUJBQWlCLE1BQU0sUUFBUUwsMEJBQTBCLEtBQUssSUFBSUEsd0JBQXdCUix5RUFBYUEsQ0FBQ2EsaUJBQWlCO0lBQ3ROLElBQUlFLFdBQVdILGFBQWFFO0lBQzVCLE9BQU87UUFDTEM7UUFDQUg7UUFDQUU7SUFDRjtBQUNGO0dBWmdCVjs7UUFFRk4sd0RBQWNBO1FBQ2RBLHdEQUFjQTs7O0FBVXJCLFNBQVNrQixzQkFBc0JDLElBQUk7O0lBQ3hDLElBQUksRUFDRlosT0FBTyxFQUNQQyxPQUFPLEVBQ1BZLFVBQVUsRUFDWCxHQUFHRDtJQUNKLElBQUlFLFdBQVdoQixtREFBV0E7SUFDMUIsSUFBSSxFQUNGUyxTQUFTLEVBQ1RFLFNBQVMsRUFDVEMsUUFBUSxFQUNULEdBQUdYLGFBQWFDLFNBQVNDO0lBQzFCLElBQUksQ0FBQ1MsVUFBVTtRQUNiLE9BQU87SUFDVDtJQUNBLElBQUksRUFDRkssQ0FBQyxFQUNEQyxDQUFDLEVBQ0RDLEtBQUssRUFDTEMsTUFBTSxFQUNQLEdBQUdKO0lBQ0osT0FBTyxXQUFXLEdBQUV0QixnREFBbUIsQ0FBQyxZQUFZO1FBQ2xENEIsSUFBSSxZQUFZQyxNQUFNLENBQUNSO0lBQ3pCLEdBQUcsV0FBVyxHQUFFckIsZ0RBQW1CLENBQUMsUUFBUTtRQUMxQ3VCLEdBQUdSLFlBQVlRLElBQUlBLElBQUlFLFFBQVE7UUFDL0JELEdBQUdQLFlBQVlPLElBQUlBLElBQUlFLFNBQVM7UUFDaENELE9BQU9WLFlBQVlVLFFBQVFBLFFBQVE7UUFDbkNDLFFBQVFULFlBQVlTLFNBQVNBLFNBQVM7SUFDeEM7QUFDRjtJQTdCZ0JQOztRQU1DYiwrQ0FBV0E7UUFLdEJDOzs7S0FYVVkiLCJzb3VyY2VzIjpbIi9yb290L2h5cGVyc3luYy1jbGllbnQtcHl0aG9uL2Zyb250ZW5kLWRlcGxveW1lbnQvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi9jYXJ0ZXNpYW4vR3JhcGhpY2FsSXRlbUNsaXBQYXRoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZUFwcFNlbGVjdG9yIH0gZnJvbSAnLi4vc3RhdGUvaG9va3MnO1xuaW1wb3J0IHsgaW1wbGljaXRYQXhpcywgaW1wbGljaXRZQXhpcywgc2VsZWN0WEF4aXNTZXR0aW5ncywgc2VsZWN0WUF4aXNTZXR0aW5ncyB9IGZyb20gJy4uL3N0YXRlL3NlbGVjdG9ycy9heGlzU2VsZWN0b3JzJztcbmltcG9ydCB7IHVzZVBsb3RBcmVhIH0gZnJvbSAnLi4vaG9va3MnO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZU5lZWRzQ2xpcCh4QXhpc0lkLCB5QXhpc0lkKSB7XG4gIHZhciBfeEF4aXMkYWxsb3dEYXRhT3ZlcmYsIF95QXhpcyRhbGxvd0RhdGFPdmVyZjtcbiAgdmFyIHhBeGlzID0gdXNlQXBwU2VsZWN0b3Ioc3RhdGUgPT4gc2VsZWN0WEF4aXNTZXR0aW5ncyhzdGF0ZSwgeEF4aXNJZCkpO1xuICB2YXIgeUF4aXMgPSB1c2VBcHBTZWxlY3RvcihzdGF0ZSA9PiBzZWxlY3RZQXhpc1NldHRpbmdzKHN0YXRlLCB5QXhpc0lkKSk7XG4gIHZhciBuZWVkQ2xpcFggPSAoX3hBeGlzJGFsbG93RGF0YU92ZXJmID0geEF4aXMgPT09IG51bGwgfHwgeEF4aXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHhBeGlzLmFsbG93RGF0YU92ZXJmbG93KSAhPT0gbnVsbCAmJiBfeEF4aXMkYWxsb3dEYXRhT3ZlcmYgIT09IHZvaWQgMCA/IF94QXhpcyRhbGxvd0RhdGFPdmVyZiA6IGltcGxpY2l0WEF4aXMuYWxsb3dEYXRhT3ZlcmZsb3c7XG4gIHZhciBuZWVkQ2xpcFkgPSAoX3lBeGlzJGFsbG93RGF0YU92ZXJmID0geUF4aXMgPT09IG51bGwgfHwgeUF4aXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHlBeGlzLmFsbG93RGF0YU92ZXJmbG93KSAhPT0gbnVsbCAmJiBfeUF4aXMkYWxsb3dEYXRhT3ZlcmYgIT09IHZvaWQgMCA/IF95QXhpcyRhbGxvd0RhdGFPdmVyZiA6IGltcGxpY2l0WUF4aXMuYWxsb3dEYXRhT3ZlcmZsb3c7XG4gIHZhciBuZWVkQ2xpcCA9IG5lZWRDbGlwWCB8fCBuZWVkQ2xpcFk7XG4gIHJldHVybiB7XG4gICAgbmVlZENsaXAsXG4gICAgbmVlZENsaXBYLFxuICAgIG5lZWRDbGlwWVxuICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIEdyYXBoaWNhbEl0ZW1DbGlwUGF0aChfcmVmKSB7XG4gIHZhciB7XG4gICAgeEF4aXNJZCxcbiAgICB5QXhpc0lkLFxuICAgIGNsaXBQYXRoSWRcbiAgfSA9IF9yZWY7XG4gIHZhciBwbG90QXJlYSA9IHVzZVBsb3RBcmVhKCk7XG4gIHZhciB7XG4gICAgbmVlZENsaXBYLFxuICAgIG5lZWRDbGlwWSxcbiAgICBuZWVkQ2xpcFxuICB9ID0gdXNlTmVlZHNDbGlwKHhBeGlzSWQsIHlBeGlzSWQpO1xuICBpZiAoIW5lZWRDbGlwKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgdmFyIHtcbiAgICB4LFxuICAgIHksXG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0XG4gIH0gPSBwbG90QXJlYTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiY2xpcFBhdGhcIiwge1xuICAgIGlkOiBcImNsaXBQYXRoLVwiLmNvbmNhdChjbGlwUGF0aElkKVxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInJlY3RcIiwge1xuICAgIHg6IG5lZWRDbGlwWCA/IHggOiB4IC0gd2lkdGggLyAyLFxuICAgIHk6IG5lZWRDbGlwWSA/IHkgOiB5IC0gaGVpZ2h0IC8gMixcbiAgICB3aWR0aDogbmVlZENsaXBYID8gd2lkdGggOiB3aWR0aCAqIDIsXG4gICAgaGVpZ2h0OiBuZWVkQ2xpcFkgPyBoZWlnaHQgOiBoZWlnaHQgKiAyXG4gIH0pKTtcbn0iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VBcHBTZWxlY3RvciIsImltcGxpY2l0WEF4aXMiLCJpbXBsaWNpdFlBeGlzIiwic2VsZWN0WEF4aXNTZXR0aW5ncyIsInNlbGVjdFlBeGlzU2V0dGluZ3MiLCJ1c2VQbG90QXJlYSIsInVzZU5lZWRzQ2xpcCIsInhBeGlzSWQiLCJ5QXhpc0lkIiwiX3hBeGlzJGFsbG93RGF0YU92ZXJmIiwiX3lBeGlzJGFsbG93RGF0YU92ZXJmIiwieEF4aXMiLCJzdGF0ZSIsInlBeGlzIiwibmVlZENsaXBYIiwiYWxsb3dEYXRhT3ZlcmZsb3ciLCJuZWVkQ2xpcFkiLCJuZWVkQ2xpcCIsIkdyYXBoaWNhbEl0ZW1DbGlwUGF0aCIsIl9yZWYiLCJjbGlwUGF0aElkIiwicGxvdEFyZWEiLCJ4IiwieSIsIndpZHRoIiwiaGVpZ2h0IiwiY3JlYXRlRWxlbWVudCIsImlkIiwiY29uY2F0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/recharts/es6/cartesian/GraphicalItemClipPath.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/recharts/es6/cartesian/Line.js":
/*!*****************************************************!*\
  !*** ./node_modules/recharts/es6/cartesian/Line.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Line: () => (/* binding */ Line),\n/* harmony export */   computeLinePoints: () => (/* binding */ computeLinePoints)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _shape_Curve__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shape/Curve */ \"(app-pages-browser)/./node_modules/recharts/es6/shape/Curve.js\");\n/* harmony import */ var _shape_Dot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shape/Dot */ \"(app-pages-browser)/./node_modules/recharts/es6/shape/Dot.js\");\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../container/Layer */ \"(app-pages-browser)/./node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _component_LabelList__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../component/LabelList */ \"(app-pages-browser)/./node_modules/recharts/es6/component/LabelList.js\");\n/* harmony import */ var _ErrorBar__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./ErrorBar */ \"(app-pages-browser)/./node_modules/recharts/es6/cartesian/ErrorBar.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../util/DataUtils */ \"(app-pages-browser)/./node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/ReactUtils */ \"(app-pages-browser)/./node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _util_Global__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../util/Global */ \"(app-pages-browser)/./node_modules/recharts/es6/util/Global.js\");\n/* harmony import */ var _util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ChartUtils */ \"(app-pages-browser)/./node_modules/recharts/es6/util/ChartUtils.js\");\n/* harmony import */ var _component_ActivePoints__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../component/ActivePoints */ \"(app-pages-browser)/./node_modules/recharts/es6/component/ActivePoints.js\");\n/* harmony import */ var _state_SetTooltipEntrySettings__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../state/SetTooltipEntrySettings */ \"(app-pages-browser)/./node_modules/recharts/es6/state/SetTooltipEntrySettings.js\");\n/* harmony import */ var _context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../context/CartesianGraphicalItemContext */ \"(app-pages-browser)/./node_modules/recharts/es6/context/CartesianGraphicalItemContext.js\");\n/* harmony import */ var _GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./GraphicalItemClipPath */ \"(app-pages-browser)/./node_modules/recharts/es6/cartesian/GraphicalItemClipPath.js\");\n/* harmony import */ var _context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../context/chartLayoutContext */ \"(app-pages-browser)/./node_modules/recharts/es6/context/chartLayoutContext.js\");\n/* harmony import */ var _context_PanoramaContext__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../context/PanoramaContext */ \"(app-pages-browser)/./node_modules/recharts/es6/context/PanoramaContext.js\");\n/* harmony import */ var _state_selectors_lineSelectors__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../state/selectors/lineSelectors */ \"(app-pages-browser)/./node_modules/recharts/es6/state/selectors/lineSelectors.js\");\n/* harmony import */ var _state_hooks__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../state/hooks */ \"(app-pages-browser)/./node_modules/recharts/es6/state/hooks.js\");\n/* harmony import */ var _state_SetLegendPayload__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../state/SetLegendPayload */ \"(app-pages-browser)/./node_modules/recharts/es6/state/SetLegendPayload.js\");\n/* harmony import */ var _util_useAnimationId__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/useAnimationId */ \"(app-pages-browser)/./node_modules/recharts/es6/util/useAnimationId.js\");\n/* harmony import */ var _util_resolveDefaultProps__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../util/resolveDefaultProps */ \"(app-pages-browser)/./node_modules/recharts/es6/util/resolveDefaultProps.js\");\n/* harmony import */ var _animation_Animate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../animation/Animate */ \"(app-pages-browser)/./node_modules/recharts/es6/animation/Animate.js\");\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../hooks */ \"(app-pages-browser)/./node_modules/recharts/es6/hooks.js\");\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\nvar _excluded = [\n    \"type\",\n    \"layout\",\n    \"connectNulls\",\n    \"needClip\"\n], _excluded2 = [\n    \"activeDot\",\n    \"animateNewValues\",\n    \"animationBegin\",\n    \"animationDuration\",\n    \"animationEasing\",\n    \"connectNulls\",\n    \"dot\",\n    \"hide\",\n    \"isAnimationActive\",\n    \"label\",\n    \"legendType\",\n    \"xAxisId\",\n    \"yAxisId\"\n];\nfunction _objectWithoutProperties(e, t) {\n    if (null == e) return {};\n    var o, r, i = _objectWithoutPropertiesLoose(e, t);\n    if (Object.getOwnPropertySymbols) {\n        var n = Object.getOwnPropertySymbols(e);\n        for(r = 0; r < n.length; r++)o = n[r], -1 === t.indexOf(o) && ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n    }\n    return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n    if (null == r) return {};\n    var t = {};\n    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {\n        if (-1 !== e.indexOf(n)) continue;\n        t[n] = r[n];\n    }\n    return t;\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function(n) {\n        for(var e = 1; e < arguments.length; e++){\n            var t = arguments[e];\n            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n        }\n        return n;\n    }, _extends.apply(null, arguments);\n}\n// eslint-disable-next-line max-classes-per-file\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Internal props, combination of external props + defaultProps + private Recharts state\n */ /**\n * External props, intended for end users to fill in\n */ /**\n * Because of naming conflict, we are forced to ignore certain (valid) SVG attributes.\n */ var computeLegendPayloadFromAreaData = (props)=>{\n    var { dataKey, name, stroke, legendType, hide } = props;\n    return [\n        {\n            inactive: hide,\n            dataKey,\n            type: legendType,\n            color: stroke,\n            value: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getTooltipNameProp)(name, dataKey),\n            payload: props\n        }\n    ];\n};\nfunction getTooltipEntrySettings(props) {\n    var { dataKey, data, stroke, strokeWidth, fill, name, hide, unit } = props;\n    return {\n        dataDefinedOnItem: data,\n        positions: undefined,\n        settings: {\n            stroke,\n            strokeWidth,\n            fill,\n            dataKey,\n            nameKey: undefined,\n            name: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getTooltipNameProp)(name, dataKey),\n            hide,\n            type: props.tooltipType,\n            color: props.stroke,\n            unit\n        }\n    };\n}\nvar generateSimpleStrokeDasharray = (totalLength, length)=>{\n    return \"\".concat(length, \"px \").concat(totalLength - length, \"px\");\n};\nfunction repeat(lines, count) {\n    var linesUnit = lines.length % 2 !== 0 ? [\n        ...lines,\n        0\n    ] : lines;\n    var result = [];\n    for(var i = 0; i < count; ++i){\n        result = [\n            ...result,\n            ...linesUnit\n        ];\n    }\n    return result;\n}\nvar getStrokeDasharray = (length, totalLength, lines)=>{\n    var lineLength = lines.reduce((pre, next)=>pre + next);\n    // if lineLength is 0 return the default when no strokeDasharray is provided\n    if (!lineLength) {\n        return generateSimpleStrokeDasharray(totalLength, length);\n    }\n    var count = Math.floor(length / lineLength);\n    var remainLength = length % lineLength;\n    var restLength = totalLength - length;\n    var remainLines = [];\n    for(var i = 0, sum = 0; i < lines.length; sum += lines[i], ++i){\n        if (sum + lines[i] > remainLength) {\n            remainLines = [\n                ...lines.slice(0, i),\n                remainLength - sum\n            ];\n            break;\n        }\n    }\n    var emptyLines = remainLines.length % 2 === 0 ? [\n        0,\n        restLength\n    ] : [\n        restLength\n    ];\n    return [\n        ...repeat(lines, count),\n        ...remainLines,\n        ...emptyLines\n    ].map((line)=>\"\".concat(line, \"px\")).join(', ');\n};\nfunction renderDotItem(option, props) {\n    var dotItem;\n    if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(option)) {\n        dotItem = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(option, props);\n    } else if (typeof option === 'function') {\n        dotItem = option(props);\n    } else {\n        var className = (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)('recharts-line-dot', typeof option !== 'boolean' ? option.className : '');\n        dotItem = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_shape_Dot__WEBPACK_IMPORTED_MODULE_3__.Dot, _extends({}, props, {\n            className: className\n        }));\n    }\n    return dotItem;\n}\nfunction shouldRenderDots(points, dot) {\n    if (points == null) {\n        return false;\n    }\n    if (dot) {\n        return true;\n    }\n    return points.length === 1;\n}\nfunction Dots(_ref) {\n    var { clipPathId, points, props } = _ref;\n    var { dot, dataKey, needClip } = props;\n    if (!shouldRenderDots(points, dot)) {\n        return null;\n    }\n    var clipDot = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.isClipDot)(dot);\n    var lineProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(props, false);\n    var customDotProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(dot, true);\n    var dots = points.map((entry, i)=>{\n        var dotProps = _objectSpread(_objectSpread(_objectSpread({\n            key: \"dot-\".concat(i),\n            r: 3\n        }, lineProps), customDotProps), {}, {\n            index: i,\n            cx: entry.x,\n            cy: entry.y,\n            dataKey,\n            value: entry.value,\n            payload: entry.payload,\n            points\n        });\n        return renderDotItem(dot, dotProps);\n    });\n    var dotsProps = {\n        clipPath: needClip ? \"url(#clipPath-\".concat(clipDot ? '' : 'dots-').concat(clipPathId, \")\") : null\n    };\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_5__.Layer, _extends({\n        className: \"recharts-line-dots\",\n        key: \"dots\"\n    }, dotsProps), dots);\n}\n_c = Dots;\nfunction StaticCurve(_ref2) {\n    var { clipPathId, pathRef, points, strokeDasharray, props, showLabels } = _ref2;\n    var { type, layout, connectNulls, needClip } = props, others = _objectWithoutProperties(props, _excluded);\n    var curveProps = _objectSpread(_objectSpread({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(others, true)), {}, {\n        fill: 'none',\n        className: 'recharts-line-curve',\n        clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : null,\n        points,\n        type,\n        layout,\n        connectNulls,\n        strokeDasharray: strokeDasharray !== null && strokeDasharray !== void 0 ? strokeDasharray : props.strokeDasharray\n    });\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (points === null || points === void 0 ? void 0 : points.length) > 1 && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_shape_Curve__WEBPACK_IMPORTED_MODULE_6__.Curve, _extends({}, curveProps, {\n        pathRef: pathRef\n    })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Dots, {\n        points: points,\n        clipPathId: clipPathId,\n        props: props\n    }), showLabels && _component_LabelList__WEBPACK_IMPORTED_MODULE_7__.LabelList.renderCallByParent(props, points));\n}\n_c1 = StaticCurve;\nfunction getTotalLength(mainCurve) {\n    try {\n        return mainCurve && mainCurve.getTotalLength && mainCurve.getTotalLength() || 0;\n    } catch (_unused) {\n        return 0;\n    }\n}\nfunction CurveWithAnimation(_ref3) {\n    _s();\n    var { clipPathId, props, pathRef, previousPointsRef, longestAnimatedLengthRef } = _ref3;\n    var { points, strokeDasharray, isAnimationActive, animationBegin, animationDuration, animationEasing, animateNewValues, width, height, onAnimationEnd, onAnimationStart } = props;\n    var prevPoints = previousPointsRef.current;\n    var animationId = (0,_util_useAnimationId__WEBPACK_IMPORTED_MODULE_8__.useAnimationId)(props, 'recharts-line-');\n    var [isAnimating, setIsAnimating] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    var handleAnimationEnd = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"CurveWithAnimation.useCallback[handleAnimationEnd]\": ()=>{\n            if (typeof onAnimationEnd === 'function') {\n                onAnimationEnd();\n            }\n            setIsAnimating(false);\n        }\n    }[\"CurveWithAnimation.useCallback[handleAnimationEnd]\"], [\n        onAnimationEnd\n    ]);\n    var handleAnimationStart = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"CurveWithAnimation.useCallback[handleAnimationStart]\": ()=>{\n            if (typeof onAnimationStart === 'function') {\n                onAnimationStart();\n            }\n            setIsAnimating(true);\n        }\n    }[\"CurveWithAnimation.useCallback[handleAnimationStart]\"], [\n        onAnimationStart\n    ]);\n    var totalLength = getTotalLength(pathRef.current);\n    /*\n   * Here we want to detect if the length animation has been interrupted.\n   * For that we keep a reference to the furthest length that has been animated.\n   *\n   * And then, to keep things smooth, we add to it the current length that is being animated right now.\n   *\n   * If we did Math.max then it makes the length animation \"pause\" but we want to keep it smooth\n   * so in case we have some \"leftover\" length from the previous animation we add it to the current length.\n   *\n   * This is not perfect because the animation changes speed due to easing. The default easing is 'ease' which is not linear\n   * and makes it stand out. But it's good enough I suppose.\n   * If we want to fix it then we need to keep track of multiple animations and their easing and timings.\n   *\n   * If you want to see this in action, try to change the dataKey of the line chart while the initial animation is running.\n   * The Line begins with zero length and slowly grows to the full length. While this growth is in progress,\n   * change the dataKey and the Line will continue growing from where it has grown so far.\n   */ var startingPoint = longestAnimatedLengthRef.current;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_animation_Animate__WEBPACK_IMPORTED_MODULE_9__.Animate, {\n        begin: animationBegin,\n        duration: animationDuration,\n        isActive: isAnimationActive,\n        easing: animationEasing,\n        from: {\n            t: 0\n        },\n        to: {\n            t: 1\n        },\n        onAnimationEnd: handleAnimationEnd,\n        onAnimationStart: handleAnimationStart,\n        key: animationId\n    }, (_ref4)=>{\n        var { t } = _ref4;\n        var interpolator = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.interpolateNumber)(startingPoint, totalLength + startingPoint);\n        var curLength = Math.min(interpolator(t), totalLength);\n        var currentStrokeDasharray;\n        if (strokeDasharray) {\n            var lines = \"\".concat(strokeDasharray).split(/[,\\s]+/gim).map((num)=>parseFloat(num));\n            currentStrokeDasharray = getStrokeDasharray(curLength, totalLength, lines);\n        } else {\n            currentStrokeDasharray = generateSimpleStrokeDasharray(totalLength, curLength);\n        }\n        if (prevPoints) {\n            var prevPointsDiffFactor = prevPoints.length / points.length;\n            var stepData = t === 1 ? points : points.map((entry, index)=>{\n                var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n                if (prevPoints[prevPointIndex]) {\n                    var prev = prevPoints[prevPointIndex];\n                    var interpolatorX = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.interpolateNumber)(prev.x, entry.x);\n                    var interpolatorY = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.interpolateNumber)(prev.y, entry.y);\n                    return _objectSpread(_objectSpread({}, entry), {}, {\n                        x: interpolatorX(t),\n                        y: interpolatorY(t)\n                    });\n                }\n                // magic number of faking previous x and y location\n                if (animateNewValues) {\n                    var _interpolatorX = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.interpolateNumber)(width * 2, entry.x);\n                    var _interpolatorY = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.interpolateNumber)(height / 2, entry.y);\n                    return _objectSpread(_objectSpread({}, entry), {}, {\n                        x: _interpolatorX(t),\n                        y: _interpolatorY(t)\n                    });\n                }\n                return _objectSpread(_objectSpread({}, entry), {}, {\n                    x: entry.x,\n                    y: entry.y\n                });\n            });\n            // eslint-disable-next-line no-param-reassign\n            previousPointsRef.current = stepData;\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(StaticCurve, {\n                props: props,\n                points: stepData,\n                clipPathId: clipPathId,\n                pathRef: pathRef,\n                showLabels: !isAnimating,\n                strokeDasharray: currentStrokeDasharray\n            });\n        }\n        /*\n     * Here it is important to wait a little bit with updating the previousPointsRef\n     * before the animation has a time to initialize.\n     * If we set the previous pointsRef immediately, we set it before the Legend height it calculated\n     * and before pathRef is set.\n     * If that happens, the Line will re-render again after Legend had reported its height\n     * which will start a new animation with the previous points as the starting point\n     * which gives the effect of the Line animating slightly upwards (where the animation distance equals the Legend height).\n     * Waiting for t > 0 is indirect but good enough to ensure that the Legend height is calculated and animation works properly.\n     *\n     * Total length similarly is calculated from the pathRef. We should not update the previousPointsRef\n     * before the pathRef is set, otherwise we will have a wrong total length.\n     */ if (t > 0 && totalLength > 0) {\n            // eslint-disable-next-line no-param-reassign\n            previousPointsRef.current = points;\n            /*\n       * totalLength is set from a ref and is not updated in the first tick of the animation.\n       * It defaults to zero which is exactly what we want here because we want to grow from zero,\n       * however the same happens when the data change.\n       *\n       * In that case we want to remember the previous length and continue from there, and only animate the shape.\n       *\n       * Therefore the totalLength > 0 check.\n       *\n       * The Animate is about to fire handleAnimationStart which will update the state\n       * and cause a re-render and read a new proper totalLength which will be used in the next tick\n       * and update the longestAnimatedLengthRef.\n       */ // eslint-disable-next-line no-param-reassign\n            longestAnimatedLengthRef.current = curLength;\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(StaticCurve, {\n            props: props,\n            points: points,\n            clipPathId: clipPathId,\n            pathRef: pathRef,\n            showLabels: !isAnimating,\n            strokeDasharray: currentStrokeDasharray\n        });\n    });\n}\n_s(CurveWithAnimation, \"EtRJCq2zeTX8fq48M6piIni2l4w=\", false, function() {\n    return [\n        _util_useAnimationId__WEBPACK_IMPORTED_MODULE_8__.useAnimationId\n    ];\n});\n_c2 = CurveWithAnimation;\nfunction RenderCurve(_ref5) {\n    _s1();\n    var { clipPathId, props } = _ref5;\n    var { points, isAnimationActive } = props;\n    var previousPointsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var longestAnimatedLengthRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n    var pathRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var prevPoints = previousPointsRef.current;\n    if (isAnimationActive && points && points.length && prevPoints !== points) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CurveWithAnimation, {\n            props: props,\n            clipPathId: clipPathId,\n            previousPointsRef: previousPointsRef,\n            longestAnimatedLengthRef: longestAnimatedLengthRef,\n            pathRef: pathRef\n        });\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(StaticCurve, {\n        props: props,\n        points: points,\n        clipPathId: clipPathId,\n        pathRef: pathRef,\n        showLabels: true\n    });\n}\n_s1(RenderCurve, \"9L47gEr/LRiUb5IHco4SRByJHHs=\");\n_c3 = RenderCurve;\nvar errorBarDataPointFormatter = (dataPoint, dataKey)=>{\n    return {\n        x: dataPoint.x,\n        y: dataPoint.y,\n        value: dataPoint.value,\n        // @ts-expect-error getValueByDataKey does not validate the output type\n        errorVal: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getValueByDataKey)(dataPoint.payload, dataKey)\n    };\n};\nclass LineWithState extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n    render() {\n        var _filterProps;\n        var { hide, dot, points, className, xAxisId, yAxisId, top, left, width, height, id, needClip, layout } = this.props;\n        if (hide) {\n            return null;\n        }\n        var layerClass = (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)('recharts-line', className);\n        var clipPathId = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.isNullish)(id) ? this.id : id;\n        var { r = 3, strokeWidth = 2 } = (_filterProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(dot, false)) !== null && _filterProps !== void 0 ? _filterProps : {\n            r: 3,\n            strokeWidth: 2\n        };\n        var clipDot = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.isClipDot)(dot);\n        var dotSize = r * 2 + strokeWidth;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_5__.Layer, {\n            className: layerClass\n        }, needClip && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"defs\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_11__.GraphicalItemClipPath, {\n            clipPathId: clipPathId,\n            xAxisId: xAxisId,\n            yAxisId: yAxisId\n        }), !clipDot && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"clipPath\", {\n            id: \"clipPath-dots-\".concat(clipPathId)\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", {\n            x: left - dotSize / 2,\n            y: top - dotSize / 2,\n            width: width + dotSize,\n            height: height + dotSize\n        }))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RenderCurve, {\n            props: this.props,\n            clipPathId: clipPathId\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ErrorBar__WEBPACK_IMPORTED_MODULE_12__.SetErrorBarPreferredDirection, {\n            direction: layout === 'horizontal' ? 'y' : 'x'\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_13__.SetErrorBarContext, {\n            xAxisId: xAxisId,\n            yAxisId: yAxisId,\n            data: points,\n            dataPointFormatter: errorBarDataPointFormatter,\n            errorBarOffset: 0\n        }, this.props.children))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_component_ActivePoints__WEBPACK_IMPORTED_MODULE_14__.ActivePoints, {\n            activeDot: this.props.activeDot,\n            points: points,\n            mainColor: this.props.stroke,\n            itemDataKey: this.props.dataKey\n        }));\n    }\n    constructor(){\n        super(...arguments);\n        _defineProperty(this, \"id\", (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.uniqueId)('recharts-line-'));\n    }\n}\nvar defaultLineProps = {\n    activeDot: true,\n    animateNewValues: true,\n    animationBegin: 0,\n    animationDuration: 1500,\n    animationEasing: 'ease',\n    connectNulls: false,\n    dot: true,\n    fill: '#fff',\n    hide: false,\n    isAnimationActive: !_util_Global__WEBPACK_IMPORTED_MODULE_15__.Global.isSsr,\n    label: false,\n    legendType: 'line',\n    stroke: '#3182bd',\n    strokeWidth: 1,\n    xAxisId: 0,\n    yAxisId: 0\n};\nfunction LineImpl(props) {\n    _s2();\n    var _resolveDefaultProps = (0,_util_resolveDefaultProps__WEBPACK_IMPORTED_MODULE_16__.resolveDefaultProps)(props, defaultLineProps), { activeDot, animateNewValues, animationBegin, animationDuration, animationEasing, connectNulls, dot, hide, isAnimationActive, label, legendType, xAxisId, yAxisId } = _resolveDefaultProps, everythingElse = _objectWithoutProperties(_resolveDefaultProps, _excluded2);\n    var { needClip } = (0,_GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_11__.useNeedsClip)(xAxisId, yAxisId);\n    var { height, width, x: left, y: top } = (0,_hooks__WEBPACK_IMPORTED_MODULE_17__.usePlotArea)();\n    var layout = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_18__.useChartLayout)();\n    var isPanorama = (0,_context_PanoramaContext__WEBPACK_IMPORTED_MODULE_19__.useIsPanorama)();\n    var lineSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"LineImpl.useMemo[lineSettings]\": ()=>({\n                dataKey: props.dataKey,\n                data: props.data\n            })\n    }[\"LineImpl.useMemo[lineSettings]\"], [\n        props.dataKey,\n        props.data\n    ]);\n    var points = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_20__.useAppSelector)({\n        \"LineImpl.useAppSelector[points]\": (state)=>(0,_state_selectors_lineSelectors__WEBPACK_IMPORTED_MODULE_21__.selectLinePoints)(state, xAxisId, yAxisId, isPanorama, lineSettings)\n    }[\"LineImpl.useAppSelector[points]\"]);\n    if (layout !== 'horizontal' && layout !== 'vertical') {\n        // Cannot render Line in an unsupported layout\n        return null;\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LineWithState, _extends({}, everythingElse, {\n        connectNulls: connectNulls,\n        dot: dot,\n        activeDot: activeDot,\n        animateNewValues: animateNewValues,\n        animationBegin: animationBegin,\n        animationDuration: animationDuration,\n        animationEasing: animationEasing,\n        isAnimationActive: isAnimationActive,\n        hide: hide,\n        label: label,\n        legendType: legendType,\n        xAxisId: xAxisId,\n        yAxisId: yAxisId,\n        points: points,\n        layout: layout,\n        height: height,\n        width: width,\n        left: left,\n        top: top,\n        needClip: needClip\n    }));\n}\n_s2(LineImpl, \"Y/eCbDOuloUNjeeKnzA826DKGLo=\", false, function() {\n    return [\n        _GraphicalItemClipPath__WEBPACK_IMPORTED_MODULE_11__.useNeedsClip,\n        _hooks__WEBPACK_IMPORTED_MODULE_17__.usePlotArea,\n        _context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_18__.useChartLayout,\n        _context_PanoramaContext__WEBPACK_IMPORTED_MODULE_19__.useIsPanorama,\n        _state_hooks__WEBPACK_IMPORTED_MODULE_20__.useAppSelector\n    ];\n});\n_c4 = LineImpl;\nfunction computeLinePoints(_ref6) {\n    var { layout, xAxis, yAxis, xAxisTicks, yAxisTicks, dataKey, bandSize, displayedData } = _ref6;\n    return displayedData.map((entry, index)=>{\n        // @ts-expect-error getValueByDataKey does not validate the output type\n        var value = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getValueByDataKey)(entry, dataKey);\n        if (layout === 'horizontal') {\n            return {\n                x: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getCateCoordinateOfLine)({\n                    axis: xAxis,\n                    ticks: xAxisTicks,\n                    bandSize,\n                    entry,\n                    index\n                }),\n                y: (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.isNullish)(value) ? null : yAxis.scale(value),\n                value,\n                payload: entry\n            };\n        }\n        return {\n            x: (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.isNullish)(value) ? null : xAxis.scale(value),\n            y: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getCateCoordinateOfLine)({\n                axis: yAxis,\n                ticks: yAxisTicks,\n                bandSize,\n                entry,\n                index\n            }),\n            value,\n            payload: entry\n        };\n    });\n}\nclass Line extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n    render() {\n        // Report all props to Redux store first, before calling any hooks, to avoid circular dependencies.\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_context_CartesianGraphicalItemContext__WEBPACK_IMPORTED_MODULE_13__.CartesianGraphicalItemContext, {\n            type: \"line\",\n            data: this.props.data,\n            xAxisId: this.props.xAxisId,\n            yAxisId: this.props.yAxisId,\n            zAxisId: 0,\n            dataKey: this.props.dataKey,\n            stackId: undefined,\n            hide: this.props.hide,\n            barSize: undefined\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_state_SetLegendPayload__WEBPACK_IMPORTED_MODULE_22__.SetLegendPayload, {\n            legendPayload: computeLegendPayloadFromAreaData(this.props)\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_state_SetTooltipEntrySettings__WEBPACK_IMPORTED_MODULE_23__.SetTooltipEntrySettings, {\n            fn: getTooltipEntrySettings,\n            args: this.props\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LineImpl, this.props));\n    }\n}\n_defineProperty(Line, \"displayName\", 'Line');\n_defineProperty(Line, \"defaultProps\", defaultLineProps);\nvar _c, _c1, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Dots\");\n$RefreshReg$(_c1, \"StaticCurve\");\n$RefreshReg$(_c2, \"CurveWithAnimation\");\n$RefreshReg$(_c3, \"RenderCurve\");\n$RefreshReg$(_c4, \"LineImpl\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/recharts/es6/cartesian/Line.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/recharts/es6/cartesian/XAxis.js":
/*!******************************************************!*\
  !*** ./node_modules/recharts/es6/cartesian/XAxis.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   XAxis: () => (/* binding */ XAxis)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _CartesianAxis__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./CartesianAxis */ \"(app-pages-browser)/./node_modules/recharts/es6/cartesian/CartesianAxis.js\");\n/* harmony import */ var _state_hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../state/hooks */ \"(app-pages-browser)/./node_modules/recharts/es6/state/hooks.js\");\n/* harmony import */ var _state_cartesianAxisSlice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../state/cartesianAxisSlice */ \"(app-pages-browser)/./node_modules/recharts/es6/state/cartesianAxisSlice.js\");\n/* harmony import */ var _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../state/selectors/axisSelectors */ \"(app-pages-browser)/./node_modules/recharts/es6/state/selectors/axisSelectors.js\");\n/* harmony import */ var _state_selectors_selectChartOffsetInternal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../state/selectors/selectChartOffsetInternal */ \"(app-pages-browser)/./node_modules/recharts/es6/state/selectors/selectChartOffsetInternal.js\");\n/* harmony import */ var _context_PanoramaContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../context/PanoramaContext */ \"(app-pages-browser)/./node_modules/recharts/es6/context/PanoramaContext.js\");\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\nvar _excluded = [\n    \"children\"\n], _excluded2 = [\n    \"dangerouslySetInnerHTML\",\n    \"ticks\"\n];\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function(n) {\n        for(var e = 1; e < arguments.length; e++){\n            var t = arguments[e];\n            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n        }\n        return n;\n    }, _extends.apply(null, arguments);\n}\nfunction _objectWithoutProperties(e, t) {\n    if (null == e) return {};\n    var o, r, i = _objectWithoutPropertiesLoose(e, t);\n    if (Object.getOwnPropertySymbols) {\n        var n = Object.getOwnPropertySymbols(e);\n        for(r = 0; r < n.length; r++)o = n[r], -1 === t.indexOf(o) && ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n    }\n    return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n    if (null == r) return {};\n    var t = {};\n    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {\n        if (-1 !== e.indexOf(n)) continue;\n        t[n] = r[n];\n    }\n    return t;\n}\n/**\n * @fileOverview X Axis\n */ \n\n\n\n\n\n\n\n\nfunction SetXAxisSettings(props) {\n    _s();\n    var dispatch = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppDispatch)();\n    var settings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"SetXAxisSettings.useMemo[settings]\": ()=>{\n            var { children } = props, rest = _objectWithoutProperties(props, _excluded);\n            return rest;\n        }\n    }[\"SetXAxisSettings.useMemo[settings]\"], [\n        props\n    ]);\n    var synchronizedSettings = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)({\n        \"SetXAxisSettings.useAppSelector[synchronizedSettings]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.selectXAxisSettings)(state, settings.id)\n    }[\"SetXAxisSettings.useAppSelector[synchronizedSettings]\"]);\n    var settingsAreSynchronized = settings === synchronizedSettings;\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"SetXAxisSettings.useEffect\": ()=>{\n            dispatch((0,_state_cartesianAxisSlice__WEBPACK_IMPORTED_MODULE_4__.addXAxis)(settings));\n            return ({\n                \"SetXAxisSettings.useEffect\": ()=>{\n                    dispatch((0,_state_cartesianAxisSlice__WEBPACK_IMPORTED_MODULE_4__.removeXAxis)(settings));\n                }\n            })[\"SetXAxisSettings.useEffect\"];\n        }\n    }[\"SetXAxisSettings.useEffect\"], [\n        settings,\n        dispatch\n    ]);\n    if (settingsAreSynchronized) {\n        return props.children;\n    }\n    return null;\n}\n_s(SetXAxisSettings, \"OUGZ3uvs8N4MDfhfABe7m+FqzQw=\", false, function() {\n    return [\n        _state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppDispatch,\n        _state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector\n    ];\n});\n_c = SetXAxisSettings;\nvar XAxisImpl = (props)=>{\n    _s1();\n    var { xAxisId, className } = props;\n    var viewBox = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)(_state_selectors_selectChartOffsetInternal__WEBPACK_IMPORTED_MODULE_5__.selectAxisViewBox);\n    var isPanorama = (0,_context_PanoramaContext__WEBPACK_IMPORTED_MODULE_6__.useIsPanorama)();\n    var axisType = 'xAxis';\n    var scale = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)({\n        \"XAxisImpl.useAppSelector[scale]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.selectAxisScale)(state, axisType, xAxisId, isPanorama)\n    }[\"XAxisImpl.useAppSelector[scale]\"]);\n    var cartesianTickItems = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)({\n        \"XAxisImpl.useAppSelector[cartesianTickItems]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.selectTicksOfAxis)(state, axisType, xAxisId, isPanorama)\n    }[\"XAxisImpl.useAppSelector[cartesianTickItems]\"]);\n    var axisSize = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)({\n        \"XAxisImpl.useAppSelector[axisSize]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.selectXAxisSize)(state, xAxisId)\n    }[\"XAxisImpl.useAppSelector[axisSize]\"]);\n    var position = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)({\n        \"XAxisImpl.useAppSelector[position]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.selectXAxisPosition)(state, xAxisId)\n    }[\"XAxisImpl.useAppSelector[position]\"]);\n    if (axisSize == null || position == null) {\n        return null;\n    }\n    var { dangerouslySetInnerHTML, ticks } = props, allOtherProps = _objectWithoutProperties(props, _excluded2);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CartesianAxis__WEBPACK_IMPORTED_MODULE_7__.CartesianAxis, _extends({}, allOtherProps, {\n        scale: scale,\n        x: position.x,\n        y: position.y,\n        width: axisSize.width,\n        height: axisSize.height,\n        className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)(\"recharts-\".concat(axisType, \" \").concat(axisType), className),\n        viewBox: viewBox,\n        ticks: cartesianTickItems\n    }));\n};\n_s1(XAxisImpl, \"OXQywIi4Aj/jjID3aUrMjqmhDNY=\", false, function() {\n    return [\n        _state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector,\n        _context_PanoramaContext__WEBPACK_IMPORTED_MODULE_6__.useIsPanorama,\n        _state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector,\n        _state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector,\n        _state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector,\n        _state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector\n    ];\n});\n_c1 = XAxisImpl;\nvar XAxisSettingsDispatcher = (props)=>{\n    var _props$interval, _props$includeHidden, _props$angle, _props$minTickGap, _props$tick;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SetXAxisSettings, {\n        interval: (_props$interval = props.interval) !== null && _props$interval !== void 0 ? _props$interval : 'preserveEnd',\n        id: props.xAxisId,\n        scale: props.scale,\n        type: props.type,\n        padding: props.padding,\n        allowDataOverflow: props.allowDataOverflow,\n        domain: props.domain,\n        dataKey: props.dataKey,\n        allowDuplicatedCategory: props.allowDuplicatedCategory,\n        allowDecimals: props.allowDecimals,\n        tickCount: props.tickCount,\n        includeHidden: (_props$includeHidden = props.includeHidden) !== null && _props$includeHidden !== void 0 ? _props$includeHidden : false,\n        reversed: props.reversed,\n        ticks: props.ticks,\n        height: props.height,\n        orientation: props.orientation,\n        mirror: props.mirror,\n        hide: props.hide,\n        unit: props.unit,\n        name: props.name,\n        angle: (_props$angle = props.angle) !== null && _props$angle !== void 0 ? _props$angle : 0,\n        minTickGap: (_props$minTickGap = props.minTickGap) !== null && _props$minTickGap !== void 0 ? _props$minTickGap : 5,\n        tick: (_props$tick = props.tick) !== null && _props$tick !== void 0 ? _props$tick : true,\n        tickFormatter: props.tickFormatter\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(XAxisImpl, props));\n};\n_c2 = XAxisSettingsDispatcher;\n// eslint-disable-next-line react/prefer-stateless-function\nclass XAxis extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n    render() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(XAxisSettingsDispatcher, this.props);\n    }\n}\n_defineProperty(XAxis, \"displayName\", 'XAxis');\n_defineProperty(XAxis, \"defaultProps\", {\n    allowDataOverflow: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.allowDataOverflow,\n    allowDecimals: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.allowDecimals,\n    allowDuplicatedCategory: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.allowDuplicatedCategory,\n    height: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.height,\n    hide: false,\n    mirror: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.mirror,\n    orientation: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.orientation,\n    padding: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.padding,\n    reversed: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.reversed,\n    scale: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.scale,\n    tickCount: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.tickCount,\n    type: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_3__.implicitXAxis.type,\n    xAxisId: 0\n});\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"SetXAxisSettings\");\n$RefreshReg$(_c1, \"XAxisImpl\");\n$RefreshReg$(_c2, \"XAxisSettingsDispatcher\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/recharts/es6/cartesian/XAxis.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/recharts/es6/cartesian/YAxis.js":
/*!******************************************************!*\
  !*** ./node_modules/recharts/es6/cartesian/YAxis.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   YAxis: () => (/* binding */ YAxis),\n/* harmony export */   YAxisDefaultProps: () => (/* binding */ YAxisDefaultProps)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _CartesianAxis__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./CartesianAxis */ \"(app-pages-browser)/./node_modules/recharts/es6/cartesian/CartesianAxis.js\");\n/* harmony import */ var _state_cartesianAxisSlice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../state/cartesianAxisSlice */ \"(app-pages-browser)/./node_modules/recharts/es6/state/cartesianAxisSlice.js\");\n/* harmony import */ var _state_hooks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../state/hooks */ \"(app-pages-browser)/./node_modules/recharts/es6/state/hooks.js\");\n/* harmony import */ var _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../state/selectors/axisSelectors */ \"(app-pages-browser)/./node_modules/recharts/es6/state/selectors/axisSelectors.js\");\n/* harmony import */ var _state_selectors_selectChartOffsetInternal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../state/selectors/selectChartOffsetInternal */ \"(app-pages-browser)/./node_modules/recharts/es6/state/selectors/selectChartOffsetInternal.js\");\n/* harmony import */ var _context_PanoramaContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../context/PanoramaContext */ \"(app-pages-browser)/./node_modules/recharts/es6/context/PanoramaContext.js\");\n/* harmony import */ var _util_YAxisUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/YAxisUtils */ \"(app-pages-browser)/./node_modules/recharts/es6/util/YAxisUtils.js\");\n/* harmony import */ var _component_Label__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../component/Label */ \"(app-pages-browser)/./node_modules/recharts/es6/component/Label.js\");\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\nvar _excluded = [\n    \"dangerouslySetInnerHTML\",\n    \"ticks\"\n];\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function(n) {\n        for(var e = 1; e < arguments.length; e++){\n            var t = arguments[e];\n            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n        }\n        return n;\n    }, _extends.apply(null, arguments);\n}\nfunction _objectWithoutProperties(e, t) {\n    if (null == e) return {};\n    var o, r, i = _objectWithoutPropertiesLoose(e, t);\n    if (Object.getOwnPropertySymbols) {\n        var n = Object.getOwnPropertySymbols(e);\n        for(r = 0; r < n.length; r++)o = n[r], -1 === t.indexOf(o) && ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n    }\n    return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n    if (null == r) return {};\n    var t = {};\n    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {\n        if (-1 !== e.indexOf(n)) continue;\n        t[n] = r[n];\n    }\n    return t;\n}\n\n\n\n\n\n\n\n\n\n\n\nfunction SetYAxisSettings(settings) {\n    _s();\n    var dispatch = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppDispatch)();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"SetYAxisSettings.useEffect\": ()=>{\n            dispatch((0,_state_cartesianAxisSlice__WEBPACK_IMPORTED_MODULE_3__.addYAxis)(settings));\n            return ({\n                \"SetYAxisSettings.useEffect\": ()=>{\n                    dispatch((0,_state_cartesianAxisSlice__WEBPACK_IMPORTED_MODULE_3__.removeYAxis)(settings));\n                }\n            })[\"SetYAxisSettings.useEffect\"];\n        }\n    }[\"SetYAxisSettings.useEffect\"], [\n        settings,\n        dispatch\n    ]);\n    return null;\n}\n_s(SetYAxisSettings, \"DKdeqxp2QYw2p6z8/ErYMRK/Ubo=\", false, function() {\n    return [\n        _state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppDispatch\n    ];\n});\n_c = SetYAxisSettings;\nvar YAxisImpl = (props)=>{\n    _s1();\n    var _cartesianAxisRef$cur;\n    var { yAxisId, className, width, label } = props;\n    var cartesianAxisRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var labelRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var viewBox = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)(_state_selectors_selectChartOffsetInternal__WEBPACK_IMPORTED_MODULE_4__.selectAxisViewBox);\n    var isPanorama = (0,_context_PanoramaContext__WEBPACK_IMPORTED_MODULE_5__.useIsPanorama)();\n    var dispatch = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppDispatch)();\n    var axisType = 'yAxis';\n    var scale = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)({\n        \"YAxisImpl.useAppSelector[scale]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.selectAxisScale)(state, axisType, yAxisId, isPanorama)\n    }[\"YAxisImpl.useAppSelector[scale]\"]);\n    var axisSize = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)({\n        \"YAxisImpl.useAppSelector[axisSize]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.selectYAxisSize)(state, yAxisId)\n    }[\"YAxisImpl.useAppSelector[axisSize]\"]);\n    var position = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)({\n        \"YAxisImpl.useAppSelector[position]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.selectYAxisPosition)(state, yAxisId)\n    }[\"YAxisImpl.useAppSelector[position]\"]);\n    var cartesianTickItems = (0,_state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector)({\n        \"YAxisImpl.useAppSelector[cartesianTickItems]\": (state)=>(0,_state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.selectTicksOfAxis)(state, axisType, yAxisId, isPanorama)\n    }[\"YAxisImpl.useAppSelector[cartesianTickItems]\"]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)({\n        \"YAxisImpl.useLayoutEffect\": ()=>{\n            var _axisComponent$tickRe;\n            // No dynamic width calculation is done when width !== 'auto'\n            // or when a function/react element is used for label\n            if (width !== 'auto' || !axisSize || (0,_component_Label__WEBPACK_IMPORTED_MODULE_7__.isLabelContentAFunction)(label) || /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(label)) return;\n            var axisComponent = cartesianAxisRef.current;\n            var tickNodes = axisComponent === null || axisComponent === void 0 || (_axisComponent$tickRe = axisComponent.tickRefs) === null || _axisComponent$tickRe === void 0 ? void 0 : _axisComponent$tickRe.current;\n            var { tickSize, tickMargin } = axisComponent.props;\n            // get calculated width based on the label width, ticks etc\n            var updatedYAxisWidth = (0,_util_YAxisUtils__WEBPACK_IMPORTED_MODULE_8__.getCalculatedYAxisWidth)({\n                ticks: tickNodes,\n                label: labelRef.current,\n                labelGapWithTick: 5,\n                tickSize,\n                tickMargin\n            });\n            // if the width has changed, dispatch an action to update the width\n            if (Math.round(axisSize.width) !== Math.round(updatedYAxisWidth)) dispatch((0,_state_cartesianAxisSlice__WEBPACK_IMPORTED_MODULE_3__.updateYAxisWidth)({\n                id: yAxisId,\n                width: updatedYAxisWidth\n            }));\n        }\n    }[\"YAxisImpl.useLayoutEffect\"], [\n        cartesianAxisRef,\n        cartesianAxisRef === null || cartesianAxisRef === void 0 || (_cartesianAxisRef$cur = cartesianAxisRef.current) === null || _cartesianAxisRef$cur === void 0 || (_cartesianAxisRef$cur = _cartesianAxisRef$cur.tickRefs) === null || _cartesianAxisRef$cur === void 0 ? void 0 : _cartesianAxisRef$cur.current,\n        axisSize === null || axisSize === void 0 ? void 0 : axisSize.width,\n        axisSize,\n        dispatch,\n        label,\n        yAxisId,\n        width\n    ]);\n    if (axisSize == null || position == null) {\n        return null;\n    }\n    var { dangerouslySetInnerHTML, ticks } = props, allOtherProps = _objectWithoutProperties(props, _excluded);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CartesianAxis__WEBPACK_IMPORTED_MODULE_9__.CartesianAxis, _extends({}, allOtherProps, {\n        ref: cartesianAxisRef,\n        labelRef: labelRef,\n        scale: scale,\n        x: position.x,\n        y: position.y,\n        width: axisSize.width,\n        height: axisSize.height,\n        className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__.clsx)(\"recharts-\".concat(axisType, \" \").concat(axisType), className),\n        viewBox: viewBox,\n        ticks: cartesianTickItems\n    }));\n};\n_s1(YAxisImpl, \"iW9giKKTAtn/YjmfW5Faom/S9RM=\", false, function() {\n    return [\n        _state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector,\n        _context_PanoramaContext__WEBPACK_IMPORTED_MODULE_5__.useIsPanorama,\n        _state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppDispatch,\n        _state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector,\n        _state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector,\n        _state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector,\n        _state_hooks__WEBPACK_IMPORTED_MODULE_2__.useAppSelector\n    ];\n});\n_c1 = YAxisImpl;\nvar YAxisSettingsDispatcher = (props)=>{\n    var _props$interval, _props$includeHidden, _props$angle, _props$minTickGap, _props$tick;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SetYAxisSettings, {\n        interval: (_props$interval = props.interval) !== null && _props$interval !== void 0 ? _props$interval : 'preserveEnd',\n        id: props.yAxisId,\n        scale: props.scale,\n        type: props.type,\n        domain: props.domain,\n        allowDataOverflow: props.allowDataOverflow,\n        dataKey: props.dataKey,\n        allowDuplicatedCategory: props.allowDuplicatedCategory,\n        allowDecimals: props.allowDecimals,\n        tickCount: props.tickCount,\n        padding: props.padding,\n        includeHidden: (_props$includeHidden = props.includeHidden) !== null && _props$includeHidden !== void 0 ? _props$includeHidden : false,\n        reversed: props.reversed,\n        ticks: props.ticks,\n        width: props.width,\n        orientation: props.orientation,\n        mirror: props.mirror,\n        hide: props.hide,\n        unit: props.unit,\n        name: props.name,\n        angle: (_props$angle = props.angle) !== null && _props$angle !== void 0 ? _props$angle : 0,\n        minTickGap: (_props$minTickGap = props.minTickGap) !== null && _props$minTickGap !== void 0 ? _props$minTickGap : 5,\n        tick: (_props$tick = props.tick) !== null && _props$tick !== void 0 ? _props$tick : true,\n        tickFormatter: props.tickFormatter\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(YAxisImpl, props));\n};\n_c2 = YAxisSettingsDispatcher;\nvar YAxisDefaultProps = {\n    allowDataOverflow: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.allowDataOverflow,\n    allowDecimals: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.allowDecimals,\n    allowDuplicatedCategory: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.allowDuplicatedCategory,\n    hide: false,\n    mirror: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.mirror,\n    orientation: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.orientation,\n    padding: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.padding,\n    reversed: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.reversed,\n    scale: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.scale,\n    tickCount: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.tickCount,\n    type: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.type,\n    width: _state_selectors_axisSelectors__WEBPACK_IMPORTED_MODULE_6__.implicitYAxis.width,\n    yAxisId: 0\n};\n// eslint-disable-next-line react/prefer-stateless-function\nclass YAxis extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n    render() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(YAxisSettingsDispatcher, this.props);\n    }\n}\n_defineProperty(YAxis, \"displayName\", 'YAxis');\n_defineProperty(YAxis, \"defaultProps\", YAxisDefaultProps);\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"SetYAxisSettings\");\n$RefreshReg$(_c1, \"YAxisImpl\");\n$RefreshReg$(_c2, \"YAxisSettingsDispatcher\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/recharts/es6/cartesian/YAxis.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/recharts/es6/cartesian/getEquidistantTicks.js":
/*!********************************************************************!*\
  !*** ./node_modules/recharts/es6/cartesian/getEquidistantTicks.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEquidistantTicks: () => (/* binding */ getEquidistantTicks)\n/* harmony export */ });\n/* harmony import */ var _util_TickUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/TickUtils */ \"(app-pages-browser)/./node_modules/recharts/es6/util/TickUtils.js\");\n/* harmony import */ var _util_getEveryNthWithCondition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/getEveryNthWithCondition */ \"(app-pages-browser)/./node_modules/recharts/es6/util/getEveryNthWithCondition.js\");\n\n\nfunction getEquidistantTicks(sign, boundaries, getTickSize, ticks, minTickGap) {\n    // If the ticks are readonly, then the slice might not be necessary\n    var result = (ticks || []).slice();\n    var { start: initialStart, end } = boundaries;\n    var index = 0;\n    // Premature optimisation idea 1: Estimate a lower bound, and start from there.\n    // For now, start from every tick\n    var stepsize = 1;\n    var start = initialStart;\n    var _loop = function _loop() {\n        // Given stepsize, evaluate whether every stepsize-th tick can be shown.\n        // If it can not, then increase the stepsize by 1, and try again.\n        var entry = ticks === null || ticks === void 0 ? void 0 : ticks[index];\n        // Break condition - If we have evaluated all the ticks, then we are done.\n        if (entry === undefined) {\n            return {\n                v: (0,_util_getEveryNthWithCondition__WEBPACK_IMPORTED_MODULE_0__.getEveryNthWithCondition)(ticks, stepsize)\n            };\n        }\n        // Check if the element collides with the next element\n        var i = index;\n        var size;\n        var getSize = ()=>{\n            if (size === undefined) {\n                size = getTickSize(entry, i);\n            }\n            return size;\n        };\n        var tickCoord = entry.coordinate;\n        // We will always show the first tick.\n        var isShow = index === 0 || (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_1__.isVisible)(sign, tickCoord, getSize, start, end);\n        if (!isShow) {\n            // Start all over with a larger stepsize\n            index = 0;\n            start = initialStart;\n            stepsize += 1;\n        }\n        if (isShow) {\n            // If it can be shown, update the start\n            start = tickCoord + sign * (getSize() / 2 + minTickGap);\n            index += stepsize;\n        }\n    }, _ret;\n    while(stepsize <= result.length){\n        _ret = _loop();\n        if (_ret) return _ret.v;\n    }\n    return [];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWNoYXJ0cy9lczYvY2FydGVzaWFuL2dldEVxdWlkaXN0YW50VGlja3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQThDO0FBQzhCO0FBQ3JFLFNBQVNFLG9CQUFvQkMsSUFBSSxFQUFFQyxVQUFVLEVBQUVDLFdBQVcsRUFBRUMsS0FBSyxFQUFFQyxVQUFVO0lBQ2xGLG1FQUFtRTtJQUNuRSxJQUFJQyxTQUFTLENBQUNGLFNBQVMsRUFBRSxFQUFFRyxLQUFLO0lBQ2hDLElBQUksRUFDRkMsT0FBT0MsWUFBWSxFQUNuQkMsR0FBRyxFQUNKLEdBQUdSO0lBQ0osSUFBSVMsUUFBUTtJQUNaLCtFQUErRTtJQUMvRSxpQ0FBaUM7SUFDakMsSUFBSUMsV0FBVztJQUNmLElBQUlKLFFBQVFDO0lBQ1osSUFBSUksUUFBUSxTQUFTQTtRQUNqQix3RUFBd0U7UUFDeEUsaUVBQWlFO1FBRWpFLElBQUlDLFFBQVFWLFVBQVUsUUFBUUEsVUFBVSxLQUFLLElBQUksS0FBSyxJQUFJQSxLQUFLLENBQUNPLE1BQU07UUFFdEUsMEVBQTBFO1FBQzFFLElBQUlHLFVBQVVDLFdBQVc7WUFDdkIsT0FBTztnQkFDTEMsR0FBR2pCLHdGQUF3QkEsQ0FBQ0ssT0FBT1E7WUFDckM7UUFDRjtRQUVBLHNEQUFzRDtRQUN0RCxJQUFJSyxJQUFJTjtRQUNSLElBQUlPO1FBQ0osSUFBSUMsVUFBVTtZQUNaLElBQUlELFNBQVNILFdBQVc7Z0JBQ3RCRyxPQUFPZixZQUFZVyxPQUFPRztZQUM1QjtZQUNBLE9BQU9DO1FBQ1Q7UUFDQSxJQUFJRSxZQUFZTixNQUFNTyxVQUFVO1FBQ2hDLHNDQUFzQztRQUN0QyxJQUFJQyxTQUFTWCxVQUFVLEtBQUtiLDBEQUFTQSxDQUFDRyxNQUFNbUIsV0FBV0QsU0FBU1gsT0FBT0U7UUFDdkUsSUFBSSxDQUFDWSxRQUFRO1lBQ1gsd0NBQXdDO1lBQ3hDWCxRQUFRO1lBQ1JILFFBQVFDO1lBQ1JHLFlBQVk7UUFDZDtRQUNBLElBQUlVLFFBQVE7WUFDVix1Q0FBdUM7WUFDdkNkLFFBQVFZLFlBQVluQixPQUFRa0IsQ0FBQUEsWUFBWSxJQUFJZCxVQUFTO1lBQ3JETSxTQUFTQztRQUNYO0lBQ0YsR0FDQVc7SUFDRixNQUFPWCxZQUFZTixPQUFPa0IsTUFBTSxDQUFFO1FBQ2hDRCxPQUFPVjtRQUNQLElBQUlVLE1BQU0sT0FBT0EsS0FBS1AsQ0FBQztJQUN6QjtJQUNBLE9BQU8sRUFBRTtBQUNYIiwic291cmNlcyI6WyIvcm9vdC9oeXBlcnN5bmMtY2xpZW50LXB5dGhvbi9mcm9udGVuZC1kZXBsb3ltZW50L25vZGVfbW9kdWxlcy9yZWNoYXJ0cy9lczYvY2FydGVzaWFuL2dldEVxdWlkaXN0YW50VGlja3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNWaXNpYmxlIH0gZnJvbSAnLi4vdXRpbC9UaWNrVXRpbHMnO1xuaW1wb3J0IHsgZ2V0RXZlcnlOdGhXaXRoQ29uZGl0aW9uIH0gZnJvbSAnLi4vdXRpbC9nZXRFdmVyeU50aFdpdGhDb25kaXRpb24nO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEVxdWlkaXN0YW50VGlja3Moc2lnbiwgYm91bmRhcmllcywgZ2V0VGlja1NpemUsIHRpY2tzLCBtaW5UaWNrR2FwKSB7XG4gIC8vIElmIHRoZSB0aWNrcyBhcmUgcmVhZG9ubHksIHRoZW4gdGhlIHNsaWNlIG1pZ2h0IG5vdCBiZSBuZWNlc3NhcnlcbiAgdmFyIHJlc3VsdCA9ICh0aWNrcyB8fCBbXSkuc2xpY2UoKTtcbiAgdmFyIHtcbiAgICBzdGFydDogaW5pdGlhbFN0YXJ0LFxuICAgIGVuZFxuICB9ID0gYm91bmRhcmllcztcbiAgdmFyIGluZGV4ID0gMDtcbiAgLy8gUHJlbWF0dXJlIG9wdGltaXNhdGlvbiBpZGVhIDE6IEVzdGltYXRlIGEgbG93ZXIgYm91bmQsIGFuZCBzdGFydCBmcm9tIHRoZXJlLlxuICAvLyBGb3Igbm93LCBzdGFydCBmcm9tIGV2ZXJ5IHRpY2tcbiAgdmFyIHN0ZXBzaXplID0gMTtcbiAgdmFyIHN0YXJ0ID0gaW5pdGlhbFN0YXJ0O1xuICB2YXIgX2xvb3AgPSBmdW5jdGlvbiBfbG9vcCgpIHtcbiAgICAgIC8vIEdpdmVuIHN0ZXBzaXplLCBldmFsdWF0ZSB3aGV0aGVyIGV2ZXJ5IHN0ZXBzaXplLXRoIHRpY2sgY2FuIGJlIHNob3duLlxuICAgICAgLy8gSWYgaXQgY2FuIG5vdCwgdGhlbiBpbmNyZWFzZSB0aGUgc3RlcHNpemUgYnkgMSwgYW5kIHRyeSBhZ2Fpbi5cblxuICAgICAgdmFyIGVudHJ5ID0gdGlja3MgPT09IG51bGwgfHwgdGlja3MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHRpY2tzW2luZGV4XTtcblxuICAgICAgLy8gQnJlYWsgY29uZGl0aW9uIC0gSWYgd2UgaGF2ZSBldmFsdWF0ZWQgYWxsIHRoZSB0aWNrcywgdGhlbiB3ZSBhcmUgZG9uZS5cbiAgICAgIGlmIChlbnRyeSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdjogZ2V0RXZlcnlOdGhXaXRoQ29uZGl0aW9uKHRpY2tzLCBzdGVwc2l6ZSlcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgLy8gQ2hlY2sgaWYgdGhlIGVsZW1lbnQgY29sbGlkZXMgd2l0aCB0aGUgbmV4dCBlbGVtZW50XG4gICAgICB2YXIgaSA9IGluZGV4O1xuICAgICAgdmFyIHNpemU7XG4gICAgICB2YXIgZ2V0U2l6ZSA9ICgpID0+IHtcbiAgICAgICAgaWYgKHNpemUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHNpemUgPSBnZXRUaWNrU2l6ZShlbnRyeSwgaSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNpemU7XG4gICAgICB9O1xuICAgICAgdmFyIHRpY2tDb29yZCA9IGVudHJ5LmNvb3JkaW5hdGU7XG4gICAgICAvLyBXZSB3aWxsIGFsd2F5cyBzaG93IHRoZSBmaXJzdCB0aWNrLlxuICAgICAgdmFyIGlzU2hvdyA9IGluZGV4ID09PSAwIHx8IGlzVmlzaWJsZShzaWduLCB0aWNrQ29vcmQsIGdldFNpemUsIHN0YXJ0LCBlbmQpO1xuICAgICAgaWYgKCFpc1Nob3cpIHtcbiAgICAgICAgLy8gU3RhcnQgYWxsIG92ZXIgd2l0aCBhIGxhcmdlciBzdGVwc2l6ZVxuICAgICAgICBpbmRleCA9IDA7XG4gICAgICAgIHN0YXJ0ID0gaW5pdGlhbFN0YXJ0O1xuICAgICAgICBzdGVwc2l6ZSArPSAxO1xuICAgICAgfVxuICAgICAgaWYgKGlzU2hvdykge1xuICAgICAgICAvLyBJZiBpdCBjYW4gYmUgc2hvd24sIHVwZGF0ZSB0aGUgc3RhcnRcbiAgICAgICAgc3RhcnQgPSB0aWNrQ29vcmQgKyBzaWduICogKGdldFNpemUoKSAvIDIgKyBtaW5UaWNrR2FwKTtcbiAgICAgICAgaW5kZXggKz0gc3RlcHNpemU7XG4gICAgICB9XG4gICAgfSxcbiAgICBfcmV0O1xuICB3aGlsZSAoc3RlcHNpemUgPD0gcmVzdWx0Lmxlbmd0aCkge1xuICAgIF9yZXQgPSBfbG9vcCgpO1xuICAgIGlmIChfcmV0KSByZXR1cm4gX3JldC52O1xuICB9XG4gIHJldHVybiBbXTtcbn0iXSwibmFtZXMiOlsiaXNWaXNpYmxlIiwiZ2V0RXZlcnlOdGhXaXRoQ29uZGl0aW9uIiwiZ2V0RXF1aWRpc3RhbnRUaWNrcyIsInNpZ24iLCJib3VuZGFyaWVzIiwiZ2V0VGlja1NpemUiLCJ0aWNrcyIsIm1pblRpY2tHYXAiLCJyZXN1bHQiLCJzbGljZSIsInN0YXJ0IiwiaW5pdGlhbFN0YXJ0IiwiZW5kIiwiaW5kZXgiLCJzdGVwc2l6ZSIsIl9sb29wIiwiZW50cnkiLCJ1bmRlZmluZWQiLCJ2IiwiaSIsInNpemUiLCJnZXRTaXplIiwidGlja0Nvb3JkIiwiY29vcmRpbmF0ZSIsImlzU2hvdyIsIl9yZXQiLCJsZW5ndGgiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/recharts/es6/cartesian/getEquidistantTicks.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/recharts/es6/cartesian/getTicks.js":
/*!*********************************************************!*\
  !*** ./node_modules/recharts/es6/cartesian/getTicks.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTicks: () => (/* binding */ getTicks)\n/* harmony export */ });\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/DataUtils */ \"(app-pages-browser)/./node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_DOMUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/DOMUtils */ \"(app-pages-browser)/./node_modules/recharts/es6/util/DOMUtils.js\");\n/* harmony import */ var _util_Global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Global */ \"(app-pages-browser)/./node_modules/recharts/es6/util/Global.js\");\n/* harmony import */ var _util_TickUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/TickUtils */ \"(app-pages-browser)/./node_modules/recharts/es6/util/TickUtils.js\");\n/* harmony import */ var _getEquidistantTicks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getEquidistantTicks */ \"(app-pages-browser)/./node_modules/recharts/es6/cartesian/getEquidistantTicks.js\");\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n\n\n\n\n\nfunction getTicksEnd(sign, boundaries, getTickSize, ticks, minTickGap) {\n    var result = (ticks || []).slice();\n    var len = result.length;\n    var { start } = boundaries;\n    var { end } = boundaries;\n    var _loop = function _loop(i) {\n        var entry = result[i];\n        var size;\n        var getSize = ()=>{\n            if (size === undefined) {\n                size = getTickSize(entry, i);\n            }\n            return size;\n        };\n        if (i === len - 1) {\n            var gap = sign * (entry.coordinate + sign * getSize() / 2 - end);\n            result[i] = entry = _objectSpread(_objectSpread({}, entry), {}, {\n                tickCoord: gap > 0 ? entry.coordinate - gap * sign : entry.coordinate\n            });\n        } else {\n            result[i] = entry = _objectSpread(_objectSpread({}, entry), {}, {\n                tickCoord: entry.coordinate\n            });\n        }\n        var isShow = (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_0__.isVisible)(sign, entry.tickCoord, getSize, start, end);\n        if (isShow) {\n            end = entry.tickCoord - sign * (getSize() / 2 + minTickGap);\n            result[i] = _objectSpread(_objectSpread({}, entry), {}, {\n                isShow: true\n            });\n        }\n    };\n    for(var i = len - 1; i >= 0; i--){\n        _loop(i);\n    }\n    return result;\n}\nfunction getTicksStart(sign, boundaries, getTickSize, ticks, minTickGap, preserveEnd) {\n    // This method is mutating the array so clone is indeed necessary here\n    var result = (ticks || []).slice();\n    var len = result.length;\n    var { start, end } = boundaries;\n    if (preserveEnd) {\n        // Try to guarantee the tail to be displayed\n        var tail = ticks[len - 1];\n        var tailSize = getTickSize(tail, len - 1);\n        var tailGap = sign * (tail.coordinate + sign * tailSize / 2 - end);\n        result[len - 1] = tail = _objectSpread(_objectSpread({}, tail), {}, {\n            tickCoord: tailGap > 0 ? tail.coordinate - tailGap * sign : tail.coordinate\n        });\n        var isTailShow = (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_0__.isVisible)(sign, tail.tickCoord, ()=>tailSize, start, end);\n        if (isTailShow) {\n            end = tail.tickCoord - sign * (tailSize / 2 + minTickGap);\n            result[len - 1] = _objectSpread(_objectSpread({}, tail), {}, {\n                isShow: true\n            });\n        }\n    }\n    var count = preserveEnd ? len - 1 : len;\n    var _loop2 = function _loop2(i) {\n        var entry = result[i];\n        var size;\n        var getSize = ()=>{\n            if (size === undefined) {\n                size = getTickSize(entry, i);\n            }\n            return size;\n        };\n        if (i === 0) {\n            var gap = sign * (entry.coordinate - sign * getSize() / 2 - start);\n            result[i] = entry = _objectSpread(_objectSpread({}, entry), {}, {\n                tickCoord: gap < 0 ? entry.coordinate - gap * sign : entry.coordinate\n            });\n        } else {\n            result[i] = entry = _objectSpread(_objectSpread({}, entry), {}, {\n                tickCoord: entry.coordinate\n            });\n        }\n        var isShow = (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_0__.isVisible)(sign, entry.tickCoord, getSize, start, end);\n        if (isShow) {\n            start = entry.tickCoord + sign * (getSize() / 2 + minTickGap);\n            result[i] = _objectSpread(_objectSpread({}, entry), {}, {\n                isShow: true\n            });\n        }\n    };\n    for(var i = 0; i < count; i++){\n        _loop2(i);\n    }\n    return result;\n}\nfunction getTicks(props, fontSize, letterSpacing) {\n    var { tick, ticks, viewBox, minTickGap, orientation, interval, tickFormatter, unit, angle } = props;\n    if (!ticks || !ticks.length || !tick) {\n        return [];\n    }\n    if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(interval) || _util_Global__WEBPACK_IMPORTED_MODULE_2__.Global.isSsr) {\n        var _getNumberIntervalTic;\n        return (_getNumberIntervalTic = (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_0__.getNumberIntervalTicks)(ticks, (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(interval) ? interval : 0)) !== null && _getNumberIntervalTic !== void 0 ? _getNumberIntervalTic : [];\n    }\n    var candidates = [];\n    var sizeKey = orientation === 'top' || orientation === 'bottom' ? 'width' : 'height';\n    var unitSize = unit && sizeKey === 'width' ? (0,_util_DOMUtils__WEBPACK_IMPORTED_MODULE_3__.getStringSize)(unit, {\n        fontSize,\n        letterSpacing\n    }) : {\n        width: 0,\n        height: 0\n    };\n    var getTickSize = (content, index)=>{\n        var value = typeof tickFormatter === 'function' ? tickFormatter(content.value, index) : content.value;\n        // Recharts only supports angles when sizeKey === 'width'\n        return sizeKey === 'width' ? (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_0__.getAngledTickWidth)((0,_util_DOMUtils__WEBPACK_IMPORTED_MODULE_3__.getStringSize)(value, {\n            fontSize,\n            letterSpacing\n        }), unitSize, angle) : (0,_util_DOMUtils__WEBPACK_IMPORTED_MODULE_3__.getStringSize)(value, {\n            fontSize,\n            letterSpacing\n        })[sizeKey];\n    };\n    var sign = ticks.length >= 2 ? (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_1__.mathSign)(ticks[1].coordinate - ticks[0].coordinate) : 1;\n    var boundaries = (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_0__.getTickBoundaries)(viewBox, sign, sizeKey);\n    if (interval === 'equidistantPreserveStart') {\n        return (0,_getEquidistantTicks__WEBPACK_IMPORTED_MODULE_4__.getEquidistantTicks)(sign, boundaries, getTickSize, ticks, minTickGap);\n    }\n    if (interval === 'preserveStart' || interval === 'preserveStartEnd') {\n        candidates = getTicksStart(sign, boundaries, getTickSize, ticks, minTickGap, interval === 'preserveStartEnd');\n    } else {\n        candidates = getTicksEnd(sign, boundaries, getTickSize, ticks, minTickGap);\n    }\n    return candidates.filter((entry)=>entry.isShow);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/recharts/es6/cartesian/getTicks.js\n"));

/***/ })

}]);