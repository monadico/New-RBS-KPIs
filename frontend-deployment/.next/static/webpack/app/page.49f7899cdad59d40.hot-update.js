"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkRateLimit: () => (/* binding */ checkRateLimit),\n/* harmony export */   clearSession: () => (/* binding */ clearSession),\n/* harmony export */   createSession: () => (/* binding */ createSession),\n/* harmony export */   getSessionInfo: () => (/* binding */ getSessionInfo),\n/* harmony export */   hashPassword: () => (/* binding */ hashPassword),\n/* harmony export */   isSessionValid: () => (/* binding */ isSessionValid),\n/* harmony export */   recordLoginAttempt: () => (/* binding */ recordLoginAttempt),\n/* harmony export */   validateCredentials: () => (/* binding */ validateCredentials)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"(app-pages-browser)/./node_modules/next/dist/compiled/crypto-browserify/index.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n// lib/auth.ts\n\nconst loginAttempts = new Map();\nconst MAX_ATTEMPTS = 5;\nconst LOCKOUT_DURATION = 15 * 60 * 1000 // 15 minutes\n;\nconst SESSION_DURATION = 24 * 60 * 60 * 1000 // 24 hours\n;\n// Get credentials from environment variables ONLY\nconst getCredentials = ()=>{\n    const username = \"admin\";\n    const passwordHash = \"8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918\";\n    return {\n        username,\n        passwordHash\n    };\n};\n// Hash password for comparison\nconst hashPassword = (password)=>{\n    return (0,crypto__WEBPACK_IMPORTED_MODULE_0__.createHash)('sha256').update(password).digest('hex');\n};\n// Check rate limiting\nconst checkRateLimit = (ip)=>{\n    const now = Date.now();\n    const attempt = loginAttempts.get(ip);\n    if (!attempt) {\n        return {\n            allowed: true\n        };\n    }\n    // Check if lockout period has expired\n    if (now - attempt.timestamp > LOCKOUT_DURATION) {\n        loginAttempts.delete(ip);\n        return {\n            allowed: true\n        };\n    }\n    // Check if max attempts exceeded\n    if (attempt.count >= MAX_ATTEMPTS) {\n        const remainingTime = LOCKOUT_DURATION - (now - attempt.timestamp);\n        return {\n            allowed: false,\n            remainingTime\n        };\n    }\n    return {\n        allowed: true\n    };\n};\n// Record login attempt\nconst recordLoginAttempt = (ip, success)=>{\n    const now = Date.now();\n    const attempt = loginAttempts.get(ip);\n    if (success) {\n        // Reset on successful login\n        loginAttempts.delete(ip);\n        return;\n    }\n    if (!attempt) {\n        loginAttempts.set(ip, {\n            timestamp: now,\n            count: 1\n        });\n    } else {\n        attempt.count += 1;\n        attempt.timestamp = now;\n    }\n};\n// Validate credentials\nconst validateCredentials = (username, password)=>{\n    const { username: validUsername, passwordHash: validPasswordHash } = getCredentials();\n    if (!validUsername || !validPasswordHash) return false;\n    const hashedPassword = hashPassword(password);\n    return username === validUsername && hashedPassword === validPasswordHash;\n};\n// Check if session is still valid\nconst isSessionValid = ()=>{\n    const sessionData = localStorage.getItem('rbs-session');\n    if (!sessionData) return false;\n    try {\n        const session = JSON.parse(sessionData);\n        const now = Date.now();\n        return session.expiresAt > now;\n    } catch (e) {\n        return false;\n    }\n};\n// Create session\nconst createSession = ()=>{\n    const expiresAt = Date.now() + SESSION_DURATION;\n    const session = {\n        authenticated: true,\n        expiresAt,\n        createdAt: Date.now()\n    };\n    localStorage.setItem('rbs-session', JSON.stringify(session));\n    localStorage.setItem('rbs-auth', 'true');\n};\n// Clear session\nconst clearSession = ()=>{\n    localStorage.removeItem('rbs-session');\n    localStorage.removeItem('rbs-auth');\n};\n// Get session info\nconst getSessionInfo = ()=>{\n    const sessionData = localStorage.getItem('rbs-session');\n    if (!sessionData) return null;\n    try {\n        return JSON.parse(sessionData);\n    } catch (e) {\n        return null;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/auth.ts\n"));

/***/ })

});